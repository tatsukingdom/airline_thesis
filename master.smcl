{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/tsukik/Downloads/airline_tatsuki/master.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 4 Apr 2022, 08:31:18
{txt}
{com}. 
. do "${c -(}rep_folder{c )-}/code/data_clean.do"
{txt}
{com}. // 1.Data Cleaning File for DB1B public database
. // Name: Tatsuki Kikugawa
. 
. ************************************
. ***ã€€     1.Raw Data merger      ***
. ************************************
. cd "${c -(}rep_folder{c )-}/input"
{res}/Users/tsukik/Downloads/airline_tatsuki/input
{txt}
{com}. /*
> use "dta_raw/public201503", clear
> 
> local quarter 201503 201506 201509 201512 201603 201606 201609 201612 201703 201706 201709 201712 201803 201806 201809 201812 201903 201906 201909 201912 
> 
> disp `"`quarter'"'
> *201503 201506 201509 201512 201603 201606 201609 201612 201703 201706 201709 201712 201803 201806 201809 201812 201903 201906 201909 201912
> 
> foreach q of local quarter {c -(}
>         append using "dta_raw/public`q'"
> {c )-}
> save "dta_clean/merged", replace
> */
. 
. ************************************
. ***  2.basic coding & cleaning  ***
. ************************************
. use "dta_clean/${c -(}dataset{c )-}", clear
{txt}
{com}. drop airport_id trip report_carrier airport_id2* ticketed* trip*
{txt}
{com}. 
. order dollar_id airport_city_code city_market_id state_id opeartin_carrier coupon fare_type distance airport_city city_market_id2 state_id2, after(num_passenger)
{txt}
{com}. 
. rename (index-state_id2_3) (index fare quarter coupon_num passenger dollar_id airport0 city0 state0 carrier1 coupon1 fare_type1 distance1 airport1 city1 state1 carrier2 coupon2 fare_type2 distance2 airport2 city2 state2 carrier3 coupon3 fare_type3 distance3 airport3 city3 state3 carrier4 coupon4 fare_type4 distance4 airport4 city4 state4)
{res}{txt}
{com}. 
. label variable airport0 "Origin Airport Code (3 characters)"
{txt}
{com}. label variable city0 "Origin City Market ID (5 digits)"
{txt}
{com}. label variable state0 "State Code (2 digits)"
{txt}
{com}. 
. * Convert variables to a usable form
. **destring fare quarter coupon_num passenger city0 state0, replace
. local vars fare quarter coupon_num passenger city0 state0
{txt}
{com}. foreach m of local vars {c -(}
{txt}  2{com}.         gen long `m'Temp = real(`m')
{txt}  3{com}.         order `m'Temp, after(`m')
{txt}  4{com}.         drop `m'
{txt}  5{com}.         rename `m'Temp `m'
{txt}  6{com}. {c )-}
{res}{txt}
{com}. 
. forvalues n=1/4 {c -(}
{txt}  2{com}.         *Set our default is restriced coach class (X): restriced
.         gen restricted`n'=1 if inlist(fare_type`n', "F", "C", "Y")
{txt}  3{com}.         replace restricted`n'=0 if inlist(fare_type`n', "G", "D", "X")
{txt}  4{com}.         *tab fare_type`n' restricted`n', m
.         gen business`n'=1 if inlist(fare_type`n', "C", "D")
{txt}  5{com}.         replace business`n'=0 if inlist(fare_type`n', "F", "G", "X", "Y")
{txt}  6{com}.         *tab fare_type`n' business`n', m
.         gen first`n'=1 if inlist(fare_type`n', "F", "G")
{txt}  7{com}.         replace first`n'=0 if inlist(fare_type`n', "C", "D", "X", "Y")
{txt}  8{com}.         *tab fare_type`n' first`n', m
.         **destring distance`n' city`n' state`n', replace
.         local vars distance`n' city`n' state`n'
{txt}  9{com}.         foreach m of local vars {c -(}
{txt} 10{com}.                 gen long `m'Temp = real(`m')
{txt} 11{com}.                 order `m'Temp, after(`m')
{txt} 12{com}.                 drop `m'
{txt} 13{com}.                 rename `m'Temp `m'
{txt} 14{com}.         {c )-}
{txt} 15{com}. {c )-}
{txt}(67,576,110 missing values generated)
(67,544,586 real changes made)
(84,164,450 missing values generated)
(84,132,926 real changes made)
(81,146,659 missing values generated)
(81,115,135 real changes made)
{res}{txt}(71,148,691 missing values generated)
(57,447,581 real changes made)
(84,539,732 missing values generated)
(70,838,622 real changes made)
(82,391,992 missing values generated)
(68,690,882 real changes made)
(12,060,216 missing values generated)
{res}{txt}(12,060,216 missing values generated)
{res}{txt}(12,060,216 missing values generated)
{res}{txt}(80,030,862 missing values generated)
(25,462,183 real changes made)
(85,317,839 missing values generated)
(30,749,160 real changes made)
(84,758,813 missing values generated)
(30,190,134 real changes made)
(53,429,924 missing values generated)
{res}{txt}(53,429,924 missing values generated)
{res}{txt}(53,429,924 missing values generated)
{res}{txt}(81,121,590 missing values generated)
(20,682,968 real changes made)
(85,388,747 missing values generated)
(24,950,125 real changes made)
(84,996,089 missing values generated)
(24,557,467 real changes made)
(60,298,046 missing values generated)
{res}{txt}(60,298,046 missing values generated)
{res}{txt}(60,298,046 missing values generated)
{res}{txt}
{com}. 
. * convert quarter(integer) to datetime
. tostring quarter, gen(quarter_tq3)
{txt}quarter_tq3 generated as {res:str5}

{com}. replace quarter_tq3 = substr(quarter_tq3, 1, 4) + "q" + substr(quarter_tq3, -1, .)
{txt}variable {bf}{res}quarter_tq3{sf}{txt} was {bf}{res}str5{sf}{txt} now {bf}{res}str6{sf}
{txt}(85,761,966 real changes made)

{com}. gen quarter_tq2 = quarterly(quarter_tq3, "YQ") // replace gives type mismatch error
{txt}
{com}. gen quarter_tq = quarter
{txt}
{com}. replace quarter = quarter_tq2
{txt}(85,761,966 real changes made)

{com}. format quarter %tq
{txt}
{com}. drop quarter_tq quarter_tq2 quarter_tq3
{txt}
{com}. 
. ************************************
. ***      3.Sample Selection      ***
. ************************************
. drop if dollar_id == "*" //questionable fare value
{txt}(438,416 observations deleted)

{com}. drop if coupon_num>4 //more than 4 coupons are excluded
{txt}(2,782,910 observations deleted)

{com}. drop opeartin_carrier_4-state_id2_15 dollar_id coupon1 coupon2 coupon3 coupon4
{txt}
{com}. 
. gegen fare_type_group = group(business1 first1 business2 first2 business3 first3 business4 first4)
{res}{txt}{res}{txt}
{com}. gegen IQRfare=iqr(fare), by(fare_type_group)
{res}{txt}{res}{txt}
{com}. gegen P25fare=pctile(fare), p(25) by(fare_type_group)
{res}{txt}{res}{txt}
{com}. gegen P75fare=pctile(fare), p(75) by(fare_type_group)
{res}{txt}{res}{txt}
{com}. gen Ifare=(fare>P75fare+3*IQRfare | fare<P25fare-3*IQRfare) if fare<. & IQRfare<. & P25fare<. & P75fare<.
{txt}
{com}. gen fareI=fare if Ifare!=1 & fare > 0
{txt}(1,862,553 missing values generated)

{com}. drop IQRfare P25fare P75fare fare_type_group 
{txt}
{com}. replace index = _n
{txt}(82,540,633 real changes made)

{com}. 
. save "dta_clean/${c -(}dataset{c )-}_clean", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_clean.dta{rm}
saved
{p_end}

{com}. 
{txt}end of do-file

{com}. 
. do "${c -(}rep_folder{c )-}/code/data_preagg.do"
{txt}
{com}. // 2.Data Pre-Aggregation File for DB1B public database
. // Name: Tatsuki Kikugawa
. 
. use "dta_clean/${c -(}dataset{c )-}_clean", clear
{txt}
{com}. drop if fareI == .
{txt}(1,862,553 observations deleted)

{com}. ************************************
. **  4.Preparation for Aggregation **
. ************************************
. * Route identifying algorithm to make code that transforms ticket-level data to airpor-pair (and to city-pair)
. *** Construct an algorithm to identify destination and find one-way trip with no more than one stop and symmetric round-trip
. gen origin = airport0
{txt}
{com}. gen destination_final = airport1
{txt}
{com}. replace destination_final = airport2 if !missing(airport2)
{txt}(69,010,678 real changes made)

{com}. replace destination_final = airport3 if !missing(airport3)
{txt}(28,705,735 real changes made)

{com}. replace destination_final = airport4 if !missing(airport4)
{txt}(22,094,203 real changes made)

{com}. 
. gen destination = ""
{txt}(80,678,087 missing values generated)

{com}. gen roundtrip = .
{txt}(80,678,087 missing values generated)

{com}. replace destination = airport1 if coupon_num == 1 //one coupon
{txt}variable {bf}{res}destination{sf}{txt} was {bf}{res}str1{sf}{txt} now {bf}{res}str3{sf}
{txt}(11,667,408 real changes made)

{com}. replace roundtrip = 0 if coupon_num == 1
{txt}(11,667,408 real changes made)

{com}. replace destination = airport2 if coupon_num == 2 & airport0 != airport2 //one-way trip with one stop
{txt}(17,403,604 real changes made)

{com}. replace roundtrip = 0 if coupon_num == 2 & airport0 != airport2
{txt}(17,403,604 real changes made)

{com}. replace destination = airport1 if coupon_num == 2 & airport0 == airport2 //round-trip with no stop
{txt}(22,901,340 real changes made)

{com}. replace roundtrip = 1 if coupon_num == 2 & airport0 == airport2
{txt}(22,901,340 real changes made)

{com}. 
. replace destination = "" if coupon_num == 3 & airport0 != airport3 //one-way trip with two stops or round-trip+one-way trip
{txt}(0 real changes made)

{com}. replace roundtrip = . if coupon_num == 3 & airport0 != airport3
{txt}(0 real changes made)

{com}. replace destination = "" if coupon_num == 3 & airport0 == airport3 //round-trip with one stop in either trip
{txt}(0 real changes made)

{com}. replace roundtrip = . if coupon_num == 3 & airport0 == airport3
{txt}(0 real changes made)

{com}.  
. replace destination = "" if coupon_num == 4 & airport0 != airport4 //four coupons
{txt}(0 real changes made)

{com}. replace roundtrip = . if coupon_num == 4 & airport0 != airport4
{txt}(0 real changes made)

{com}. replace destination = airport2 if coupon_num == 4 & airport0 == airport4 & airport1 == airport3 // symmetric round-trip
{txt}(14,214,309 real changes made)

{com}. replace roundtrip = 1  if coupon_num == 4 & airport0 == airport4 & airport1 == airport3
{txt}(14,214,309 real changes made)

{com}. replace destination = ""  if coupon_num == 4 & airport0 == airport4 & airport1 != airport3 //asymmetric round-trip
{txt}(0 real changes made)

{com}. replace roundtrip = . if coupon_num == 4 & airport0 == airport4 & airport1 != airport3
{txt}(0 real changes made)

{com}. 
. order origin destination destination_final roundtrip, after(coupon_num)
{txt}
{com}. drop if destination == ""
{txt}(14,491,426 observations deleted)

{com}. save "dta_clean/${c -(}dataset{c )-}_agg1", replace 
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg1.dta{rm}
saved
{p_end}

{com}. 
. gegen long market_id = group(origin destination)
{res}{txt}{res}{txt}
{com}. 
. gegen int tag1 = tag(market_id carrier1) if coupon_num >= 1
{res}{txt}{res}{txt}
{com}. gegen int carrier1_total = total(tag1) if coupon_num >= 1, by (market_id)
{res}{txt}{res}{txt}
{com}. gegen int tag2 = tag(market_id carrier2) if coupon_num >= 2
{res}{txt}{res}{txt}
{com}. gegen int carrier2_total = total(tag2) if coupon_num >= 2, by (market_id) 
{res}{txt}{res}{txt}
{com}. gegen int tag3 = tag(market_id carrier3) if coupon_num >= 3
{res}{txt}{res}{txt}
{com}. gegen int carrier3_total = total(tag3) if coupon_num >= 3, by (market_id) 
{res}{txt}{res}{txt}
{com}. gegen int tag4 = tag(market_id carrier4) if coupon_num >= 4
{res}{txt}{res}{txt}
{com}. gegen int carrier4_total = total(tag4) if coupon_num >= 4, by (market_id) 
{res}{txt}{res}{txt}
{com}. drop tag1 tag2 tag3 tag4 
{txt}
{com}. 
. * Dummy = 1 if Alaska ("AS") or Virgin ("VX") serves for the market
. /* (Computationally expensive)
> local merged AS VX
> foreach m of local merged {c -(}
>         forvalues n=1/4{c -(}
>                 gen `m'_indicator`n' = (carrier`n' == "`m'") if carrier`n' != ""
>                 fegen int tag_`m'`n' = tag(market_id `m'_indicator`n') if coupon_num >= `n'
>                 fegen int market`n'_`m' = total(tag_`m'`n') if coupon_num >= `n', by (market_id)
>                 drop `m'_indicator`n' tag_`m'`n'
>                 *replace market`n'_`m' = . if market`n'_`m' == 0
>                 replace market`n'_`m' = 0 if market`n'_`m' == 1
>                 replace market`n'_`m' = 1 if market`n'_`m' == 2
>         {c )-}
> {c )-}
> */
. 
. gen AS_indicator1 = (carrier1 == "AS") if carrier1 != ""
{txt}
{com}. gegen int tag_AS1 = tag(market_id AS_indicator1) if coupon_num >= 1
{res}{txt}{res}{txt}
{com}. gegen int market1_AS = total(tag_AS1) if coupon_num >= 1, by (market_id)
{res}{txt}{res}{txt}
{com}. drop AS_indicator1 tag_AS1
{txt}
{com}. replace market1_AS = 0 if market1_AS == 1
{txt}(36,603,133 real changes made)

{com}. replace market1_AS = 1 if market1_AS == 2
{txt}(29,583,528 real changes made)

{com}. 
. gen AS_indicator2 = (carrier2 == "AS") if carrier2 != ""
{txt}(11,667,408 missing values generated)

{com}. gegen int tag_AS2 = tag(market_id AS_indicator2) if coupon_num >= 2
{res}{txt}{res}{txt}
{com}. gegen int market2_AS = total(tag_AS2) if coupon_num >= 2, by (market_id)
{res}{txt}{res}{txt}
{com}. drop AS_indicator2 tag_AS2
{txt}
{com}. replace market2_AS = 0 if market2_AS == 1
{txt}(30,944,357 real changes made)

{com}. replace market2_AS = 1 if market2_AS == 2
{txt}(23,574,896 real changes made)

{com}. 
. gen AS_indicator3 = (carrier3 == "AS") if carrier3 != ""
{txt}(51,972,352 missing values generated)

{com}. gegen int tag_AS3 = tag(market_id AS_indicator3) if coupon_num >= 3
{res}{txt}{res}{txt}
{com}. gegen int market3_AS = total(tag_AS3) if coupon_num >= 3, by (market_id)
{res}{txt}{res}{txt}
{com}. drop AS_indicator3 tag_AS3
{txt}
{com}. replace market3_AS = 0 if market3_AS == 1
{txt}(11,584,202 real changes made)

{com}. replace market3_AS = 1 if market3_AS == 2
{txt}(2,630,107 real changes made)

{com}. 
. gen AS_indicator4 = (carrier4 == "AS") if carrier4 != ""
{txt}(51,972,352 missing values generated)

{com}. gegen int tag_AS4 = tag(market_id AS_indicator4) if coupon_num >= 4
{res}{txt}{res}{txt}
{com}. gegen int market4_AS = total(tag_AS4) if coupon_num >= 4, by (market_id)
{res}{txt}{res}{txt}
{com}. drop AS_indicator4 tag_AS4
{txt}
{com}. replace market4_AS = 0 if market4_AS == 1
{txt}(11,772,256 real changes made)

{com}. replace market4_AS = 1 if market4_AS == 2
{txt}(2,442,053 real changes made)

{com}. 
. gen VX_indicator1 = (carrier1 == "VX") if carrier1 != ""
{txt}
{com}. gegen int tag_VX1 = tag(market_id VX_indicator1) if coupon_num >= 1
{res}{txt}{res}{txt}
{com}. gegen int market1_VX = total(tag_VX1) if coupon_num >= 1, by (market_id)
{res}{txt}{res}{txt}
{com}. drop VX_indicator1 tag_VX1
{txt}
{com}. replace market1_VX = 0 if market1_VX == 1
{txt}(54,438,793 real changes made)

{com}. replace market1_VX = 1 if market1_VX == 2
{txt}(11,747,868 real changes made)

{com}. 
. gen VX_indicator2 = (carrier2 == "VX") if carrier2 != ""
{txt}(11,667,408 missing values generated)

{com}. gegen int tag_VX2 = tag(market_id VX_indicator2) if coupon_num >= 2
{res}{txt}{res}{txt}
{com}. gegen int market2_VX = total(tag_VX2) if coupon_num >= 2, by (market_id)
{res}{txt}{res}{txt}
{com}. drop VX_indicator2 tag_VX2
{txt}
{com}. replace market2_VX = 0 if market2_VX == 1
{txt}(46,304,391 real changes made)

{com}. replace market2_VX = 1 if market2_VX == 2
{txt}(8,214,862 real changes made)

{com}. 
. gen VX_indicator3 = (carrier3 == "VX") if carrier3 != ""
{txt}(51,972,352 missing values generated)

{com}. gegen int tag_VX3 = tag(market_id VX_indicator3) if coupon_num >= 3
{res}{txt}{res}{txt}
{com}. gegen int market3_VX = total(tag_VX3) if coupon_num >= 3, by (market_id)
{res}{txt}{res}{txt}
{com}. drop VX_indicator3 tag_VX3
{txt}
{com}. replace market3_VX = 0 if market3_VX == 1
{txt}(13,801,758 real changes made)

{com}. replace market3_VX = 1 if market3_VX == 2
{txt}(412,551 real changes made)

{com}. 
. gen VX_indicator4 = (carrier4 == "VX") if carrier4 != ""
{txt}(51,972,352 missing values generated)

{com}. gegen int tag_VX4 = tag(market_id VX_indicator4) if coupon_num >= 4
{res}{txt}{res}{txt}
{com}. gegen int market4_VX = total(tag_VX4) if coupon_num >= 4, by (market_id)
{res}{txt}{res}{txt}
{com}. drop VX_indicator4 tag_VX4
{txt}
{com}. replace market4_VX = 0 if market4_VX == 1
{txt}(13,786,985 real changes made)

{com}. replace market4_VX = 1 if market4_VX == 2
{txt}(427,324 real changes made)

{com}. 
. * Southwest indicator 
. gen WN_indicator1 = (carrier1 == "WN") if carrier1 != ""
{txt}
{com}. gegen int tag_WN1 = tag(market_id WN_indicator1) if coupon_num >= 1
{res}{txt}{res}{txt}
{com}. gegen int market1_WN = total(tag_WN1) if coupon_num >= 1, by (market_id)
{res}{txt}{res}{txt}
{com}. drop WN_indicator1 tag_WN1
{txt}
{com}. replace market1_WN = 0 if market1_WN == 1
{txt}(27,805,578 real changes made)

{com}. replace market1_WN = 1 if market1_WN == 2
{txt}(38,381,083 real changes made)

{com}. 
. gen WN_indicator2 = (carrier2 == "WN") if carrier2 != ""
{txt}(11,667,408 missing values generated)

{com}. gegen int tag_WN2 = tag(market_id WN_indicator2) if coupon_num >= 2
{res}{txt}{res}{txt}
{com}. gegen int market2_WN = total(tag_WN2) if coupon_num >= 2, by (market_id)
{res}{txt}{res}{txt}
{com}. drop WN_indicator2 tag_WN2
{txt}
{com}. replace market2_WN = 0 if market2_WN == 1
{txt}(23,331,245 real changes made)

{com}. replace market2_WN = 1 if market2_WN == 2
{txt}(31,188,008 real changes made)

{com}. 
. gen WN_indicator3 = (carrier3 == "WN") if carrier3 != ""
{txt}(51,972,352 missing values generated)

{com}. gegen int tag_WN3 = tag(market_id WN_indicator3) if coupon_num >= 3
{res}{txt}{res}{txt}
{com}. gegen int market3_WN = total(tag_WN3) if coupon_num >= 3, by (market_id)
{res}{txt}{res}{txt}
{com}. drop WN_indicator3 tag_WN3
{txt}
{com}. replace market3_WN = 0 if market3_WN == 1
{txt}(8,099,997 real changes made)

{com}. replace market3_WN = 1 if market3_WN == 2
{txt}(6,114,312 real changes made)

{com}. 
. gen WN_indicator4 = (carrier4 == "WN") if carrier4 != ""
{txt}(51,972,352 missing values generated)

{com}. gegen int tag_WN4 = tag(market_id WN_indicator4) if coupon_num >= 4
{res}{txt}{res}{txt}
{com}. gegen int market4_WN = total(tag_WN4) if coupon_num >= 4, by (market_id)
{res}{txt}{res}{txt}
{com}. drop WN_indicator4 tag_WN4
{txt}
{com}. replace market4_WN = 0 if market4_WN == 1
{txt}(8,104,803 real changes made)

{com}. replace market4_WN = 1 if market4_WN == 2
{txt}(6,109,506 real changes made)

{com}. 
. * LCC indicator and count LCC passengers in the top 50 airlines
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen aggregate`n' = carrier`n' if inlist(carrier`n', "WN", "DL", "AA", "UA", "OO", "B6", "AS", "YX", "EV")
{txt}  3{com}.         replace aggregate`n' = carrier`n' if inlist(carrier`n', "NK", "MQ", "9E", "YV", "OH", "G4", "F9", "QX", "US")
{txt}  4{com}.         replace aggregate`n' = carrier`n' if inlist(carrier`n', "G7", "CP", "HA", "ZW", "VX", "PT", "SS", "AX", "SY")
{txt}  5{com}.         replace aggregate`n' = carrier`n' if inlist(carrier`n', "C5", "16", "17", "BA", "AC", "LH", "9K", "3M", "KL")
{txt}  6{com}.         replace aggregate`n' = carrier`n' if inlist(carrier`n', "AF", "NH", "VS", "LA", "JL", "KS", "7H", "KE", "WS")
{txt}  7{com}.         replace aggregate`n' = carrier`n' if inlist(carrier`n', "QF", "AM", "IB", "EM", "LX")
{txt}  8{com}.         drop if aggregate`n' == "" & coupon_num >= `n' // drop non-top50 observations
{txt}  9{com}.         gen lcc`n' = inlist(carrier`n', "WN", "B6", "NK", "G4", "F9", "VX", "SY") if carrier`n' != ""
{txt} 10{com}.         gen passenger_lcc`n' = passenger if lcc`n' == 1
{txt} 11{com}.         drop aggregate`n'
{txt} 12{com}. {c )-}
{txt}(15,343,684 missing values generated)
(11,192,697 real changes made)
(3,417,622 real changes made)
(343,535 real changes made)
(31,660 real changes made)
(11,479 real changes made)
(346,691 observations deleted)
(48,589,136 missing values generated)
(23,630,448 missing values generated)
(8,622,754 real changes made)
(2,751,817 real changes made)
(342,544 real changes made)
(33,667 real changes made)
(14,840 real changes made)
(260,795 observations deleted)
(11,604,031 missing values generated)
(52,501,288 missing values generated)
(54,273,190 missing values generated)
(1,889,691 real changes made)
(635,912 real changes made)
(120,992 real changes made)
(13,925 real changes made)
(6,489 real changes made)
(66,904 observations deleted)
(51,539,277 missing values generated)
(63,901,824 missing values generated)
(54,544,827 missing values generated)
(2,164,265 real changes made)
(669,102 real changes made)
(126,537 real changes made)
(14,162 real changes made)
(4,256 real changes made)
(27,228 observations deleted)
(51,539,277 missing values generated)
(63,868,938 missing values generated)

{com}. 
. * Number of LCCs on the route
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen lcc_carrier`n' = carrier`n' if inlist(carrier`n', "WN", "B6", "NK", "G4", "F9", "VX", "SY")
{txt}  3{com}.         gegen int tag`n' = tag(market_id lcc_carrier`n') if coupon_num >= `n'
{txt}  4{com}.         gegen int carrier`n'_total_lcc = total(tag`n') if coupon_num >= `n', by (market_id)
{txt}  5{com}.         drop tag`n' lcc_carrier`n'
{txt}  6{com}. {c )-}
{txt}(48,247,812 missing values generated)
{res}{txt}{res}{txt}{res}{txt}(52,410,303 missing values generated)
{res}{txt}{res}{txt}{res}{txt}(63,874,830 missing values generated)
{res}{txt}{res}{txt}{res}{txt}(63,868,938 missing values generated)
{res}{txt}{res}{txt}{res}{txt}
{com}. 
. * Revenue
. gen float revenue = fare * passenger
{txt}
{com}. 
. * Indicator for transfer
. gen transfer = 0, after(roundtrip)
{txt}
{com}. replace transfer = 1 if coupon_num==2 & roundtrip==0
{txt}(17,261,763 real changes made)

{com}. replace transfer = 1 if coupon_num==4
{txt}(13,945,766 real changes made)

{com}. 
. * Re-order variables 
. order passenger_lcc1 passenger_lcc2 passenger_lcc3 passenger_lcc4 lcc1 lcc2 lcc3 lcc4, after(market4_QN)
{err}variable {bf}market4_QN{sf} not found
(error in option {bf:after()})
{txt}{search r(111), local:r(111);}

end of do-file
{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. * Re-order variables 
. order passenger_lcc1 passenger_lcc2 passenger_lcc3 passenger_lcc4 lcc1 lcc2 lcc3 lcc4, after(market4_WN)
{txt}
{com}. order carrier1_total_lcc carrier2_total_lcc carrier3_total_lcc carrier4_total_lcc, after(carrier4_total)
{txt}
{com}. order market_id fareI Ifare revenue, after(passenger)
{txt}
{com}. order airport1 airport2 airport3 airport4, after(airport0)
{txt}
{com}. order city0 city1 city2 city3 city4, after(airport4)
{txt}
{com}. order state0 state1 state2 state3 state4, after(city4)
{txt}
{com}. order carrier1 carrier2 carrier3 carrier4, after(state4)
{txt}
{com}. order fare_type1 fare_type2 fare_type3 fare_type4, after(carrier4)
{txt}
{com}. order distance1 distance2 distance3 distance4, after(fare_type4)
{txt}
{com}. order restricted1 restricted2 restricted3 restricted4, after(distance4)
{txt}
{com}. order business1 business2 business3 business4, after(restricted4)
{txt}
{com}. order first1 first2 first3 first4, after(business4)
{txt}
{com}. 
. * Number of coupons in a given market in each quarter
. gegen long mkt_quarter = group(market_id quarter) 
{res}{txt}{res}{txt}
{com}. gegen long coupon_total1 = total(passenger) if coupon_num >= 1, by(mkt_quarter)
{res}{txt}{res}{txt}
{com}. gegen long coupon_total2 = total(passenger) if coupon_num >= 2, by(mkt_quarter)
{res}{txt}{res}{txt}
{com}. gegen long coupon_total3 = total(passenger) if coupon_num >= 3, by(mkt_quarter)
{res}{txt}{res}{txt}
{com}. gegen long coupon_total4 = total(passenger) if coupon_num >= 4, by(mkt_quarter)
{res}{txt}{res}{txt}
{com}. 
. * Market shares of Alaska and Virgin
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen passenger_ASVX`n' = passenger if inlist(carrier`n', "AS", "VX")
{txt}  3{com}.         replace passenger_ASVX`n' = 0 if passenger_ASVX`n' == .
{txt}  4{com}. {c )-}
{txt}(62,869,698 missing values generated)
(62,869,698 real changes made)
(63,488,525 missing values generated)
(63,488,525 real changes made)
(65,145,022 missing values generated)
(65,145,022 real changes made)
(65,214,989 missing values generated)
(65,214,989 real changes made)

{com}. 
. drop mkt_quarter
{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg2", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg2.dta{rm}
saved
{p_end}

{com}. 
. * Create ASVX specific datasets
. keep if (market1_AS == 1 | market1_VX == 1) & (market2_AS == 1 | market2_VX == 1 | (market2_AS == . | market2_VX == .))  & (market3_AS == 1 | market3_VX == 1 | (market3_AS == . | market3_VX == .)) & (market4_AS == 1 | market4_VX == 1 | (market4_AS == . | market4_VX == .)) 
{txt}(38,092,428 observations deleted)

{com}. save "dta_clean/${c -(}dataset{c )-}_agg2_ASVX", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg2_ASVX.dta{rm}
saved
{p_end}

{com}. 
. keep if (inlist(carrier1, "AS", "VX") & inlist(carrier2, "AS", "VX", "") & inlist(carrier3, "AS", "VX", "") & inlist(carrier4, "AS", "VX", ""))
{txt}(25,217,624 observations deleted)

{com}. save "dta_clean/${c -(}dataset{c )-}_agg2_ASVXonly", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg2_ASVXonly.dta{rm}
saved
{p_end}

{com}. 
. 
. ********************************************
. *** 5.Preparation for Aggregation ~City~ ***
. ********************************************
. use "dta_clean/${c -(}dataset{c )-}_agg1", clear
{txt}
{com}. 
. local apts origin destination destination_final
{txt}
{com}. foreach m of local apts{c -(}
{txt}  2{com}.         gen `m'_city = `m'
{txt}  3{com}.         replace `m'_city = "WDC" if inlist(`m', "DCA", "IAD", "BWI")
{txt}  4{com}.         replace `m'_city = "SFF" if inlist(`m', "SFO", "OAK")
{txt}  5{com}.         replace `m'_city = "BST" if inlist(`m', "ZZZ")
{txt}  6{com}.         replace `m'_city = "OLD" if inlist(`m', "ORD", "MDW")
{txt}  7{com}.         replace `m'_city = "CNC" if inlist(`m', "CVG", "DAY")
{txt}  8{com}.         replace `m'_city = "CLV" if inlist(`m', "CLE", "CAK")
{txt}  9{com}.         replace `m'_city = "DFO" if inlist(`m', "DFW", "DAL")
{txt} 10{com}.         replace `m'_city = "DTR" if inlist(`m', "ZZZ")
{txt} 11{com}.         replace `m'_city = "HST" if inlist(`m', "IAH", "HOU")
{txt} 12{com}.         replace `m'_city = "LSA" if inlist(`m', "ZZZ")
{txt} 13{com}.         replace `m'_city = "MAM" if inlist(`m', "MIA", "FLL") 
{txt} 14{com}.         replace `m'_city = "NYT" if inlist(`m', "LGA", "EWR", "JFK")
{txt} 15{com}.         replace `m'_city = "TMP" if inlist(`m', "TPA", "PIE")
{txt} 16{com}. {c )-}
{txt}(2,545,098 real changes made)
(2,018,361 real changes made)
(0 real changes made)
(2,537,066 real changes made)
(665,075 real changes made)
(695,310 real changes made)
(1,873,979 real changes made)
(0 real changes made)
(1,499,059 real changes made)
(0 real changes made)
(1,634,813 real changes made)
(4,118,558 real changes made)
(935,841 real changes made)
(2,455,107 real changes made)
(1,892,002 real changes made)
(0 real changes made)
(2,247,207 real changes made)
(533,422 real changes made)
(589,583 real changes made)
(1,720,990 real changes made)
(0 real changes made)
(1,318,539 real changes made)
(0 real changes made)
(2,069,111 real changes made)
(3,685,201 real changes made)
(1,080,373 real changes made)
(2,543,448 real changes made)
(2,042,652 real changes made)
(0 real changes made)
(2,494,793 real changes made)
(670,691 real changes made)
(710,144 real changes made)
(1,808,545 real changes made)
(0 real changes made)
(1,501,107 real changes made)
(0 real changes made)
(1,604,198 real changes made)
(4,145,625 real changes made)
(937,181 real changes made)

{com}. 
. gegen long market_id_city = group(origin_city destination_city)
{res}{txt}{res}{txt}
{com}. 
. gegen int tag1 = tag(market_id_city carrier1) if coupon_num >= 1
{res}{txt}{res}{txt}
{com}. gegen int carrier1_total = total(tag1) if coupon_num >= 1, by (market_id_city)
{res}{txt}{res}{txt}
{com}. gegen int tag2 = tag(market_id_city carrier2) if coupon_num >= 2
{res}{txt}{res}{txt}
{com}. gegen int carrier2_total = total(tag2) if coupon_num >= 2, by (market_id_city) 
{res}{txt}{res}{txt}
{com}. gegen int tag3 = tag(market_id_city carrier3) if coupon_num >= 3
{res}{txt}{res}{txt}
{com}. gegen int carrier3_total = total(tag3) if coupon_num >= 3, by (market_id_city) 
{res}{txt}{res}{txt}
{com}. gegen int tag4 = tag(market_id_city carrier4) if coupon_num >= 4
{res}{txt}{res}{txt}
{com}. gegen int carrier4_total = total(tag4) if coupon_num >= 4, by (market_id_city) 
{res}{txt}{res}{txt}
{com}. drop tag1 tag2 tag3 tag4 
{txt}
{com}. 
. gen AS_indicator1 = (carrier1 == "AS") if carrier1 != ""
{txt}
{com}. gegen int tag_AS1 = tag(market_id_city AS_indicator1) if coupon_num >= 1
{res}{txt}{res}{txt}
{com}. gegen int market1_AS = total(tag_AS1) if coupon_num >= 1, by (market_id_city)
{res}{txt}{res}{txt}
{com}. drop AS_indicator1 tag_AS1
{txt}
{com}. replace market1_AS = 0 if market1_AS == 1
{txt}(32,446,015 real changes made)

{com}. replace market1_AS = 1 if market1_AS == 2
{txt}(33,740,646 real changes made)

{com}. 
. gen AS_indicator2 = (carrier2 == "AS") if carrier2 != ""
{txt}(11,667,408 missing values generated)

{com}. gegen int tag_AS2 = tag(market_id_city AS_indicator2) if coupon_num >= 2
{res}{txt}{res}{txt}
{com}. gegen int market2_AS = total(tag_AS2) if coupon_num >= 2, by (market_id_city)
{res}{txt}{res}{txt}
{com}. drop AS_indicator2 tag_AS2
{txt}
{com}. replace market2_AS = 0 if market2_AS == 1
{txt}(27,754,543 real changes made)

{com}. replace market2_AS = 1 if market2_AS == 2
{txt}(26,764,710 real changes made)

{com}. 
. gen AS_indicator3 = (carrier3 == "AS") if carrier3 != ""
{txt}(51,972,352 missing values generated)

{com}. gegen int tag_AS3 = tag(market_id_city AS_indicator3) if coupon_num >= 3
{res}{txt}{res}{txt}
{com}. gegen int market3_AS = total(tag_AS3) if coupon_num >= 3, by (market_id_city)
{res}{txt}{res}{txt}
{com}. drop AS_indicator3 tag_AS3
{txt}
{com}. replace market3_AS = 0 if market3_AS == 1
{txt}(11,417,451 real changes made)

{com}. replace market3_AS = 1 if market3_AS == 2
{txt}(2,796,858 real changes made)

{com}. 
. gen AS_indicator4 = (carrier4 == "AS") if carrier4 != ""
{txt}(51,972,352 missing values generated)

{com}. gegen int tag_AS4 = tag(market_id_city AS_indicator4) if coupon_num >= 4
{res}{txt}{res}{txt}
{com}. gegen int market4_AS = total(tag_AS4) if coupon_num >= 4, by (market_id_city)
{res}{txt}{res}{txt}
{com}. drop AS_indicator4 tag_AS4
{txt}
{com}. replace market4_AS = 0 if market4_AS == 1
{txt}(11,628,418 real changes made)

{com}. replace market4_AS = 1 if market4_AS == 2
{txt}(2,585,891 real changes made)

{com}. 
. gen VX_indicator1 = (carrier1 == "VX") if carrier1 != ""
{txt}
{com}. gegen int tag_VX1 = tag(market_id_city VX_indicator1) if coupon_num >= 1
{res}{txt}{res}{txt}
{com}. gegen int market1_VX = total(tag_VX1) if coupon_num >= 1, by (market_id_city)
{res}{txt}{res}{txt}
{com}. drop VX_indicator1 tag_VX1
{txt}
{com}. replace market1_VX = 0 if market1_VX == 1
{txt}(50,926,452 real changes made)

{com}. replace market1_VX = 1 if market1_VX == 2
{txt}(15,260,209 real changes made)

{com}. 
. gen VX_indicator2 = (carrier2 == "VX") if carrier2 != ""
{txt}(11,667,408 missing values generated)

{com}. gegen int tag_VX2 = tag(market_id_city VX_indicator2) if coupon_num >= 2
{res}{txt}{res}{txt}
{com}. gegen int market2_VX = total(tag_VX2) if coupon_num >= 2, by (market_id_city)
{res}{txt}{res}{txt}
{com}. drop VX_indicator2 tag_VX2
{txt}
{com}. replace market2_VX = 0 if market2_VX == 1
{txt}(43,812,300 real changes made)

{com}. replace market2_VX = 1 if market2_VX == 2
{txt}(10,706,953 real changes made)

{com}. 
. gen VX_indicator3 = (carrier3 == "VX") if carrier3 != ""
{txt}(51,972,352 missing values generated)

{com}. gegen int tag_VX3 = tag(market_id_city VX_indicator3) if coupon_num >= 3
{res}{txt}{res}{txt}
{com}. gegen int market3_VX = total(tag_VX3) if coupon_num >= 3, by (market_id_city)
{res}{txt}{res}{txt}
{com}. drop VX_indicator3 tag_VX3
{txt}
{com}. replace market3_VX = 0 if market3_VX == 1
{txt}(13,684,609 real changes made)

{com}. replace market3_VX = 1 if market3_VX == 2
{txt}(529,700 real changes made)

{com}. 
. gen VX_indicator4 = (carrier4 == "VX") if carrier4 != ""
{txt}(51,972,352 missing values generated)

{com}. gegen int tag_VX4 = tag(market_id_city VX_indicator4) if coupon_num >= 4
{res}{txt}{res}{txt}
{com}. gegen int market4_VX = total(tag_VX4) if coupon_num >= 4, by (market_id_city)
{res}{txt}{res}{txt}
{com}. drop VX_indicator4 tag_VX4
{txt}
{com}. replace market4_VX = 0 if market4_VX == 1
{txt}(13,656,952 real changes made)

{com}. replace market4_VX = 1 if market4_VX == 2
{txt}(557,357 real changes made)

{com}. 
. * Southwest indicator 
. gen WN_indicator1 = (carrier1 == "WN") if carrier1 != ""
{txt}
{com}. gegen int tag_WN1 = tag(market_id_city WN_indicator1) if coupon_num >= 1
{res}{txt}{res}{txt}
{com}. gegen int market1_WN = total(tag_WN1) if coupon_num >= 1, by (market_id_city)
{res}{txt}{res}{txt}
{com}. drop WN_indicator1 tag_WN1
{txt}
{com}. replace market1_WN = 0 if market1_WN == 1
{txt}(17,404,922 real changes made)

{com}. replace market1_WN = 1 if market1_WN == 2
{txt}(48,781,739 real changes made)

{com}. 
. gen WN_indicator2 = (carrier2 == "WN") if carrier2 != ""
{txt}(11,667,408 missing values generated)

{com}. gegen int tag_WN2 = tag(market_id_city WN_indicator2) if coupon_num >= 2
{res}{txt}{res}{txt}
{com}. gegen int market2_WN = total(tag_WN2) if coupon_num >= 2, by (market_id_city)
{res}{txt}{res}{txt}
{com}. drop WN_indicator2 tag_WN2
{txt}
{com}. replace market2_WN = 0 if market2_WN == 1
{txt}(15,986,032 real changes made)

{com}. replace market2_WN = 1 if market2_WN == 2
{txt}(38,533,221 real changes made)

{com}. 
. gen WN_indicator3 = (carrier3 == "WN") if carrier3 != ""
{txt}(51,972,352 missing values generated)

{com}. gegen int tag_WN3 = tag(market_id_city WN_indicator3) if coupon_num >= 3
{res}{txt}{res}{txt}
{com}. gegen int market3_WN = total(tag_WN3) if coupon_num >= 3, by (market_id_city)
{res}{txt}{res}{txt}
{com}. drop WN_indicator3 tag_WN3
{txt}
{com}. replace market3_WN = 0 if market3_WN == 1
{txt}(7,578,554 real changes made)

{com}. replace market3_WN = 1 if market3_WN == 2
{txt}(6,635,755 real changes made)

{com}. 
. gen WN_indicator4 = (carrier4 == "WN") if carrier4 != ""
{txt}(51,972,352 missing values generated)

{com}. gegen int tag_WN4 = tag(market_id_city WN_indicator4) if coupon_num >= 4
{res}{txt}{res}{txt}
{com}. gegen int market4_WN = total(tag_WN4) if coupon_num >= 4, by (market_id_city)
{res}{txt}{res}{txt}
{com}. drop WN_indicator4 tag_WN4
{txt}
{com}. replace market4_WN = 0 if market4_WN == 1
{txt}(7,578,471 real changes made)

{com}. replace market4_WN = 1 if market4_WN == 2
{txt}(6,635,838 real changes made)

{com}. 
. * LCC indicator and count LCC passengers in the top 50 airlines
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen aggregate`n' = carrier`n' if inlist(carrier`n', "WN", "DL", "AA", "UA", "OO", "B6", "AS", "YX", "EV")
{txt}  3{com}.         replace aggregate`n' = carrier`n' if inlist(carrier`n', "NK", "MQ", "9E", "YV", "OH", "G4", "F9", "QX", "US")
{txt}  4{com}.         replace aggregate`n' = carrier`n' if inlist(carrier`n', "G7", "CP", "HA", "ZW", "VX", "PT", "SS", "AX", "SY")
{txt}  5{com}.         replace aggregate`n' = carrier`n' if inlist(carrier`n', "C5", "16", "17", "BA", "AC", "LH", "9K", "3M", "KL")
{txt}  6{com}.         replace aggregate`n' = carrier`n' if inlist(carrier`n', "AF", "NH", "VS", "LA", "JL", "KS", "7H", "KE", "WS")
{txt}  7{com}.         replace aggregate`n' = carrier`n' if inlist(carrier`n', "QF", "AM", "IB", "EM", "LX")
{txt}  8{com}.         drop if aggregate`n' == "" & coupon_num >= `n' // drop non-top50 observations
{txt}  9{com}.         gen lcc`n' = inlist(carrier`n', "WN", "B6", "NK", "G4", "F9", "VX", "SY") if carrier`n' != ""
{txt} 10{com}.         gen passenger_lcc`n' = passenger if lcc`n' == 1
{txt} 11{com}.         drop aggregate`n'
{txt} 12{com}. {c )-}
{txt}(15,343,684 missing values generated)
(11,192,697 real changes made)
(3,417,622 real changes made)
(343,535 real changes made)
(31,660 real changes made)
(11,479 real changes made)
(346,691 observations deleted)
(48,589,136 missing values generated)
(23,630,448 missing values generated)
(8,622,754 real changes made)
(2,751,817 real changes made)
(342,544 real changes made)
(33,667 real changes made)
(14,840 real changes made)
(260,795 observations deleted)
(11,604,031 missing values generated)
(52,501,288 missing values generated)
(54,273,190 missing values generated)
(1,889,691 real changes made)
(635,912 real changes made)
(120,992 real changes made)
(13,925 real changes made)
(6,489 real changes made)
(66,904 observations deleted)
(51,539,277 missing values generated)
(63,901,824 missing values generated)
(54,544,827 missing values generated)
(2,164,265 real changes made)
(669,102 real changes made)
(126,537 real changes made)
(14,162 real changes made)
(4,256 real changes made)
(27,228 observations deleted)
(51,539,277 missing values generated)
(63,868,938 missing values generated)

{com}. 
. * Number of LCCs on the route
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen lcc_carrier`n' = carrier`n' if inlist(carrier`n', "WN", "B6", "NK", "G4", "F9", "VX", "SY")
{txt}  3{com}.         gegen int tag`n' = tag(market_id_city lcc_carrier`n') if coupon_num >= `n'
{txt}  4{com}.         gegen int carrier`n'_total_lcc = total(tag`n') if coupon_num >= `n', by (market_id_city)
{txt}  5{com}.         drop tag`n' lcc_carrier`n'
{txt}  6{com}. {c )-}
{txt}(48,247,812 missing values generated)
{res}{txt}{res}{txt}{res}{txt}(52,410,303 missing values generated)
{res}{txt}{res}{txt}{res}{txt}(63,874,830 missing values generated)
{res}{txt}{res}{txt}{res}{txt}(63,868,938 missing values generated)
{res}{txt}{res}{txt}{res}{txt}
{com}. 
. * Revenue
. gen float revenue = fare * passenger
{txt}
{com}. 
. * Indicator for transfer
. gen transfer = 0, after(roundtrip)
{txt}
{com}. replace transfer = 1 if coupon_num==2 & roundtrip==0
{txt}(17,261,763 real changes made)

{com}. replace transfer = 1 if coupon_num==4
{txt}(13,945,766 real changes made)

{com}. 
. * Re-order variables 
. order passenger_lcc1 passenger_lcc2 passenger_lcc3 passenger_lcc4 lcc1 lcc2 lcc3 lcc4, after(market4_WN)
{txt}
{com}. order carrier1_total_lcc carrier2_total_lcc carrier3_total_lcc carrier4_total_lcc, after(carrier4_total)
{txt}
{com}. order market_id_city fareI Ifare revenue, after(passenger)
{txt}
{com}. order airport1 airport2 airport3 airport4, after(airport0)
{txt}
{com}. order city0 city1 city2 city3 city4, after(airport4)
{txt}
{com}. order state0 state1 state2 state3 state4, after(city4)
{txt}
{com}. order carrier1 carrier2 carrier3 carrier4, after(state4)
{txt}
{com}. order fare_type1 fare_type2 fare_type3 fare_type4, after(carrier4)
{txt}
{com}. order distance1 distance2 distance3 distance4, after(fare_type4)
{txt}
{com}. order restricted1 restricted2 restricted3 restricted4, after(distance4)
{txt}
{com}. order business1 business2 business3 business4, after(restricted4)
{txt}
{com}. order first1 first2 first3 first4, after(business4)
{txt}
{com}. 
. * Number of coupons in a given market in each quarter
. gegen long mkt_quarter = group(market_id_city quarter)
{res}{txt}{res}{txt}
{com}. gegen long coupon_total1 = total(passenger) if coupon_num >= 1, by(mkt_quarter)
{res}{txt}{res}{txt}
{com}. gegen long coupon_total2 = total(passenger) if coupon_num >= 2, by(mkt_quarter)
{res}{txt}{res}{txt}
{com}. gegen long coupon_total3 = total(passenger) if coupon_num >= 3, by(mkt_quarter)
{res}{txt}{res}{txt}
{com}. gegen long coupon_total4 = total(passenger) if coupon_num >= 4, by(mkt_quarter)
{res}{txt}{res}{txt}
{com}. 
. * Market shares of Alaska and Virgin
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen passenger_ASVX`n' = passenger if inlist(carrier`n', "AS", "VX")
{txt}  3{com}.         replace passenger_ASVX`n' = 0 if passenger_ASVX`n' == .
{txt}  4{com}. {c )-}
{txt}(62,869,698 missing values generated)
(62,869,698 real changes made)
(63,488,525 missing values generated)
(63,488,525 real changes made)
(65,145,022 missing values generated)
(65,145,022 real changes made)
(65,214,989 missing values generated)
(65,214,989 real changes made)

{com}. 
. * Number of airports 
. local airports origin_city destination_city destination_final_city
{txt}
{com}. foreach m of local airports{c -(}
{txt}  2{com}.         gen apt_num_`m' = 1
{txt}  3{com}.         replace apt_num_`m' = 2 if inlist(`m', "OLD", "CNC", "CLV", "DFO", "HST", "MAM", "SFF", "TMP")
{txt}  4{com}.         replace apt_num_`m' = 3 if inlist(`m', "NYT", "WDC")
{txt}  5{com}. {c )-}
{txt}(11,742,907 real changes made)
(6,518,644 real changes made)
(11,340,170 real changes made)
(6,028,096 real changes made)
(11,654,073 real changes made)
(6,544,792 real changes made)

{com}. drop mkt_quarter
{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg2_city", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg2_city.dta{rm}
saved
{p_end}

{com}. 
. * Create a dataset with routes where either Alaska or Virgin operate 
. keep if (market1_AS == 1 | market1_VX == 1) & (market2_AS == 1 | market2_VX == 1 | (market2_AS == . | market2_VX == .))  & (market3_AS == 1 | market3_VX == 1 | (market3_AS == . | market3_VX == .)) & (market4_AS == 1 | market4_VX == 1 | (market4_AS == . | market4_VX == .)) 
{txt}(34,467,888 observations deleted)

{com}. /*check
> forvalues n=1/4{c -(}
>         gegen long total_passenger_lcc`n' = total(passenger_lcc`n') if coupon_num >= `n', by(market_id_city quarter)
> {c )-}
> */
. save "dta_clean/${c -(}dataset{c )-}_agg2_ASVX_city", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg2_ASVX_city.dta{rm}
saved
{p_end}

{com}. 
. 
. * Create a dataset with only Alaska 
. keep if (inlist(carrier1, "AS", "VX") & inlist(carrier2, "AS", "VX", "") & inlist(carrier3, "AS", "VX", "") & inlist(carrier4, "AS", "VX", ""))
{txt}(28,839,959 observations deleted)

{com}. save "dta_clean/${c -(}dataset{c )-}_agg2_ASVXonly_city", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg2_ASVXonly_city.dta{rm}
saved
{p_end}

{com}. 
{txt}end of do-file

{com}. save "dta_clean/merged_agg1.dta", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg1.dta{rm}
saved
{p_end}

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. do "${c -(}rep_folder{c )-}/code/data_aggregation.do"
{txt}
{com}. // 3.Data Aggregation File for DB1B public database
. // Name: Tatsuki Kikugawa
. 
. **********************************
. *** 6.Aggregation and Cleaning ***
. **********************************
. ************************
. *** 6-1. Airport All ***
. ************************
. use "dta_clean/${c -(}dataset{c )-}_agg2", clear
{err}{p 0 4 2}
file {bf:{err}dta_clean/merged_agg2.dta}
not found
{p_end}
{txt}{search r(601), local:r(601);}

end of do-file
{search r(601), local:r(601);}

end of do-file

{search r(601), local:r(601);}

{com}. pwd
{res}/Users/tsukik/Downloads/airline_tatsuki

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. do "${c -(}rep_folder{c )-}/code/data_aggregation.do"
{txt}
{com}. // 3.Data Aggregation File for DB1B public database
. // Name: Tatsuki Kikugawa
. 
. **********************************
. *** 6.Aggregation and Cleaning ***
. **********************************
. ************************
. *** 6-1. Airport All ***
. ************************
. cd "${c -(}rep_folder{c )-}/input"
{res}/Users/tsukik/Downloads/airline_tatsuki/input
{txt}
{com}. use "dta_clean/${c -(}dataset{c )-}_agg2", clear
{txt}
{com}. 
. collapse (rawsum) revenue passenger passenger_lcc1-passenger_lcc4 passenger_ASVX1-passenger_ASVX4 (mean) fareI coupon_num roundtrip transfer restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 [fw = passenger], by(quarter market_id origin destination)
{res}{txt}
{com}. keep if passenger >= 90
{txt}(891,597 observations deleted)

{com}. rename fareI fare
{res}{txt}
{com}. gen lfare = log(fare), after(fare)
{txt}
{com}. gen lrevenue = log(revenue), after(revenue)
{txt}
{com}. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. count if inlist(origin, "SFF", "BST", "OLD", "CLV", "DTR", "HST", "LSA", "MAM", "TMP") | inlist(destination, "SFF", "BST", "OLD", "CLV", "DTR", "HST", "LSA", "MAM", "TMP")
  {res}0
{txt}
{com}. 
. * Compute weighted_average
. gen coupon_total = coupon_total1 if coupon_total2 == .
{txt}(161,334 missing values generated)

{com}. replace coupon_total = coupon_total1+coupon_total2 if coupon_total3 == . & coupon_total2 != .
{txt}(16,402 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3 if coupon_total4 == . & coupon_total3 != .
{txt}(0 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3+coupon_total4 if coupon_total4 != .
{txt}(144,932 real changes made)

{com}. 
. local weighted passenger_lcc passenger_ASVX restricted business first
{txt}
{com}. foreach m of local weighted{c -(}
{txt}  2{com}.         gen `m' = (`m'1*coupon_total1)/coupon_total if coupon_total2==., before(`m'1)
{txt}  3{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3+`m'4*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(161,334 missing values generated)
(16,402 real changes made)
(0 real changes made)
(144,932 real changes made)
(161,334 missing values generated)
(16,402 real changes made)
(0 real changes made)
(144,932 real changes made)
(161,334 missing values generated)
(16,402 real changes made)
(0 real changes made)
(144,928 real changes made)
(161,334 missing values generated)
(16,402 real changes made)
(0 real changes made)
(144,928 real changes made)
(161,334 missing values generated)
(16,402 real changes made)
(0 real changes made)
(144,928 real changes made)

{com}. 
. local airlines AS VX WN
{txt}
{com}. foreach m of local airlines{c -(}
{txt}  2{com}.         gen market_`m' = (market1_`m'*coupon_total1)/coupon_total if coupon_total2==., before(market1_`m')
{txt}  3{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3+market4_`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(161,334 missing values generated)
(16,402 real changes made)
(0 real changes made)
(144,932 real changes made)
(161,334 missing values generated)
(16,402 real changes made)
(0 real changes made)
(144,932 real changes made)
(161,334 missing values generated)
(16,402 real changes made)
(0 real changes made)
(144,932 real changes made)

{com}. 
. local binary _total _total_lcc
{txt}
{com}. foreach m of local binary{c -(}
{txt}  2{com}.         gen carrier`m' = (carrier1`m'*coupon_total1)/coupon_total if coupon_total2==., before(carrier1`m')
{txt}  3{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3+carrier4`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(161,334 missing values generated)
(16,402 real changes made)
(0 real changes made)
(144,932 real changes made)
(161,334 missing values generated)
(16,402 real changes made)
(0 real changes made)
(144,932 real changes made)

{com}. 
. * Quarter dummy 
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen quarter`n' = inlist(quarter, tq(2015q`n'), tq(2016q`n'), tq(2017q`n'), tq(2018q`n'), tq(2019q`n'))
{txt}  3{com}. {c )-}
{txt}
{com}. drop quarter1
{txt}
{com}. 
. * lcc-market share in each market
. gen lcc_ratio = passenger_lcc / passenger
{txt}
{com}. 
. * Post dummy
. gen post1 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4))
{txt}
{com}. gen post2 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2))
{txt}
{com}. gen post3 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4))
{txt}
{com}. gen post4 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4), tq(2018q1))
{txt}
{com}. 
. * lcc-market share in each market
. gen lcc_ratio = passenger_lcc / passenger
{err}variable {bf}lcc_ratio{sf} already defined
{txt}{search r(110), local:r(110);}

end of do-file
{search r(110), local:r(110);}

end of do-file

{search r(110), local:r(110);}

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. gegen long lcc_ratio_pre1 = total(passenger_lcc) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gegen long lcc_ratio_pre2 = total(passenger) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gen lcc_ratio_pre = lcc_ratio_pre1 / lcc_ratio_pre2
{txt}(62,925 missing values generated)

{com}. 
. drop passenger_lcc1-passenger_lcc4 passenger_ASVX1-passenger_ASVX4 restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 lcc_ratio_pre1 lcc_ratio_pre2
{txt}
{com}. 
. /* Merge with lookup tables
> save "dta_clean/${c -(}dataset{c )-}_agg3", replace
> import delimited "lookup/airports_codes.txt", clear 
> drop worldareacode
> rename airportcode origin
> save "lookup/airport_code_origin", replace
> rename origin destination
> save "lookup/airport_code_destination", replace
> use "dta_clean/${c -(}dataset{c )-}_agg3", clear
> */
. 
. local citytype origin destination
{txt}
{com}. foreach m of local citytype {c -(}
{txt}  2{com}.         merge m:1 `m' using "lookup/airport_code_`m'"
{txt}  3{com}.         drop if _merge == 2
{txt}  4{com}.         replace cityname = "Phoenix, Arizona, USA" if `m' == "AZA"
{txt}  5{com}.         replace cityname = "Branson, Missouri, USA" if `m' == "BKG"
{txt}  6{com}.         replace cityname = "Bay County, Florida, USA" if `m' == "ECP"
{txt}  7{com}.         replace cityname = "Concord, North Carolina, USA" if inlist(`m', "JQF", "USA")
{txt}  8{com}.         drop if inlist(`m', "DSS", "ICN", "PVG") 
{txt}  9{com}.         drop _merge
{txt} 10{com}.         rename cityname `m'_name
{txt} 11{com}.         split `m'_name, parse(,)
{txt} 12{com}.         replace `m'_name3 = strtrim(`m'_name3)
{txt} 13{com}.         replace `m'_name4 = strtrim(`m'_name4)
{txt} 14{com}.         drop if `m'_name3 != "USA" & `m'_name4 != "USA"
{txt} 15{com}.         drop `m'_name1-`m'_name4
{txt} 16{com}. {c )-}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}           9,927
{txt}{col 9}from master{col 30}{res}           1,140{txt}  (_merge==1)
{col 9}from using{col 30}{res}           8,787{txt}  (_merge==2)

{col 5}Matched{col 30}{res}         160,219{txt}  (_merge==3)
{col 5}{hline 41}
(8,787 observations deleted)
(727 real changes made)
(5 real changes made)
(279 real changes made)
(91 real changes made)
(38 observations deleted)
{res}variables created as string: 
{txt}{col 1}origin_name1{col 15}origin_name2{col 29}origin_name3{col 43}origin_name4
(158,909 real changes made)
(3,151 real changes made)
(3,088 observations deleted)
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}          10,097
{txt}{col 9}from master{col 30}{res}           1,308{txt}  (_merge==1)
{col 9}from using{col 30}{res}           8,789{txt}  (_merge==2)

{col 5}Matched{col 30}{res}         156,925{txt}  (_merge==3)
{col 5}{hline 41}
(8,789 observations deleted)
(730 real changes made)
(7 real changes made)
(463 real changes made)
(79 real changes made)
(29 observations deleted)
{res}variables created as string: 
{txt}{col 1}destinatio~1{col 15}destinatio~2{col 29}destinatio~3{col 43}destinatio~4
(154,827 real changes made)
(3,796 real changes made)
(4,283 observations deleted)

{com}. 
. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg3", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg3.dta{rm}
saved
{p_end}

{com}. 
. 
. *************************
. *** 6-2. Airport ASVX ***
. *************************
. use  "dta_clean/${c -(}dataset{c )-}_agg2_ASVX", clear
{txt}
{com}. 
. collapse (rawsum) revenue passenger passenger_lcc1-passenger_lcc4 passenger_ASVX1-passenger_ASVX4 (mean) fareI coupon_num roundtrip transfer restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 [fw = passenger], by(quarter market_id origin destination)
{res}{txt}
{com}. keep if passenger >= 90
{txt}(27,729 observations deleted)

{com}. rename fareI fare
{res}{txt}
{com}. gen lfare = log(fare), after(fare)
{txt}
{com}. gen lrevenue = log(revenue), after(revenue)
{txt}
{com}. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. 
. * Compute weighted_average
. gen coupon_total = coupon_total1 if coupon_total2 == .
{txt}(45,606 missing values generated)

{com}. replace coupon_total = coupon_total1+coupon_total2 if coupon_total3 == . & coupon_total2 != .
{txt}(17,181 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3 if coupon_total4 == . & coupon_total3 != .
{txt}(0 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3+coupon_total4 if coupon_total4 != .
{txt}(28,425 real changes made)

{com}. 
. local weighted passenger_lcc passenger_ASVX restricted business first
{txt}
{com}. foreach m of local weighted{c -(}
{txt}  2{com}.         gen `m' = (`m'1*coupon_total1)/coupon_total if coupon_total2==., before(`m'1)
{txt}  3{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3+`m'4*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(45,606 missing values generated)
(17,181 real changes made)
(0 real changes made)
(28,425 real changes made)
(45,606 missing values generated)
(17,181 real changes made)
(0 real changes made)
(28,425 real changes made)
(45,606 missing values generated)
(17,181 real changes made)
(0 real changes made)
(28,425 real changes made)
(45,606 missing values generated)
(17,181 real changes made)
(0 real changes made)
(28,425 real changes made)
(45,606 missing values generated)
(17,181 real changes made)
(0 real changes made)
(28,425 real changes made)

{com}. 
. local airlines AS VX WN
{txt}
{com}. foreach m of local airlines{c -(}
{txt}  2{com}.         gen market_`m' = (market1_`m'*coupon_total1)/coupon_total if coupon_total2==., before(market1_`m')
{txt}  3{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3+market4_`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(45,606 missing values generated)
(17,181 real changes made)
(0 real changes made)
(28,425 real changes made)
(45,606 missing values generated)
(17,181 real changes made)
(0 real changes made)
(28,425 real changes made)
(45,606 missing values generated)
(17,181 real changes made)
(0 real changes made)
(28,425 real changes made)

{com}. 
. local binary _total _total_lcc
{txt}
{com}. foreach m of local binary{c -(}
{txt}  2{com}.         gen carrier`m' = (carrier1`m'*coupon_total1)/coupon_total if coupon_total2==., before(carrier1`m')
{txt}  3{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3+carrier4`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(45,606 missing values generated)
(17,181 real changes made)
(0 real changes made)
(28,425 real changes made)
(45,606 missing values generated)
(17,181 real changes made)
(0 real changes made)
(28,425 real changes made)

{com}. 
. * Quarter dummy 
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen quarter`n' = inlist(quarter, tq(2015q`n'), tq(2016q`n'), tq(2017q`n'), tq(2018q`n'), tq(2019q`n'))
{txt}  3{com}. {c )-}
{txt}
{com}. drop quarter1
{txt}
{com}. 
. * Post dummy
. gen post1 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4))
{txt}
{com}. gen post2 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2))
{txt}
{com}. gen post3 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4))
{txt}
{com}. gen post4 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4), tq(2018q1))
{txt}
{com}. 
. * lcc-market share in each market
. gen lcc_ratio = passenger_lcc / passenger
{txt}
{com}. gegen long lcc_ratio_pre1 = total(passenger_lcc) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gegen long lcc_ratio_pre2 = total(passenger) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gen lcc_ratio_pre = lcc_ratio_pre1 / lcc_ratio_pre2
{txt}(17,543 missing values generated)

{com}. 
. drop passenger_lcc1-passenger_lcc4 passenger_ASVX1-passenger_ASVX4 restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 lcc_ratio_pre1 lcc_ratio_pre2
{txt}
{com}. 
. local citytype origin destination
{txt}
{com}. foreach m of local citytype {c -(}
{txt}  2{com}.         merge m:1 `m' using "lookup/airport_code_`m'"
{txt}  3{com}.         drop if _merge == 2
{txt}  4{com}.         replace cityname = "Phoenix, Arizona, USA" if `m' == "AZA"
{txt}  5{com}.         replace cityname = "Branson, Missouri, USA" if `m' == "BKG"
{txt}  6{com}.         replace cityname = "Bay County, Florida, USA" if `m' == "ECP"
{txt}  7{com}.         replace cityname = "Concord, North Carolina, USA" if inlist(`m', "JQF", "USA")
{txt}  8{com}.         drop if inlist(`m', "DSS", "ICN", "PVG") 
{txt}  9{com}.         drop _merge
{txt} 10{com}.         rename cityname `m'_name
{txt} 11{com}.         split `m'_name, parse(,)
{txt} 12{com}.         replace `m'_name3 = strtrim(`m'_name3)
{txt} 13{com}.         replace `m'_name4 = strtrim(`m'_name4)
{txt} 14{com}.         drop if `m'_name3 != "USA" & `m'_name4 != "USA"
{txt} 15{com}.         drop `m'_name1-`m'_name4
{txt} 16{com}. {c )-}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}           9,154
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}           9,154{txt}  (_merge==2)

{col 5}Matched{col 30}{res}          47,294{txt}  (_merge==3)
{col 5}{hline 41}
(9,154 observations deleted)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 observations deleted)
{res}variables created as string: 
{txt}{col 1}origin_name1{col 15}origin_name2{col 29}origin_name3{col 43}origin_name4
(47,206 real changes made)
(1,626 real changes made)
(145 observations deleted)
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}           9,117
{txt}{col 9}from master{col 30}{res}              11{txt}  (_merge==1)
{col 9}from using{col 30}{res}           9,106{txt}  (_merge==2)

{col 5}Matched{col 30}{res}          47,138{txt}  (_merge==3)
{col 5}{hline 41}
(9,106 observations deleted)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(11 observations deleted)
{res}variables created as string: 
{txt}{col 1}destinatio~1{col 15}destinatio~2{col 29}destinatio~3{col 43}destinatio~4
(46,970 real changes made)
(2,338 real changes made)
(260 observations deleted)

{com}. 
. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg3_ASVX", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg3_ASVX.dta{rm}
saved
{p_end}

{com}. 
. 
. *****************************
. *** 6-3. Airport ASVXonly ***
. *****************************
. use  "dta_clean/${c -(}dataset{c )-}_agg2_ASVXonly", clear
{txt}
{com}. 
. collapse (rawsum) revenue passenger passenger_lcc1-passenger_lcc4 passenger_ASVX1-passenger_ASVX4 (mean) fareI coupon_num roundtrip transfer restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 [fw = passenger], by(quarter market_id origin destination)
{res}{txt}
{com}. keep if passenger >= 30
{txt}(25,790 observations deleted)

{com}. rename fareI fare
{res}{txt}
{com}. gen lfare = log(fare), after(fare)
{txt}
{com}. gen lrevenue = log(revenue), after(revenue)
{txt}
{com}. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. 
. 
. * Compute weighted_average
. gen coupon_total = coupon_total1 if coupon_total2 == .
{txt}(9,715 missing values generated)

{com}. replace coupon_total = coupon_total1+coupon_total2 if coupon_total3 == . & coupon_total2 != .
{txt}(4,279 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3 if coupon_total4 == . & coupon_total3 != .
{txt}(0 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3+coupon_total4 if coupon_total4 != .
{txt}(5,436 real changes made)

{com}. 
. local weighted passenger_lcc passenger_ASVX restricted business first
{txt}
{com}. foreach m of local weighted{c -(}
{txt}  2{com}.         gen `m' = (`m'1*coupon_total1)/coupon_total if coupon_total2==., before(`m'1)
{txt}  3{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3+`m'4*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(9,715 missing values generated)
(4,279 real changes made)
(0 real changes made)
(5,436 real changes made)
(9,715 missing values generated)
(4,279 real changes made)
(0 real changes made)
(5,436 real changes made)
(9,715 missing values generated)
(4,279 real changes made)
(0 real changes made)
(5,436 real changes made)
(9,715 missing values generated)
(4,279 real changes made)
(0 real changes made)
(5,436 real changes made)
(9,715 missing values generated)
(4,279 real changes made)
(0 real changes made)
(5,436 real changes made)

{com}. 
. local airlines AS VX WN
{txt}
{com}. foreach m of local airlines{c -(}
{txt}  2{com}.         gen market_`m' = (market1_`m'*coupon_total1)/coupon_total if coupon_total2==., before(market1_`m')
{txt}  3{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3+market4_`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(9,715 missing values generated)
(4,279 real changes made)
(0 real changes made)
(5,436 real changes made)
(9,715 missing values generated)
(4,279 real changes made)
(0 real changes made)
(5,436 real changes made)
(9,715 missing values generated)
(4,279 real changes made)
(0 real changes made)
(5,436 real changes made)

{com}. 
. local binary _total _total_lcc
{txt}
{com}. foreach m of local binary{c -(}
{txt}  2{com}.         gen carrier`m' = (carrier1`m'*coupon_total1)/coupon_total if coupon_total2==., before(carrier1`m')
{txt}  3{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3+carrier4`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(9,715 missing values generated)
(4,279 real changes made)
(0 real changes made)
(5,436 real changes made)
(9,715 missing values generated)
(4,279 real changes made)
(0 real changes made)
(5,436 real changes made)

{com}. 
. * Quarter dummy 
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen quarter`n' = inlist(quarter, tq(2015q`n'), tq(2016q`n'), tq(2017q`n'), tq(2018q`n'), tq(2019q`n'))
{txt}  3{com}. {c )-}
{txt}
{com}. drop quarter1
{txt}
{com}. 
. * Post dummy
. gen post1 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4))
{txt}
{com}. gen post2 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2))
{txt}
{com}. gen post3 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4))
{txt}
{com}. gen post4 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4), tq(2018q1))
{txt}
{com}. 
. * lcc-market share in each market
. gen lcc_ratio_all = passenger_lcc / passenger
{txt}
{com}. gegen long lcc_ratio_pre1 = total(passenger_lcc) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gegen long lcc_ratio_pre2 = total(passenger) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gen lcc_ratio_pre = lcc_ratio_pre1 / lcc_ratio_pre2
{txt}(3,698 missing values generated)

{com}. 
. drop passenger_lcc1-passenger_lcc4 passenger_ASVX1-passenger_ASVX4 restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 lcc_ratio_pre1 lcc_ratio_pre2
{txt}
{com}. 
. local citytype origin destination
{txt}
{com}. foreach m of local citytype {c -(}
{txt}  2{com}.         merge m:1 `m' using "lookup/airport_code_`m'"
{txt}  3{com}.         drop if _merge == 2
{txt}  4{com}.         replace cityname = "Phoenix, Arizona, USA" if `m' == "AZA"
{txt}  5{com}.         replace cityname = "Branson, Missouri, USA" if `m' == "BKG"
{txt}  6{com}.         replace cityname = "Bay County, Florida, USA" if `m' == "ECP"
{txt}  7{com}.         replace cityname = "Concord, North Carolina, USA" if inlist(`m', "JQF", "USA")
{txt}  8{com}.         drop if inlist(`m', "DSS", "ICN", "PVG") 
{txt}  9{com}.         drop _merge
{txt} 10{com}.         rename cityname `m'_name
{txt} 11{com}.         split `m'_name, parse(,)
{txt} 12{com}.         replace `m'_name3 = strtrim(`m'_name3)
{txt} 13{com}.         replace `m'_name4 = strtrim(`m'_name4)
{txt} 14{com}.         drop if `m'_name3 != "USA" & `m'_name4 != "USA"
{txt} 15{com}.         drop `m'_name1-`m'_name4
{txt} 16{com}. {c )-}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}           9,156
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}           9,156{txt}  (_merge==2)

{col 5}Matched{col 30}{res}           9,760{txt}  (_merge==3)
{col 5}{hline 41}
(9,156 observations deleted)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 observations deleted)
{res}variables created as string: 
{txt}{col 1}origin_name1{col 15}origin_name2{col 29}origin_name3{col 43}origin_name4
(9,712 real changes made)
(699 real changes made)
(52 observations deleted)
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}           9,152
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}           9,152{txt}  (_merge==2)

{col 5}Matched{col 30}{res}           9,708{txt}  (_merge==3)
{col 5}{hline 41}
(9,152 observations deleted)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 observations deleted)
{res}variables created as string: 
{txt}{col 1}destinatio~1{col 15}destinatio~2{col 29}destinatio~3{col 43}destinatio~4
(9,628 real changes made)
(870 real changes made)
(89 observations deleted)

{com}. 
. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg3_ASVXonly.dta{rm}
saved
{p_end}

{com}. 
. 
. *********************
. *** 6-4. City All ***
. *********************
. use "dta_clean/${c -(}dataset{c )-}_agg2_city", clear
{txt}
{com}. 
. collapse (rawsum) revenue passenger passenger_lcc1-passenger_lcc4 passenger_ASVX1-passenger_ASVX4 (mean) fareI coupon_num roundtrip transfer restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 apt_num_origin_city apt_num_destination_city total_passenger_lcc1-total_passenger_lcc4 [fw = passenger], by(quarter market_id_city origin_city destination_city)
{err}variable {bf}total_passenger_lcc1{sf} not found
{txt}{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. use "dta_clean/${c -(}dataset{c )-}_agg2_city", clear

. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. forvalues n=1/4{c -(}
{txt}  2{com}.         gegen long total_passenger_lcc`n' = total(passenger_lcc`n') if coupon_num >= `n', by(market_id_city quarter)
{txt}  3{com}. {c )-}
{res}{txt}{res}{txt}{res}{txt}{res}{txt}{res}{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg2_city", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg2_city.dta{rm}
saved
{p_end}

{com}. 
. * Create a dataset with routes where either Alaska or Virgin operate 
. keep if (market1_AS == 1 | market1_VX == 1) & (market2_AS == 1 | market2_VX == 1 | (market2_AS == . | market2_VX == .))  & (market3_AS == 1 | market3_VX == 1 | (market3_AS == . | market3_VX == .)) & (market4_AS == 1 | market4_VX == 1 | (market4_AS == . | market4_VX == .)) 
{txt}(34,467,888 observations deleted)

{com}. 
. save "dta_clean/${c -(}dataset{c )-}_agg2_ASVX_city", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg2_ASVX_city.dta{rm}
saved
{p_end}

{com}. 
. 
. * Create a dataset with only Alaska 
. keep if (inlist(carrier1, "AS", "VX") & inlist(carrier2, "AS", "VX", "") & inlist(carrier3, "AS", "VX", "") & inlist(carrier4, "AS", "VX", ""))
{txt}(28,839,959 observations deleted)

{com}. save "dta_clean/${c -(}dataset{c )-}_agg2_ASVXonly_city", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg2_ASVXonly_city.dta{rm}
saved
{p_end}

{com}. 
{txt}end of do-file

{com}. br

. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use "dta_clean/${c -(}dataset{c )-}_agg2_city", clear
{txt}
{com}. 
. collapse (rawsum) revenue passenger passenger_lcc1-passenger_lcc4 passenger_ASVX1-passenger_ASVX4 (mean) fareI coupon_num roundtrip transfer restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 apt_num_origin_city apt_num_destination_city total_passenger_lcc1-total_passenger_lcc4 [fw = passenger], by(quarter market_id_city origin_city destination_city)
{res}{txt}
{com}. keep if passenger >= 90
{txt}(813,512 observations deleted)

{com}. rename (fareI origin_city destination_city market_id_city) (fare origin destination market_id)
{res}{txt}
{com}. gen lfare = log(fare), after(fare)
{txt}
{com}. gen lrevenue = log(revenue), after(revenue)
{txt}
{com}. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. 
{txt}end of do-file

{com}. br

. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. * Compute weighted_average
. gen coupon_total = coupon_total1 if coupon_total2 == .
{txt}(138,411 missing values generated)

{com}. replace coupon_total = coupon_total1+coupon_total2 if coupon_total3 == . & coupon_total2 != .
{txt}(11,821 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3 if coupon_total4 == . & coupon_total3 != .
{txt}(0 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3+coupon_total4 if coupon_total4 != .
{txt}(126,590 real changes made)

{com}. 
. local weighted total_passenger_lcc passenger_lcc passenger_ASVX restricted business first
{txt}
{com}. foreach m of local weighted{c -(}
{txt}  2{com}.         gen `m' = (`m'1*coupon_total1)/coupon_total if coupon_total2==., before(`m'1)
{txt}  3{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3+`m'4*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,586 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,586 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,586 real changes made)

{com}. 
. local airlines AS VX WN
{txt}
{com}. foreach m of local airlines{c -(}
{txt}  2{com}.         gen market_`m' = (market1_`m'*coupon_total1)/coupon_total if coupon_total2==., before(market1_`m')
{txt}  3{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3+market4_`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)

{com}. 
. local binary _total _total_lcc
{txt}
{com}. foreach m of local binary{c -(}
{txt}  2{com}.         gen carrier`m' = (carrier1`m'*coupon_total1)/coupon_total if coupon_total2==., before(carrier1`m')
{txt}  3{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3+carrier4`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)

{com}. 
. * Quarter dummy 
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen quarter`n' = inlist(quarter, tq(2015q`n'), tq(2016q`n'), tq(2017q`n'), tq(2018q`n'), tq(2019q`n'))
{txt}  3{com}. {c )-}
{txt}
{com}. drop quarter1
{txt}
{com}. 
. * Post dummy
. gen post1 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4))
{txt}
{com}. gen post2 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2))
{txt}
{com}. gen post3 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4))
{txt}
{com}. gen post4 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4), tq(2018q1))
{txt}
{com}. 
. * lcc-market share in each market
. gen lcc_ratio = passenger_lcc / passenger
{txt}
{com}. gegen long lcc_ratio_pre1 = total(passenger_lcc) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gegen long lcc_ratio_pre2 = total(passenger) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gen lcc_ratio_pre = lcc_ratio_pre1 / lcc_ratio_pre2
{txt}(54,423 missing values generated)

{com}. 
. drop passenger_lcc1-passenger_lcc4 total_passenger_lcc1-total_passenger_lcc4 passenger_ASVX1-passenger_ASVX4 restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 lcc_ratio_pre1 lcc_ratio_pre2
{txt}
{com}. 
. * Merge with lookup tables
. /*
> save "dta_clean/${c -(}dataset{c )-}_agg3_city", replace
> import delimited "lookup/airports_codes.txt", clear 
> drop worldareacode
> rename airportcode origin
> drop if inlist(origin, "SFF", "BST", "OLD", "CLV", "DTR")
> drop if inlist(origin, "HST", "LSA", "MAM", "TMP", "CNC")
> set obs `=_N+13'
> replace origin = "WDC" if _n == _N
> replace cityname = "Washington D.C., D.C., USA" if _n == _N
> replace origin = "SFF" if _n == _N-1
> replace cityname = "San Francisco, California, USA" if _n == _N-1
> replace origin = "BST" if _n == _N-2
> replace cityname = "Boston, Massachusettes, USA" if _n == _N-2
> replace origin = "OLD" if _n == _N-3
> replace cityname = "Chicago, Illinois, USA" if _n == _N-3
> replace origin = "CNC" if _n == _N-4
> replace cityname = "Cincinnati, Kentucky, USA" if _n == _N-4
> replace origin = "CLV" if _n == _N-5
> replace cityname = "Cleveland, Ohio, USA" if _n == _N-5
> replace origin = "DFO" if _n == _N-6
> replace cityname = "Dallas-Fort Worth, Texas, USA" if _n == _N-6
> replace origin = "DTR" if _n == _N-7
> replace cityname = "Detroit, Michigan, USA" if _n == _N-7
> replace origin = "HST" if _n == _N-8
> replace cityname = "Houston, Texas, USA" if _n == _N-8
> replace origin = "LSA" if _n == _N-9
> replace cityname = "Los Angels, California, USA" if _n == _N-9
> replace origin = "MAM" if _n == _N-10
> replace cityname = "Miami, Florida, USA" if _n == _N-10
> replace origin = "NYT" if _n == _N-11
> replace cityname = "New York, New York, USA" if _n == _N-11
> replace origin = "TMP" if _n == _N-12
> replace cityname = "Tampa, Florida, USA" if _n == _N-12
> save "lookup/airport_code_origin_city", replace
> rename origin destination
> save "lookup/airport_code_destination_city", replace
> 
> use "dta_clean/${c -(}dataset{c )-}_agg3_city", clear
> */
. local citytype origin destination
{txt}
{com}. 
. foreach m of local citytype {c -(}
{txt}  2{com}.         merge m:1 `m' using "lookup/airport_code_`m'_city"
{txt}  3{com}.         drop if _merge == 2
{txt}  4{com}.         replace cityname = "Phoenix, Arizona, USA" if `m' == "AZA"
{txt}  5{com}.         replace cityname = "Branson, Missouri, USA" if `m' == "BKG"
{txt}  6{com}.         replace cityname = "Bay County, Florida, USA" if `m' == "ECP"
{txt}  7{com}.         replace cityname = "Concord, North Carolina, USA" if inlist(`m', "JQF", "USA")
{txt}  8{com}.         drop if inlist(`m', "DSS", "ICN", "PVG") 
{txt}  9{com}.         drop _merge
{txt} 10{com}.         rename cityname `m'_name
{txt} 11{com}.         split `m'_name, parse(,)
{txt} 12{com}.         replace `m'_name3 = strtrim(`m'_name3)
{txt} 13{com}.         replace `m'_name4 = strtrim(`m'_name4)
{txt} 14{com}.         drop if `m'_name3 != "USA" & `m'_name4 != "USA"
{txt} 15{com}.         drop `m'_name1-`m'_name4
{txt} 16{com}. {c )-}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}           9,927
{txt}{col 9}from master{col 30}{res}           1,129{txt}  (_merge==1)
{col 9}from using{col 30}{res}           8,798{txt}  (_merge==2)

{col 5}Matched{col 30}{res}         137,306{txt}  (_merge==3)
{col 5}{hline 41}
(8,798 observations deleted)
(727 real changes made)
(5 real changes made)
(265 real changes made)
(91 real changes made)
(41 observations deleted)
{res}variables created as string: 
{txt}{col 1}origin_name1{col 15}origin_name2{col 29}origin_name3{col 43}origin_name4
(136,233 real changes made)
(2,929 real changes made)
(2,808 observations deleted)
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}          10,059
{txt}{col 9}from master{col 30}{res}           1,259{txt}  (_merge==1)
{col 9}from using{col 30}{res}           8,800{txt}  (_merge==2)

{col 5}Matched{col 30}{res}         134,327{txt}  (_merge==3)
{col 5}{hline 41}
(8,800 observations deleted)
(730 real changes made)
(7 real changes made)
(412 real changes made)
(79 real changes made)
(31 observations deleted)
{res}variables created as string: 
{txt}{col 1}destinatio~1{col 15}destinatio~2{col 29}destinatio~3{col 43}destinatio~4
(132,558 real changes made)
(3,528 real changes made)
(3,825 observations deleted)

{com}. 
. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg3_city", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg3_city.dta{rm}
saved
{p_end}

{com}. 
. *use "dta_clean/${c -(}dataset{c )-}_agg3_city", clear
. keep quarter market_id revenue lrevenue passenger passenger_ASVX fare lfare lcc_ratio
{txt}
{com}. rename (revenue lrevenue passenger passenger_ASVX fare lfare) (revenue_mkt lrevenue_mkt passenger_mkt passenger_ASVX_mkt fare_mkt lfare_mkt)
{res}{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg3_ASVXmarket", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg3_ASVXmarket.dta{rm}
saved
{p_end}

{com}. 
. **********************
. *** 6-5. City ASVX ***
. **********************
. use  "dta_clean/${c -(}dataset{c )-}_agg2_ASVX_city", clear
{txt}
{com}. 
. collapse (rawsum) revenue passenger passenger_lcc1-passenger_lcc4 passenger_ASVX1-passenger_ASVX4 (mean) fareI coupon_num roundtrip transfer restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 apt_num_origin_city apt_num_destination_city total_passenger_lcc1-total_passenger_lcc4 [fw = passenger], by(quarter market_id_city origin_city destination_city)
{res}{txt}
{com}. keep if passenger >= 90
{txt}(24,585 observations deleted)

{com}. rename (fareI origin_city destination_city market_id_city) (fare origin destination market_id)
{res}{txt}
{com}. gen lfare = log(fare), after(fare)
{txt}
{com}. gen lrevenue = log(revenue), after(revenue)
{txt}
{com}. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. 
. * Compute weighted_average
. gen coupon_total = coupon_total1 if coupon_total2 == .
{txt}(39,066 missing values generated)

{com}. replace coupon_total = coupon_total1+coupon_total2 if coupon_total3 == . & coupon_total2 != .
{txt}(13,711 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3 if coupon_total4 == . & coupon_total3 != .
{txt}(0 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3+coupon_total4 if coupon_total4 != .
{txt}(25,355 real changes made)

{com}. 
. local weighted total_passenger_lcc passenger_ASVX restricted business first
{txt}
{com}. foreach m of local weighted{c -(}
{txt}  2{com}.         gen `m' = (`m'1*coupon_total1)/coupon_total if coupon_total2==., before(`m'1)
{txt}  3{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3+`m'4*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)

{com}. 
. local airlines AS VX WN
{txt}
{com}. foreach m of local airlines{c -(}
{txt}  2{com}.         gen market_`m' = (market1_`m'*coupon_total1)/coupon_total if coupon_total2==., before(market1_`m')
{txt}  3{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3+market4_`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)

{com}. 
. local binary _total _total_lcc
{txt}
{com}. foreach m of local binary{c -(}
{txt}  2{com}.         gen carrier`m' = (carrier1`m'*coupon_total1)/coupon_total if coupon_total2==., before(carrier1`m')
{txt}  3{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3+carrier4`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)

{com}. 
. * Quarter dummy 
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen quarter`n' = inlist(quarter, tq(2015q`n'), tq(2016q`n'), tq(2017q`n'), tq(2018q`n'), tq(2019q`n'))
{txt}  3{com}. {c )-}
{txt}
{com}. drop quarter1
{txt}
{com}. 
. * Post dummy
. gen post1 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4))
{txt}
{com}. gen post2 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2))
{txt}
{com}. gen post3 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4))
{txt}
{com}. gen post4 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4), tq(2018q1))
{txt}
{com}. 
. * lcc-market share in each market
. gen lcc_ratio = passenger_lcc / passenger
{err}passenger_lcc ambiguous abbreviation
{txt}{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. br

. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. local weighted passenger_lcc
{txt}
{com}. foreach m of local weighted{c -(}
{txt}  2{com}.         gen `m' = (`m'1*coupon_total1)/coupon_total if coupon_total2==., before(`m'1)
{txt}  3{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3+`m'4*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. * lcc-market share in each market
. gen lcc_ratio = passenger_lcc / passenger
{txt}
{com}. gegen long lcc_ratio_pre1 = total(passenger_lcc) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gegen long lcc_ratio_pre2 = total(passenger) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gen lcc_ratio_pre = lcc_ratio_pre1 / lcc_ratio_pre2
{txt}(15,017 missing values generated)

{com}. 
. drop passenger_lcc1-passenger_lcc4 total_passenger_lcc1-total_passenger_lcc4 passenger_ASVX1-passenger_ASVX4 restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 lcc_ratio_pre1 lcc_ratio_pre2
{txt}
{com}. 
. * Merge with lookup tables
. /*
> save "dta_clean/${c -(}dataset{c )-}_agg3_city", replace
> import delimited "lookup/airports_codes.txt", clear 
> drop worldareacode
> rename airportcode origin
> drop if inlist(origin, "SFF", "BST", "OLD", "CLV", "DTR")
> drop if inlist(origin, "HST", "LSA", "MAM", "TMP", "CNC")
> set obs `=_N+13'
> replace origin = "WDC" if _n == _N
> replace cityname = "Washington D.C., D.C., USA" if _n == _N
> replace origin = "SFF" if _n == _N-1
> replace cityname = "San Francisco, California, USA" if _n == _N-1
> replace origin = "BST" if _n == _N-2
> replace cityname = "Boston, Massachusettes, USA" if _n == _N-2
> replace origin = "OLD" if _n == _N-3
> replace cityname = "Chicago, Illinois, USA" if _n == _N-3
> replace origin = "CNC" if _n == _N-4
> replace cityname = "Cincinnati, Kentucky, USA" if _n == _N-4
> replace origin = "CLV" if _n == _N-5
> replace cityname = "Cleveland, Ohio, USA" if _n == _N-5
> replace origin = "DFO" if _n == _N-6
> replace cityname = "Dallas-Fort Worth, Texas, USA" if _n == _N-6
> replace origin = "DTR" if _n == _N-7
> replace cityname = "Detroit, Michigan, USA" if _n == _N-7
> replace origin = "HST" if _n == _N-8
> replace cityname = "Houston, Texas, USA" if _n == _N-8
> replace origin = "LSA" if _n == _N-9
> replace cityname = "Los Angels, California, USA" if _n == _N-9
> replace origin = "MAM" if _n == _N-10
> replace cityname = "Miami, Florida, USA" if _n == _N-10
> replace origin = "NYT" if _n == _N-11
> replace cityname = "New York, New York, USA" if _n == _N-11
> replace origin = "TMP" if _n == _N-12
> replace cityname = "Tampa, Florida, USA" if _n == _N-12
> save "lookup/airport_code_origin_city", replace
> rename origin destination
> save "lookup/airport_code_destination_city", replace
> 
> use "dta_clean/${c -(}dataset{c )-}_agg3_city", clear
> */
. local citytype origin destination
{txt}
{com}. 
. foreach m of local citytype {c -(}
{txt}  2{com}.         merge m:1 `m' using "lookup/airport_code_`m'_city"
{txt}  3{com}.         drop if _merge == 2
{txt}  4{com}.         replace cityname = "Phoenix, Arizona, USA" if `m' == "AZA"
{txt}  5{com}.         replace cityname = "Branson, Missouri, USA" if `m' == "BKG"
{txt}  6{com}.         replace cityname = "Bay County, Florida, USA" if `m' == "ECP"
{txt}  7{com}.         replace cityname = "Concord, North Carolina, USA" if inlist(`m', "JQF", "USA")
{txt}  8{com}.         drop if inlist(`m', "DSS", "ICN", "PVG") 
{txt}  9{com}.         drop _merge
{txt} 10{com}.         rename cityname `m'_name
{txt} 11{com}.         split `m'_name, parse(,)
{txt} 12{com}.         replace `m'_name3 = strtrim(`m'_name3)
{txt} 13{com}.         replace `m'_name4 = strtrim(`m'_name4)
{txt} 14{com}.         drop if `m'_name3 != "USA" & `m'_name4 != "USA"
{txt} 15{com}.         drop `m'_name1-`m'_name4
{txt} 16{com}. {c )-}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}           9,163
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}           9,163{txt}  (_merge==2)

{col 5}Matched{col 30}{res}          40,331{txt}  (_merge==3)
{col 5}{hline 41}
(9,163 observations deleted)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 observations deleted)
{res}variables created as string: 
{txt}{col 1}origin_name1{col 15}origin_name2{col 29}origin_name3{col 43}origin_name4
(40,241 real changes made)
(1,536 real changes made)
(148 observations deleted)
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}           9,128
{txt}{col 9}from master{col 30}{res}              11{txt}  (_merge==1)
{col 9}from using{col 30}{res}           9,117{txt}  (_merge==2)

{col 5}Matched{col 30}{res}          40,172{txt}  (_merge==3)
{col 5}{hline 41}
(9,117 observations deleted)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(11 observations deleted)
{res}variables created as string: 
{txt}{col 1}destinatio~1{col 15}destinatio~2{col 29}destinatio~3{col 43}destinatio~4
(40,005 real changes made)
(2,207 real changes made)
(259 observations deleted)

{com}. 
. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg3_city", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg3_city.dta{rm}
saved
{p_end}

{com}. 
. *use "dta_clean/${c -(}dataset{c )-}_agg3_city", clear
. keep quarter market_id revenue lrevenue passenger passenger_ASVX fare lfare lcc_ratio
{txt}
{com}. rename (revenue lrevenue passenger passenger_ASVX fare lfare) (revenue_mkt lrevenue_mkt passenger_mkt passenger_ASVX_mkt fare_mkt lfare_mkt)
{res}{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg3_ASVXmarket", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg3_ASVXmarket.dta{rm}
saved
{p_end}

{com}. 
. **********************
. *** 6-5. City ASVX ***
. **********************
. use  "dta_clean/${c -(}dataset{c )-}_agg2_ASVX_city", clear
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. collapse (rawsum) revenue passenger passenger_lcc1-passenger_lcc4 passenger_ASVX1-passenger_ASVX4 (mean) fareI coupon_num roundtrip transfer restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 apt_num_origin_city apt_num_destination_city total_passenger_lcc1-total_passenger_lcc4 [fw = passenger], by(quarter market_id_city origin_city destination_city)
{res}{txt}
{com}. keep if passenger >= 90
{txt}(24,585 observations deleted)

{com}. rename (fareI origin_city destination_city market_id_city) (fare origin destination market_id)
{res}{txt}
{com}. gen lfare = log(fare), after(fare)
{txt}
{com}. gen lrevenue = log(revenue), after(revenue)
{txt}
{com}. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. 
. * Compute weighted_average
. gen coupon_total = coupon_total1 if coupon_total2 == .
{txt}(39,066 missing values generated)

{com}. replace coupon_total = coupon_total1+coupon_total2 if coupon_total3 == . & coupon_total2 != .
{txt}(13,711 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3 if coupon_total4 == . & coupon_total3 != .
{txt}(0 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3+coupon_total4 if coupon_total4 != .
{txt}(25,355 real changes made)

{com}. 
. local weighted total_passenger_lcc passenger_ASVX restricted business first
{txt}
{com}. foreach m of local weighted{c -(}
{txt}  2{com}.         gen `m' = (`m'1*coupon_total1)/coupon_total if coupon_total2==., before(`m'1)
{txt}  3{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3+`m'4*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)

{com}. 
. local airlines AS VX WN
{txt}
{com}. foreach m of local airlines{c -(}
{txt}  2{com}.         gen market_`m' = (market1_`m'*coupon_total1)/coupon_total if coupon_total2==., before(market1_`m')
{txt}  3{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3+market4_`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)

{com}. 
. local binary _total _total_lcc
{txt}
{com}. foreach m of local binary{c -(}
{txt}  2{com}.         gen carrier`m' = (carrier1`m'*coupon_total1)/coupon_total if coupon_total2==., before(carrier1`m')
{txt}  3{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3+carrier4`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)
(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)

{com}. 
. * Quarter dummy 
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen quarter`n' = inlist(quarter, tq(2015q`n'), tq(2016q`n'), tq(2017q`n'), tq(2018q`n'), tq(2019q`n'))
{txt}  3{com}. {c )-}
{txt}
{com}. drop quarter1
{txt}
{com}. 
. * Post dummy
. gen post1 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4))
{txt}
{com}. gen post2 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2))
{txt}
{com}. gen post3 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4))
{txt}
{com}. gen post4 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4), tq(2018q1))
{txt}
{com}. 
. * lcc-market share in each market
. gen lcc_ratio = passenger_lcc / passenger
{err}passenger_lcc ambiguous abbreviation
{txt}{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. local weighted passenger_lcc
{txt}
{com}. foreach m of local weighted{c -(}
{txt}  2{com}.         gen `m' = (`m'1*coupon_total1)/coupon_total if coupon_total2==., before(`m'1)
{txt}  3{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3+`m'4*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(39,066 missing values generated)
(13,711 real changes made)
(0 real changes made)
(25,355 real changes made)

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. * lcc-market share in each market
. gen lcc_ratio = passenger_lcc / passenger
{txt}
{com}. gegen long lcc_ratio_pre1 = total(passenger_lcc) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gegen long lcc_ratio_pre2 = total(passenger) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gen lcc_ratio_pre = lcc_ratio_pre1 / lcc_ratio_pre2
{txt}(15,017 missing values generated)

{com}. 
. drop passenger_lcc1-passenger_lcc4 total_passenger_lcc1-total_passenger_lcc4 passenger_ASVX1-passenger_ASVX4 restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 lcc_ratio_pre1 lcc_ratio_pre2
{txt}
{com}. 
. local citytype origin destination
{txt}
{com}. foreach m of local citytype {c -(}
{txt}  2{com}.         merge m:1 `m' using "lookup/airport_code_`m'_city"
{txt}  3{com}.         drop if _merge == 2 
{txt}  4{com}.         replace cityname = "Phoenix, Arizona, USA" if `m' == "AZA"
{txt}  5{com}.         replace cityname = "Branson, Missouri, USA" if `m' == "BKG"
{txt}  6{com}.         replace cityname = "Bay County, Florida, USA" if `m' == "ECP"
{txt}  7{com}.         replace cityname = "Concord, North Carolina, USA" if inlist(`m', "JQF", "USA")
{txt}  8{com}.         drop if inlist(`m', "DSS", "ICN", "PVG") 
{txt}  9{com}.         drop _merge
{txt} 10{com}.         rename cityname `m'_name
{txt} 11{com}.         split `m'_name, parse(,)
{txt} 12{com}.         replace `m'_name3 = strtrim(`m'_name3)
{txt} 13{com}.         replace `m'_name4 = strtrim(`m'_name4)
{txt} 14{com}.         drop if `m'_name3 != "USA" & `m'_name4 != "USA"
{txt} 15{com}.         drop `m'_name1-`m'_name4
{txt} 16{com}. {c )-}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}           9,163
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}           9,163{txt}  (_merge==2)

{col 5}Matched{col 30}{res}          40,331{txt}  (_merge==3)
{col 5}{hline 41}
(9,163 observations deleted)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 observations deleted)
{res}variables created as string: 
{txt}{col 1}origin_name1{col 15}origin_name2{col 29}origin_name3{col 43}origin_name4
(40,241 real changes made)
(1,536 real changes made)
(148 observations deleted)
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}           9,128
{txt}{col 9}from master{col 30}{res}              11{txt}  (_merge==1)
{col 9}from using{col 30}{res}           9,117{txt}  (_merge==2)

{col 5}Matched{col 30}{res}          40,172{txt}  (_merge==3)
{col 5}{hline 41}
(9,117 observations deleted)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(11 observations deleted)
{res}variables created as string: 
{txt}{col 1}destinatio~1{col 15}destinatio~2{col 29}destinatio~3{col 43}destinatio~4
(40,005 real changes made)
(2,207 real changes made)
(259 observations deleted)

{com}. 
. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg3_ASVX_city", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg3_ASVX_city.dta{rm}
saved
{p_end}

{com}. 
. *use "dta_clean/${c -(}dataset{c )-}_agg3_ASVX_city", clear
. keep quarter market_id revenue lrevenue passenger passenger_ASVX fare lfare lcc_ratio_pre
{txt}
{com}. rename (revenue lrevenue passenger passenger_ASVX fare lfare lcc_ratio) (revenue_mkt lrevenue_mkt passenger_mkt passenger_ASVX_mkt fare_mkt lfare_mkt)
{res}{err}corresponding {it:oldnames} and {it:newnames} mismatch
{p 4 4 2}
You specified or implied 7 {it:oldnames}
and 6 {it:newnames};
{p_end}
{txt}{search r(198), local:r(198);}

end of do-file

{search r(198), local:r(198);}

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. keep quarter market_id revenue lrevenue passenger passenger_ASVX fare lfare lcc_ratio_pre
{txt}
{com}. rename (revenue lrevenue passenger passenger_ASVX fare lfare) (revenue_mkt lrevenue_mkt passenger_mkt passenger_ASVX_mkt fare_mkt lfare_mkt)
{res}{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg3_ASVXmarket", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg3_ASVXmarket.dta{rm}
saved
{p_end}

{com}. 
. **************************
. *** 6-6. City ASVXonly ***
. **************************
. use  "dta_clean/${c -(}dataset{c )-}_agg2_ASVXonly_city", clear
{txt}
{com}. 
. collapse (rawsum) revenue passenger passenger_lcc1-passenger_lcc4 passenger_ASVX1-passenger_ASVX4 (mean) fareI coupon_num roundtrip transfer restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 apt_num_origin_city apt_num_destination_city total_passenger_lcc1-total_passenger_lcc4 [fw = passenger], by(quarter market_id_city origin_city destination_city)
{res}{txt}
{com}. keep if passenger >= 30
{txt}(22,281 observations deleted)

{com}. rename (fareI origin_city destination_city market_id_city) (fare origin destination market_id)
{res}{txt}
{com}. gen lfare = log(fare), after(fare)
{txt}
{com}. gen lrevenue = log(revenue), after(revenue)
{txt}
{com}. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. 
. * Compute weighted_average
. gen coupon_total = coupon_total1 if coupon_total2 == .
{txt}(9,003 missing values generated)

{com}. replace coupon_total = coupon_total1+coupon_total2 if coupon_total3 == . & coupon_total2 != .
{txt}(3,606 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3 if coupon_total4 == . & coupon_total3 != .
{txt}(0 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3+coupon_total4 if coupon_total4 != .
{txt}(5,397 real changes made)

{com}. 
. local weighted passenger_lcc passenger_ASVX restricted business first
{txt}
{com}. foreach m of local weighted{c -(}
{txt}  2{com}.         gen `m' = (`m'1*coupon_total1)/coupon_total if coupon_total2==., before(`m'1)
{txt}  3{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3+`m'4*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(9,003 missing values generated)
(3,606 real changes made)
(0 real changes made)
(5,397 real changes made)
(9,003 missing values generated)
(3,606 real changes made)
(0 real changes made)
(5,397 real changes made)
(9,003 missing values generated)
(3,606 real changes made)
(0 real changes made)
(5,397 real changes made)
(9,003 missing values generated)
(3,606 real changes made)
(0 real changes made)
(5,397 real changes made)
(9,003 missing values generated)
(3,606 real changes made)
(0 real changes made)
(5,397 real changes made)

{com}. 
. local airlines AS VX WN
{txt}
{com}. foreach m of local airlines{c -(}
{txt}  2{com}.         gen market_`m' = (market1_`m'*coupon_total1)/coupon_total if coupon_total2==., before(market1_`m')
{txt}  3{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3+market4_`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(9,003 missing values generated)
(3,606 real changes made)
(0 real changes made)
(5,397 real changes made)
(9,003 missing values generated)
(3,606 real changes made)
(0 real changes made)
(5,397 real changes made)
(9,003 missing values generated)
(3,606 real changes made)
(0 real changes made)
(5,397 real changes made)

{com}. 
. local binary _total _total_lcc
{txt}
{com}. foreach m of local binary{c -(}
{txt}  2{com}.         gen carrier`m' = (carrier1`m'*coupon_total1)/coupon_total if coupon_total2==., before(carrier1`m')
{txt}  3{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3+carrier4`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(9,003 missing values generated)
(3,606 real changes made)
(0 real changes made)
(5,397 real changes made)
(9,003 missing values generated)
(3,606 real changes made)
(0 real changes made)
(5,397 real changes made)

{com}. 
. * Quarter dummy 
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen quarter`n' = inlist(quarter, tq(2015q`n'), tq(2016q`n'), tq(2017q`n'), tq(2018q`n'), tq(2019q`n'))
{txt}  3{com}. {c )-}
{txt}
{com}. drop quarter1
{txt}
{com}. 
. * Post dummy
. gen post1 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4))
{txt}
{com}. gen post2 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2))
{txt}
{com}. gen post3 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4))
{txt}
{com}. gen post4 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4), tq(2018q1))
{txt}
{com}. 
. * lcc-market share in each market
. gen lcc_ratio = passenger_lcc / passenger
{txt}
{com}. gegen long lcc_ratio_pre1 = total(passenger_lcc) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gegen long lcc_ratio_pre2 = total(passenger) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gen lcc_ratio_pre = lcc_ratio_pre1 / lcc_ratio_pre2
{txt}(3,429 missing values generated)

{com}. 
. drop passenger_lcc1-passenger_lcc4 total_passenger_lcc1-total_passenger_lcc4 passenger_ASVX1-passenger_ASVX4 restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 lcc_ratio_pre1 lcc_ratio_pre2
{txt}
{com}. 
. local citytype origin destination
{txt}
{com}. foreach m of local citytype {c -(}
{txt}  2{com}.         merge m:1 `m' using "lookup/airport_code_`m'_city"
{txt}  3{com}.         drop if _merge == 2
{txt}  4{com}.         replace cityname = "Phoenix, Arizona, USA" if `m' == "AZA"
{txt}  5{com}.         replace cityname = "Branson, Missouri, USA" if `m' == "BKG"
{txt}  6{com}.         replace cityname = "Bay County, Florida, USA" if `m' == "ECP"
{txt}  7{com}.         replace cityname = "Concord, North Carolina, USA" if inlist(`m', "JQF", "USA")
{txt}  8{com}.         drop if inlist(`m', "DSS", "ICN", "PVG") 
{txt}  9{com}.         drop _merge
{txt} 10{com}.         rename cityname `m'_name
{txt} 11{com}.         split `m'_name, parse(,)
{txt} 12{com}.         replace `m'_name3 = strtrim(`m'_name3)
{txt} 13{com}.         replace `m'_name4 = strtrim(`m'_name4)
{txt} 14{com}.         drop if `m'_name3 != "USA" & `m'_name4 != "USA"
{txt} 15{com}.         drop `m'_name1-`m'_name4
{txt} 16{com}. {c )-}
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}           9,165
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}           9,165{txt}  (_merge==2)

{col 5}Matched{col 30}{res}           9,048{txt}  (_merge==3)
{col 5}{hline 41}
(9,165 observations deleted)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 observations deleted)
{res}variables created as string: 
{txt}{col 1}origin_name1{col 15}origin_name2{col 29}origin_name3{col 43}origin_name4
(8,999 real changes made)
(675 real changes made)
(53 observations deleted)
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}           9,161
{txt}{col 9}from master{col 30}{res}               0{txt}  (_merge==1)
{col 9}from using{col 30}{res}           9,161{txt}  (_merge==2)

{col 5}Matched{col 30}{res}           8,995{txt}  (_merge==3)
{col 5}{hline 41}
(9,161 observations deleted)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 observations deleted)
{res}variables created as string: 
{txt}{col 1}destinatio~1{col 15}destinatio~2{col 29}destinatio~3{col 43}destinatio~4
(8,914 real changes made)
(839 real changes made)
(90 observations deleted)

{com}. 
. *save "dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", replace
. *use "dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", clear
. merge 1:1 market_id quarter using "dta_clean/${c -(}dataset{c )-}_agg3_ASVXmarket"
{res}
{txt}{col 5}Result{col 33}Number of obs
{col 5}{hline 41}
{col 5}Not matched{col 30}{res}          33,194
{txt}{col 9}from master{col 30}{res}           1,093{txt}  (_merge==1)
{col 9}from using{col 30}{res}          32,101{txt}  (_merge==2)

{col 5}Matched{col 30}{res}           7,812{txt}  (_merge==3)
{col 5}{hline 41}

{com}. keep if _merge == 3 //check later
{txt}(33,194 observations deleted)

{com}. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg3_ASVXonly_city.dta{rm}
saved
{p_end}

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. // Data Aggregation File for DB1B public database
. // Name: Tatsuki Kikugawa
. 
. *********************
. *** 7. Regression ***
. *********************
. 
. *******************************
. *** 7-0. Summary Statistics ***
. *******************************
. cd "${c -(}rep_folder{c )-}"
{res}/Users/tsukik/Downloads/airline_tatsuki
{txt}
{com}. clear
{txt}
{com}. use "input/dta_clean/${c -(}dataset{c )-}_agg2", clear
{txt}
{com}. 
. gen coupon_num2 = coupon_num if inlist(coupon_num, 1, 4)
{txt}(39,935,246 missing values generated)

{com}. replace coupon_num2 = 3 if coupon_num == 2 & roundtrip == 1
{txt}(22,673,483 real changes made)

{com}. replace coupon_num2 = 2 if coupon_num == 2 & roundtrip == 0
{txt}(17,261,763 real changes made)

{com}. label var coupon_num2 "Ticket type"
{txt}
{com}. label define coupon_num2 1 "1 coupon" 2 "2 coupons/One-way" 3 "2 coupons/roundtrip" 4 "4 coupons"
{txt}
{com}. label values coupon_num2 coupon_num2
{txt}
{com}. hist coupon_num2 [fweight=passenger], freq ///
>         barwidth(0.5) ///
>         xlabel(, valuelabel) ///
>         ytitle("Ticket count (in 10M)") //subtitle("Distribution of ticket type")
{txt}(bin={res}81{txt}, start={res}1{txt}, width={res}.03703704{txt})
{res}{txt}
{com}. graph save Graph "${c -(}figs{c )-}/fig1_hist_ticket", replace
{res}{txt}file {bf:/Users/tsukik/Downloads/airline_tatsuki/output/figs/fig1_hist_ticket.gph} saved

{com}. 
. *** Summary Statistics
. cd "${c -(}rep_folder{c )-}"
{res}/Users/tsukik/Downloads/airline_tatsuki
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3", clear
{txt}
{com}. eststo data2: estpost summarize fare passenger revenue lcc_ratio_pre  coupon_num roundtrip transfer restricted business first carrier_total carrier_total_lcc market_AS market_VX market_WN 

{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:e(count)}{space 1}{space 1}{ralign 9:e(sum_w)}{space 1}{space 1}{ralign 9:e(mean)}{space 1}{space 1}{ralign 9:e(Var)}{space 1}{space 1}{ralign 9:e(sd)}{space 1}{space 1}{ralign 9:e(min)}{space 1}{space 1}{ralign 9:e(max)}{space 1}{space 1}{ralign 9:e(sum)}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:fare}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: 328.0116}}}{space 1}{space 1}{ralign 9:{res:{sf: 12370.37}}}{space 1}{space 1}{ralign 9:{res:{sf: 111.2221}}}{space 1}{space 1}{ralign 9:{res:{sf: 31.99422}}}{space 1}{space 1}{ralign 9:{res:{sf: 1016.772}}}{space 1}{space 1}{ralign 9:{res:{sf: 5.05e+07}}}{space 1}
{space 0}{space 0}{ralign 12:passenger}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: 904.0791}}}{space 1}{space 1}{ralign 9:{res:{sf:  2970688}}}{space 1}{space 1}{ralign 9:{res:{sf: 1723.569}}}{space 1}{space 1}{ralign 9:{res:{sf:       90}}}{space 1}{space 1}{ralign 9:{res:{sf:    36304}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.39e+08}}}{space 1}
{space 0}{space 0}{ralign 12:revenue}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   253560}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.12e+11}}}{space 1}{space 1}{ralign 9:{res:{sf: 460619.5}}}{space 1}{space 1}{ralign 9:{res:{sf:     3722}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.41e+07}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.90e+10}}}{space 1}
{space 0}{space 0}{ralign 12:lcc_ratio_~e}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    96256}}}{space 1}{space 1}{ralign 9:{res:{sf:    96256}}}{space 1}{space 1}{ralign 9:{res:{sf: .2953412}}}{space 1}{space 1}{ralign 9:{res:{sf: .0852144}}}{space 1}{space 1}{ralign 9:{res:{sf: .2919151}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 28428.36}}}{space 1}
{space 0}{space 0}{ralign 12:coupon_num}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.218993}}}{space 1}{space 1}{ralign 9:{res:{sf: .3713879}}}{space 1}{space 1}{ralign 9:{res:{sf: .6094161}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf:        4}}}{space 1}{space 1}{ralign 9:{res:{sf: 341549.6}}}{space 1}
{space 0}{space 0}{ralign 12:roundtrip}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: .5143198}}}{space 1}{space 1}{ralign 9:{res:{sf: .0290773}}}{space 1}{space 1}{ralign 9:{res:{sf: .1705207}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 79164.62}}}{space 1}
{space 0}{space 0}{ralign 12:transfer}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: .4940625}}}{space 1}{space 1}{ralign 9:{res:{sf: .1775331}}}{space 1}{space 1}{ralign 9:{res:{sf: .4213468}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 76046.59}}}{space 1}
{space 0}{space 0}{ralign 12:restricted}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153917}}}{space 1}{space 1}{ralign 9:{res:{sf:   153917}}}{space 1}{space 1}{ralign 9:{res:{sf: .1824388}}}{space 1}{space 1}{ralign 9:{res:{sf: .0353353}}}{space 1}{space 1}{ralign 9:{res:{sf: .1879768}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 28080.43}}}{space 1}
{space 0}{space 0}{ralign 12:business}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153917}}}{space 1}{space 1}{ralign 9:{res:{sf:   153917}}}{space 1}{space 1}{ralign 9:{res:{sf: .0096139}}}{space 1}{space 1}{ralign 9:{res:{sf: .0002842}}}{space 1}{space 1}{ralign 9:{res:{sf: .0168577}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .5778689}}}{space 1}{space 1}{ralign 9:{res:{sf:  1479.74}}}{space 1}
{space 0}{space 0}{ralign 12:first}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153917}}}{space 1}{space 1}{ralign 9:{res:{sf:   153917}}}{space 1}{space 1}{ralign 9:{res:{sf: .0367656}}}{space 1}{space 1}{ralign 9:{res:{sf:  .011247}}}{space 1}{space 1}{ralign 9:{res:{sf: .1060519}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 5658.854}}}{space 1}
{space 0}{space 0}{ralign 12:carrier_to~l}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:  12.0286}}}{space 1}{space 1}{ralign 9:{res:{sf: 26.35822}}}{space 1}{space 1}{ralign 9:{res:{sf: 5.134026}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 23.70124}}}{space 1}{space 1}{ralign 9:{res:{sf:  1851453}}}{space 1}
{space 0}{space 0}{ralign 12:carrier_to~c}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.738826}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.709431}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.307452}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        7}}}{space 1}{space 1}{ralign 9:{res:{sf: 267641.8}}}{space 1}
{space 0}{space 0}{ralign 12:market_AS}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: .3343685}}}{space 1}{space 1}{ralign 9:{res:{sf: .1926311}}}{space 1}{space 1}{ralign 9:{res:{sf: .4388976}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 51466.34}}}{space 1}
{space 0}{space 0}{ralign 12:market_VX}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0796525}}}{space 1}{space 1}{ralign 9:{res:{sf: .0625076}}}{space 1}{space 1}{ralign 9:{res:{sf: .2500152}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 12260.19}}}{space 1}
{space 0}{space 0}{ralign 12:market_WN}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: .5880542}}}{space 1}{space 1}{ralign 9:{res:{sf: .2412412}}}{space 1}{space 1}{ralign 9:{res:{sf: .4911631}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 90513.89}}}{space 1}

{com}. 
. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. eststo data1: estpost summarize fare passenger revenue lcc_ratio_pre  coupon_num roundtrip transfer restricted business first carrier_total carrier_total_lcc market_AS market_VX market_WN 

{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:e(count)}{space 1}{space 1}{ralign 9:e(sum_w)}{space 1}{space 1}{ralign 9:e(mean)}{space 1}{space 1}{ralign 9:e(Var)}{space 1}{space 1}{ralign 9:e(sd)}{space 1}{space 1}{ralign 9:e(min)}{space 1}{space 1}{ralign 9:e(max)}{space 1}{space 1}{ralign 9:e(sum)}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:fare}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:  322.504}}}{space 1}{space 1}{ralign 9:{res:{sf: 13058.31}}}{space 1}{space 1}{ralign 9:{res:{sf:  114.273}}}{space 1}{space 1}{ralign 9:{res:{sf: 46.42857}}}{space 1}{space 1}{ralign 9:{res:{sf: 1030.938}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.29e+07}}}{space 1}
{space 0}{space 0}{ralign 12:passenger}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: 2386.439}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.73e+07}}}{space 1}{space 1}{ralign 9:{res:{sf: 4157.482}}}{space 1}{space 1}{ralign 9:{res:{sf:       90}}}{space 1}{space 1}{ralign 9:{res:{sf:    97770}}}{space 1}{space 1}{ralign 9:{res:{sf: 9.52e+07}}}{space 1}
{space 0}{space 0}{ralign 12:revenue}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: 657769.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.26e+12}}}{space 1}{space 1}{ralign 9:{res:{sf:  1124106}}}{space 1}{space 1}{ralign 9:{res:{sf:     5182}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.99e+07}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.63e+10}}}{space 1}
{space 0}{space 0}{ralign 12:lcc_ratio_~e}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    25314}}}{space 1}{space 1}{ralign 9:{res:{sf:    25314}}}{space 1}{space 1}{ralign 9:{res:{sf: .3181223}}}{space 1}{space 1}{ralign 9:{res:{sf: .0566632}}}{space 1}{space 1}{ralign 9:{res:{sf: .2380404}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 8052.949}}}{space 1}
{space 0}{space 0}{ralign 12:coupon_num}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.969854}}}{space 1}{space 1}{ralign 9:{res:{sf: .2710606}}}{space 1}{space 1}{ralign 9:{res:{sf: .5206349}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.934426}}}{space 1}{space 1}{ralign 9:{res:{sf: 78622.78}}}{space 1}
{space 0}{space 0}{ralign 12:roundtrip}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .4352087}}}{space 1}{space 1}{ralign 9:{res:{sf: .0422039}}}{space 1}{space 1}{ralign 9:{res:{sf: .2054359}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .9672131}}}{space 1}{space 1}{ralign 9:{res:{sf: 17370.48}}}{space 1}
{space 0}{space 0}{ralign 12:transfer}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:  .417132}}}{space 1}{space 1}{ralign 9:{res:{sf: .1556252}}}{space 1}{space 1}{ralign 9:{res:{sf: .3944936}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 16648.99}}}{space 1}
{space 0}{space 0}{ralign 12:restricted}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .1847534}}}{space 1}{space 1}{ralign 9:{res:{sf: .0199131}}}{space 1}{space 1}{ralign 9:{res:{sf: .1411136}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 7374.061}}}{space 1}
{space 0}{space 0}{ralign 12:business}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .0126012}}}{space 1}{space 1}{ralign 9:{res:{sf: .0003659}}}{space 1}{space 1}{ralign 9:{res:{sf: .0191292}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .5732632}}}{space 1}{space 1}{ralign 9:{res:{sf: 502.9526}}}{space 1}
{space 0}{space 0}{ralign 12:first}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .0367983}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066122}}}{space 1}{space 1}{ralign 9:{res:{sf: .0813154}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 1468.732}}}{space 1}
{space 0}{space 0}{ralign 12:carrier_to~l}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:   14.229}}}{space 1}{space 1}{ralign 9:{res:{sf: 22.80242}}}{space 1}{space 1}{ralign 9:{res:{sf: 4.775188}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 40.99807}}}{space 1}{space 1}{ralign 9:{res:{sf: 567921.9}}}{space 1}
{space 0}{space 0}{ralign 12:carrier_to~c}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.906832}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.829401}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.682082}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        7}}}{space 1}{space 1}{ralign 9:{res:{sf: 116020.4}}}{space 1}
{space 0}{space 0}{ralign 12:market_AS}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:  .998005}}}{space 1}{space 1}{ralign 9:{res:{sf: .0017363}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416683}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 39833.37}}}{space 1}
{space 0}{space 0}{ralign 12:market_VX}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .2572929}}}{space 1}{space 1}{ralign 9:{res:{sf:  .156829}}}{space 1}{space 1}{ralign 9:{res:{sf: .3960164}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 10269.33}}}{space 1}
{space 0}{space 0}{ralign 12:market_WN}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .8325676}}}{space 1}{space 1}{ralign 9:{res:{sf: .1375603}}}{space 1}{space 1}{ralign 9:{res:{sf: .3708912}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 33230.27}}}{space 1}

{com}. 
. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_ASVX_city", clear
{txt}
{com}. eststo data3: estpost summarize fare passenger revenue lcc_ratio_pre  coupon_num roundtrip transfer restricted business first carrier_total carrier_total_lcc market_AS market_VX market_WN 

{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:e(count)}{space 1}{space 1}{ralign 9:e(sum_w)}{space 1}{space 1}{ralign 9:e(mean)}{space 1}{space 1}{ralign 9:e(Var)}{space 1}{space 1}{ralign 9:e(sd)}{space 1}{space 1}{ralign 9:e(min)}{space 1}{space 1}{ralign 9:e(max)}{space 1}{space 1}{ralign 9:e(sum)}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:fare}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:  322.504}}}{space 1}{space 1}{ralign 9:{res:{sf: 13058.31}}}{space 1}{space 1}{ralign 9:{res:{sf:  114.273}}}{space 1}{space 1}{ralign 9:{res:{sf: 46.42857}}}{space 1}{space 1}{ralign 9:{res:{sf: 1030.938}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.29e+07}}}{space 1}
{space 0}{space 0}{ralign 12:passenger}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: 2386.439}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.73e+07}}}{space 1}{space 1}{ralign 9:{res:{sf: 4157.482}}}{space 1}{space 1}{ralign 9:{res:{sf:       90}}}{space 1}{space 1}{ralign 9:{res:{sf:    97770}}}{space 1}{space 1}{ralign 9:{res:{sf: 9.52e+07}}}{space 1}
{space 0}{space 0}{ralign 12:revenue}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: 657769.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.26e+12}}}{space 1}{space 1}{ralign 9:{res:{sf:  1124106}}}{space 1}{space 1}{ralign 9:{res:{sf:     5182}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.99e+07}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.63e+10}}}{space 1}
{space 0}{space 0}{ralign 12:lcc_ratio_~e}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    25314}}}{space 1}{space 1}{ralign 9:{res:{sf:    25314}}}{space 1}{space 1}{ralign 9:{res:{sf: .3181223}}}{space 1}{space 1}{ralign 9:{res:{sf: .0566632}}}{space 1}{space 1}{ralign 9:{res:{sf: .2380404}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 8052.949}}}{space 1}
{space 0}{space 0}{ralign 12:coupon_num}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.969854}}}{space 1}{space 1}{ralign 9:{res:{sf: .2710606}}}{space 1}{space 1}{ralign 9:{res:{sf: .5206349}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.934426}}}{space 1}{space 1}{ralign 9:{res:{sf: 78622.78}}}{space 1}
{space 0}{space 0}{ralign 12:roundtrip}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .4352087}}}{space 1}{space 1}{ralign 9:{res:{sf: .0422039}}}{space 1}{space 1}{ralign 9:{res:{sf: .2054359}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .9672131}}}{space 1}{space 1}{ralign 9:{res:{sf: 17370.48}}}{space 1}
{space 0}{space 0}{ralign 12:transfer}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:  .417132}}}{space 1}{space 1}{ralign 9:{res:{sf: .1556252}}}{space 1}{space 1}{ralign 9:{res:{sf: .3944936}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 16648.99}}}{space 1}
{space 0}{space 0}{ralign 12:restricted}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .1847534}}}{space 1}{space 1}{ralign 9:{res:{sf: .0199131}}}{space 1}{space 1}{ralign 9:{res:{sf: .1411136}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 7374.061}}}{space 1}
{space 0}{space 0}{ralign 12:business}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .0126012}}}{space 1}{space 1}{ralign 9:{res:{sf: .0003659}}}{space 1}{space 1}{ralign 9:{res:{sf: .0191292}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .5732632}}}{space 1}{space 1}{ralign 9:{res:{sf: 502.9526}}}{space 1}
{space 0}{space 0}{ralign 12:first}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .0367983}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066122}}}{space 1}{space 1}{ralign 9:{res:{sf: .0813154}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 1468.732}}}{space 1}
{space 0}{space 0}{ralign 12:carrier_to~l}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:   14.229}}}{space 1}{space 1}{ralign 9:{res:{sf: 22.80242}}}{space 1}{space 1}{ralign 9:{res:{sf: 4.775188}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 40.99807}}}{space 1}{space 1}{ralign 9:{res:{sf: 567921.9}}}{space 1}
{space 0}{space 0}{ralign 12:carrier_to~c}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.906832}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.829401}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.682082}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        7}}}{space 1}{space 1}{ralign 9:{res:{sf: 116020.4}}}{space 1}
{space 0}{space 0}{ralign 12:market_AS}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:  .998005}}}{space 1}{space 1}{ralign 9:{res:{sf: .0017363}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416683}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 39833.37}}}{space 1}
{space 0}{space 0}{ralign 12:market_VX}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .2572929}}}{space 1}{space 1}{ralign 9:{res:{sf:  .156829}}}{space 1}{space 1}{ralign 9:{res:{sf: .3960164}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 10269.33}}}{space 1}
{space 0}{space 0}{ralign 12:market_WN}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .8325676}}}{space 1}{space 1}{ralign 9:{res:{sf: .1375603}}}{space 1}{space 1}{ralign 9:{res:{sf: .3708912}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 33230.27}}}{space 1}

{com}. 
. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", clear
{txt}
{com}. eststo data4: estpost summarize fare passenger revenue coupon_num roundtrip transfer restricted business first 

{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:e(count)}{space 1}{space 1}{ralign 9:e(sum_w)}{space 1}{space 1}{ralign 9:e(mean)}{space 1}{space 1}{ralign 9:e(Var)}{space 1}{space 1}{ralign 9:e(sd)}{space 1}{space 1}{ralign 9:e(min)}{space 1}{space 1}{ralign 9:e(max)}{space 1}{space 1}{ralign 9:e(sum)}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:fare}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: 330.4841}}}{space 1}{space 1}{ralign 9:{res:{sf: 10092.25}}}{space 1}{space 1}{ralign 9:{res:{sf: 100.4602}}}{space 1}{space 1}{ralign 9:{res:{sf:  87.6108}}}{space 1}{space 1}{ralign 9:{res:{sf: 811.4359}}}{space 1}{space 1}{ralign 9:{res:{sf:  2581742}}}{space 1}
{space 0}{space 0}{ralign 12:passenger}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: 897.8486}}}{space 1}{space 1}{ralign 9:{res:{sf:  1867230}}}{space 1}{space 1}{ralign 9:{res:{sf: 1366.466}}}{space 1}{space 1}{ralign 9:{res:{sf:       30}}}{space 1}{space 1}{ralign 9:{res:{sf:    14530}}}{space 1}{space 1}{ralign 9:{res:{sf:  7013993}}}{space 1}
{space 0}{space 0}{ralign 12:revenue}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: 257394.4}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.29e+11}}}{space 1}{space 1}{ralign 9:{res:{sf: 358836.5}}}{space 1}{space 1}{ralign 9:{res:{sf:     4386}}}{space 1}{space 1}{ralign 9:{res:{sf:  3628766}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.01e+09}}}{space 1}
{space 0}{space 0}{ralign 12:coupon_num}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.901436}}}{space 1}{space 1}{ralign 9:{res:{sf: .3888458}}}{space 1}{space 1}{ralign 9:{res:{sf:  .623575}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.828571}}}{space 1}{space 1}{ralign 9:{res:{sf: 14854.02}}}{space 1}
{space 0}{space 0}{ralign 12:roundtrip}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: .4315534}}}{space 1}{space 1}{ralign 9:{res:{sf: .0459646}}}{space 1}{space 1}{ralign 9:{res:{sf: .2143936}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .9148728}}}{space 1}{space 1}{ralign 9:{res:{sf: 3371.295}}}{space 1}
{space 0}{space 0}{ralign 12:transfer}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: .3518103}}}{space 1}{space 1}{ralign 9:{res:{sf: .2094826}}}{space 1}{space 1}{ralign 9:{res:{sf: .4576927}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 2748.342}}}{space 1}
{space 0}{space 0}{ralign 12:restricted}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: .0538301}}}{space 1}{space 1}{ralign 9:{res:{sf: .0060009}}}{space 1}{space 1}{ralign 9:{res:{sf: .0774652}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .8463836}}}{space 1}{space 1}{ralign 9:{res:{sf: 420.5206}}}{space 1}
{space 0}{space 0}{ralign 12:business}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: .0195391}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007209}}}{space 1}{space 1}{ralign 9:{res:{sf: .0268499}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .3076923}}}{space 1}{space 1}{ralign 9:{res:{sf: 152.6395}}}{space 1}
{space 0}{space 0}{ralign 12:first}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: .0349548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0006907}}}{space 1}{space 1}{ralign 9:{res:{sf: .0262813}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .3310366}}}{space 1}{space 1}{ralign 9:{res:{sf: 273.0668}}}{space 1}

{com}. 
. esttab data* using "output/tables/sumstats.tex", replace tex ///
>                 main(mean %6.2f) aux(sd) ///
>                 coeflabels(fare "\Centerstack{c -(}Market airfaree \\ (mean){c )-}" passenger "Total passengers" revenue "Total revenue" lcc_ratio_pre "Ratio of LCC seats" coupon_num "\Centerstack{c -(}Number of coupons \\ (mean){c )-}"roundtrip "\Centerstack{c -(}Roundtrip \\ (mean of dummy){c )-}" transfer  "\Centerstack{c -(}Transfer \\ (mean of dummy){c )-}" restricted "Ratio of restricted tickets" business "Ratio of business-class" first "Ratio of first-class" carrier_total "Total carriers" carrier_total_lcc "Total LCC carriers" market_AS "\Centerstack{c -(}Alaska Route \\ (mean of dummy){c )-}" market_VX "\Centerstack{c -(}Virgin Route \\ (mean of dummy){c )-}" market_WN "\Centerstack{c -(}Southwest Route \\ (mean of dummy){c )-}") ///
>                 title("Summary Statistics" \label{c -(}sumstats{c )-}) ///
>                 mtitle("\shortstack{c -(}Airport-Pair \\ All \\ All Airlines{c )-}" "\shortstack{c -(}City-Pair \\ All \\ All Airlines{c )-}" "\shortstack{c -(}City-Pair \\ Alaska+Virigin Routes \\ All Airlines{c )-}"  "\shortstack{c -(}City-Pair \\ Alaska+Virigin Routes \\ Alaska+Virgin{c )-}")
{res}{txt}(output written to {browse  `"output/tables/sumstats.tex"'})

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. **********************************
. *** 7-1. OLS/FD City-Pair ASVX ***
. **********************************
. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", clear
{txt}
{com}. 
. local dep fare
{txt}
{com}. local post post4
{txt}
{com}. 
. bysort market_id: egen pre_`dep' = mean(`dep') if `post' == 0
{txt}(2,861 missing values generated)

{com}. qui bysort market_id: egen post_`dep' = mean(`dep') if `post' == 1
{txt}
{com}. qui bysort market_id (pre_`dep'): replace pre_`dep'=pre_`dep'[1]
{txt}
{com}. gen pre_l`dep' = log(pre_`dep')
{txt}(164 missing values generated)

{com}. gen post_l`dep' = log(post_`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_l`dep' = post_l`dep' - pre_l`dep'
{txt}(5,115 missing values generated)

{com}. drop post_l`dep' pre_l`dep' post_`dep' pre_`dep'
{txt}
{com}. 
. gen q = substr(string(quarter, "%tq"), -1, .), after(quarter)
{txt}
{com}. egen id_quarter = group(market_id q)
{txt}
{com}. qui bysort id_quarter: egen pre_q`dep' = mean(`dep') if `post' == 0 
{txt}
{com}. qui bysort id_quarter: egen post_q`dep' = mean(`dep') if `post' == 1 
{txt}
{com}. qui bysort id_quarter (pre_q`dep'): replace pre_q`dep'=pre_q`dep'[1]
{txt}
{com}. gen pre_lq`dep' = log(pre_q`dep')
{txt}(317 missing values generated)

{com}. gen post_lq`dep' = log(post_q`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_lq`dep' = post_lq`dep' - pre_lq`dep'
{txt}(5,268 missing values generated)

{com}. drop post_lq`dep' pre_lq`dep' post_q`dep' pre_q`dep'
{txt}
{com}. label var diff_lq`dep' "Diff_lfare"
{txt}
{com}. encode q, gen(q2)
{txt}
{com}. drop q
{txt}
{com}. rename q2 q
{res}{txt}
{com}. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. local vars `seat_contr' `itineary_contr'
{txt}
{com}. foreach m of local vars{c -(}
{txt}  2{com}.         qui bysort market_id: egen pre_`m' = mean(`m') if `post' == 0
{txt}  3{com}.         qui bysort market_id (pre_`m'): replace pre_`m'=pre_`m'[1]
{txt}  4{com}.         gen post_`m' = `m' if `post' == 1
{txt}  5{com}.         gen `m'_diff = post_`m' - pre_`m'
{txt}  6{com}.         drop pre_`m' post_`m'
{txt}  7{com}. {c )-}
{txt}(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)

{com}. local seat_contr restricted_diff business_diff first_diff
{txt}
{com}. local itineary_contr coupon_num_diff roundtrip_diff transfer_diff
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post'
{txt}
{com}. 
. gegen int tag_unique = tag(market_id q) if post4 == 1
{res}{txt}{res}{txt}
{com}. order tag_unique, after(diff_lqfare)
{txt}
{com}. 
. reg diff_lq`dep' lcc_ratio_pre if tag_unique == 1, r
{err}no observations
{txt}{search r(2000), local:r(2000);}

end of do-file

{search r(2000), local:r(2000);}

{com}. br

. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. reg diff_lq`dep' lcc_ratio_pre if tag_unique == 1, r
{err}no observations
{txt}{search r(2000), local:r(2000);}

end of do-file

{search r(2000), local:r(2000);}

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", clear
{txt}
{com}. 
. local dep fare
{txt}
{com}. local post post4
{txt}
{com}. 
. bysort market_id: egen pre_`dep' = mean(`dep') if `post' == 0
{txt}(2,861 missing values generated)

{com}. qui bysort market_id: egen post_`dep' = mean(`dep') if `post' == 1
{txt}
{com}. qui bysort market_id (pre_`dep'): replace pre_`dep'=pre_`dep'[1]
{txt}
{com}. gen pre_l`dep' = log(pre_`dep')
{txt}(164 missing values generated)

{com}. gen post_l`dep' = log(post_`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_l`dep' = post_l`dep' - pre_l`dep'
{txt}(5,115 missing values generated)

{com}. drop post_l`dep' pre_l`dep' post_`dep' pre_`dep'
{txt}
{com}. 
. gen q = substr(string(quarter, "%tq"), -1, .), after(quarter)
{txt}
{com}. egen id_quarter = group(market_id q)
{txt}
{com}. qui bysort id_quarter: egen pre_q`dep' = mean(`dep') if `post' == 0 
{txt}
{com}. qui bysort id_quarter: egen post_q`dep' = mean(`dep') if `post' == 1 
{txt}
{com}. qui bysort id_quarter (pre_q`dep'): replace pre_q`dep'=pre_q`dep'[1]
{txt}
{com}. gen pre_lq`dep' = log(pre_q`dep')
{txt}(317 missing values generated)

{com}. gen post_lq`dep' = log(post_q`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_lq`dep' = post_lq`dep' - pre_lq`dep'
{txt}(5,268 missing values generated)

{com}. drop post_lq`dep' pre_lq`dep' post_q`dep' pre_q`dep'
{txt}
{com}. label var diff_lq`dep' "Diff_lfare"
{txt}
{com}. encode q, gen(q2)
{txt}
{com}. drop q
{txt}
{com}. rename q2 q
{res}{txt}
{com}. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. local vars `seat_contr' `itineary_contr'
{txt}
{com}. foreach m of local vars{c -(}
{txt}  2{com}.         qui bysort market_id: egen pre_`m' = mean(`m') if `post' == 0
{txt}  3{com}.         qui bysort market_id (pre_`m'): replace pre_`m'=pre_`m'[1]
{txt}  4{com}.         gen post_`m' = `m' if `post' == 1
{txt}  5{com}.         gen `m'_diff = post_`m' - pre_`m'
{txt}  6{com}.         drop pre_`m' post_`m'
{txt}  7{com}. {c )-}
{txt}(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)

{com}. local seat_contr restricted_diff business_diff first_diff
{txt}
{com}. local itineary_contr coupon_num_diff roundtrip_diff transfer_diff
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post'
{txt}
{com}. 
. gegen int tag_unique = tag(market_id q) if post4 == 1
{res}{txt}{res}{txt}
{com}. order tag_unique, after(diff_lqfare)
{txt}
{com}. 
. reg diff_lq`dep' lcc_ratio_pre if tag_unique == 1, r
{err}no observations
{txt}{search r(2000), local:r(2000);}

end of do-file

{search r(2000), local:r(2000);}

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. reg diff_lq`dep' lcc_ratio_pre, r
{err}no observations
{txt}{search r(2000), local:r(2000);}

end of do-file

{search r(2000), local:r(2000);}

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", clear
{txt}
{com}. 
. local dep fare
{txt}
{com}. local post post4
{txt}
{com}. 
. bysort market_id: egen pre_`dep' = mean(`dep') if `post' == 0
{txt}(2,861 missing values generated)

{com}. qui bysort market_id: egen post_`dep' = mean(`dep') if `post' == 1
{txt}
{com}. qui bysort market_id (pre_`dep'): replace pre_`dep'=pre_`dep'[1]
{txt}
{com}. gen pre_l`dep' = log(pre_`dep')
{txt}(164 missing values generated)

{com}. gen post_l`dep' = log(post_`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_l`dep' = post_l`dep' - pre_l`dep'
{txt}(5,115 missing values generated)

{com}. drop post_l`dep' pre_l`dep' post_`dep' pre_`dep'
{txt}
{com}. 
. gen q = substr(string(quarter, "%tq"), -1, .), after(quarter)
{txt}
{com}. egen id_quarter = group(market_id q)
{txt}
{com}. qui bysort id_quarter: egen pre_q`dep' = mean(`dep') if `post' == 0 
{txt}
{com}. qui bysort id_quarter: egen post_q`dep' = mean(`dep') if `post' == 1 
{txt}
{com}. qui bysort id_quarter (pre_q`dep'): replace pre_q`dep'=pre_q`dep'[1]
{txt}
{com}. gen pre_lq`dep' = log(pre_q`dep')
{txt}(317 missing values generated)

{com}. gen post_lq`dep' = log(post_q`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_lq`dep' = post_lq`dep' - pre_lq`dep'
{txt}(5,268 missing values generated)

{com}. drop post_lq`dep' pre_lq`dep' post_q`dep' pre_q`dep'
{txt}
{com}. label var diff_lq`dep' "Diff_lfare"
{txt}
{com}. encode q, gen(q2)
{txt}
{com}. drop q
{txt}
{com}. rename q2 q
{res}{txt}
{com}. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. local vars `seat_contr' `itineary_contr'
{txt}
{com}. foreach m of local vars{c -(}
{txt}  2{com}.         qui bysort market_id: egen pre_`m' = mean(`m') if `post' == 0
{txt}  3{com}.         qui bysort market_id (pre_`m'): replace pre_`m'=pre_`m'[1]
{txt}  4{com}.         gen post_`m' = `m' if `post' == 1
{txt}  5{com}.         gen `m'_diff = post_`m' - pre_`m'
{txt}  6{com}.         drop pre_`m' post_`m'
{txt}  7{com}. {c )-}
{txt}(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)

{com}. local seat_contr restricted_diff business_diff first_diff
{txt}
{com}. local itineary_contr coupon_num_diff roundtrip_diff transfer_diff
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post'
{txt}
{com}. 
. gegen int tag_unique = tag(market_id q) if post4 == 1
{res}{txt}{res}{txt}
{com}. order tag_unique, after(diff_lqfare)
{txt}
{com}. 
. reg diff_lq`dep' lcc_ratio_pre, r
{err}no observations
{txt}{search r(2000), local:r(2000);}

end of do-file

{search r(2000), local:r(2000);}

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. *** 7-1. OLS/FD City-Pair ASVX ***
. **********************************
. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", clear
{txt}
{com}. 
. local dep fare
{txt}
{com}. local post post4
{txt}
{com}. 
. bysort market_id: egen pre_`dep' = mean(`dep') if `post' == 0
{txt}(2,861 missing values generated)

{com}. qui bysort market_id: egen post_`dep' = mean(`dep') if `post' == 1
{txt}
{com}. qui bysort market_id (pre_`dep'): replace pre_`dep'=pre_`dep'[1]
{txt}
{com}. gen pre_l`dep' = log(pre_`dep')
{txt}(164 missing values generated)

{com}. gen post_l`dep' = log(post_`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_l`dep' = post_l`dep' - pre_l`dep'
{txt}(5,115 missing values generated)

{com}. drop post_l`dep' pre_l`dep' post_`dep' pre_`dep'
{txt}
{com}. 
. gen q = substr(string(quarter, "%tq"), -1, .), after(quarter)
{txt}
{com}. egen id_quarter = group(market_id q)
{txt}
{com}. qui bysort id_quarter: egen pre_q`dep' = mean(`dep') if `post' == 0 
{txt}
{com}. qui bysort id_quarter: egen post_q`dep' = mean(`dep') if `post' == 1 
{txt}
{com}. qui bysort id_quarter (pre_q`dep'): replace pre_q`dep'=pre_q`dep'[1]
{txt}
{com}. gen pre_lq`dep' = log(pre_q`dep')
{txt}(317 missing values generated)

{com}. gen post_lq`dep' = log(post_q`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_lq`dep' = post_lq`dep' - pre_lq`dep'
{txt}(5,268 missing values generated)

{com}. drop post_lq`dep' pre_lq`dep' post_q`dep' pre_q`dep'
{txt}
{com}. label var diff_lq`dep' "Diff_lfare"
{txt}
{com}. encode q, gen(q2)
{txt}
{com}. drop q
{txt}
{com}. rename q2 q
{res}{txt}
{com}. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. local vars `seat_contr' `itineary_contr'
{txt}
{com}. foreach m of local vars{c -(}
{txt}  2{com}.         qui bysort market_id: egen pre_`m' = mean(`m') if `post' == 0
{txt}  3{com}.         qui bysort market_id (pre_`m'): replace pre_`m'=pre_`m'[1]
{txt}  4{com}.         gen post_`m' = `m' if `post' == 1
{txt}  5{com}.         gen `m'_diff = post_`m' - pre_`m'
{txt}  6{com}.         drop pre_`m' post_`m'
{txt}  7{com}. {c )-}
{txt}(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)

{com}. local seat_contr restricted_diff business_diff first_diff
{txt}
{com}. local itineary_contr coupon_num_diff roundtrip_diff transfer_diff
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post'
{txt}
{com}. 
. gegen int tag_unique = tag(market_id q) if post4 == 1
{res}{txt}{res}{txt}
{com}. order tag_unique, after(diff_lqfare)
{txt}
{com}. 
. reg diff_lq`dep' lcc_ratio if tag_unique == 1, r
{txt}{p 0 6 2}note: {bf:lcc_ratio} omitted because of collinearity.{p_end}

Linear regression                               Number of obs     = {res}     1,500
                                                {txt}F(0, 1499)        =  {res}     0.00
                                                {txt}Prob > F          = {res}         .
                                                {txt}R-squared         = {res}    0.0000
                                                {txt}Root MSE          =    {res} .13755

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1} diff_lqfare{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}lcc_ratio {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 7}_cons {c |}{col 14}{res}{space 2}-.0295485{col 26}{space 2} .0035516{col 37}{space 1}   -8.32{col 46}{space 3}0.000{col 54}{space 4}-.0365152{col 67}{space 3}-.0225819
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. 
. **********************************
. *** 7-1. OLS/FD City-Pair ASVX ***
. **********************************
. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", clear
{txt}
{com}. 
. local dep fare
{txt}
{com}. local post post4
{txt}
{com}. 
. bysort market_id: egen pre_`dep' = mean(`dep') if `post' == 0
{txt}(2,861 missing values generated)

{com}. qui bysort market_id: egen post_`dep' = mean(`dep') if `post' == 1
{txt}
{com}. qui bysort market_id (pre_`dep'): replace pre_`dep'=pre_`dep'[1]
{txt}
{com}. gen pre_l`dep' = log(pre_`dep')
{txt}(164 missing values generated)

{com}. gen post_l`dep' = log(post_`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_l`dep' = post_l`dep' - pre_l`dep'
{txt}(5,115 missing values generated)

{com}. drop post_l`dep' pre_l`dep' post_`dep' pre_`dep'
{txt}
{com}. 
. gen q = substr(string(quarter, "%tq"), -1, .), after(quarter)
{txt}
{com}. egen id_quarter = group(market_id q)
{txt}
{com}. qui bysort id_quarter: egen pre_q`dep' = mean(`dep') if `post' == 0 
{txt}
{com}. qui bysort id_quarter: egen post_q`dep' = mean(`dep') if `post' == 1 
{txt}
{com}. qui bysort id_quarter (pre_q`dep'): replace pre_q`dep'=pre_q`dep'[1]
{txt}
{com}. gen pre_lq`dep' = log(pre_q`dep')
{txt}(317 missing values generated)

{com}. gen post_lq`dep' = log(post_q`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_lq`dep' = post_lq`dep' - pre_lq`dep'
{txt}(5,268 missing values generated)

{com}. drop post_lq`dep' pre_lq`dep' post_q`dep' pre_q`dep'
{txt}
{com}. label var diff_lq`dep' "Diff_lfare"
{txt}
{com}. encode q, gen(q2)
{txt}
{com}. drop q
{txt}
{com}. rename q2 q
{res}{txt}
{com}. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. local vars `seat_contr' `itineary_contr'
{txt}
{com}. foreach m of local vars{c -(}
{txt}  2{com}.         qui bysort market_id: egen pre_`m' = mean(`m') if `post' == 0
{txt}  3{com}.         qui bysort market_id (pre_`m'): replace pre_`m'=pre_`m'[1]
{txt}  4{com}.         gen post_`m' = `m' if `post' == 1
{txt}  5{com}.         gen `m'_diff = post_`m' - pre_`m'
{txt}  6{com}.         drop pre_`m' post_`m'
{txt}  7{com}. {c )-}
{txt}(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)

{com}. local seat_contr restricted_diff business_diff first_diff
{txt}
{com}. local itineary_contr coupon_num_diff roundtrip_diff transfer_diff
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post'
{txt}
{com}. 
. gegen int tag_unique = tag(market_id q) if post4 == 1
{res}{txt}{res}{txt}
{com}. order tag_unique, after(diff_lqfare)
{txt}
{com}. 
. reg diff_lq`dep' lcc_ratio_pre if tag_unique == 1, r
{err}no observations
{txt}{search r(2000), local:r(2000);}

end of do-file

{search r(2000), local:r(2000);}

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. 
. **********************************
. *** 7-1. OLS/FD City-Pair ASVX ***
. **********************************
. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", clear
{txt}
{com}. 
. local dep fare
{txt}
{com}. local post post4
{txt}
{com}. 
. bysort market_id: egen pre_`dep' = mean(`dep') if `post' == 0
{txt}(2,861 missing values generated)

{com}. qui bysort market_id: egen post_`dep' = mean(`dep') if `post' == 1
{txt}
{com}. qui bysort market_id (pre_`dep'): replace pre_`dep'=pre_`dep'[1]
{txt}
{com}. gen pre_l`dep' = log(pre_`dep')
{txt}(164 missing values generated)

{com}. gen post_l`dep' = log(post_`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_l`dep' = post_l`dep' - pre_l`dep'
{txt}(5,115 missing values generated)

{com}. drop post_l`dep' pre_l`dep' post_`dep' pre_`dep'
{txt}
{com}. 
. gen q = substr(string(quarter, "%tq"), -1, .), after(quarter)
{txt}
{com}. egen id_quarter = group(market_id q)
{txt}
{com}. qui bysort id_quarter: egen pre_q`dep' = mean(`dep') if `post' == 0 
{txt}
{com}. qui bysort id_quarter: egen post_q`dep' = mean(`dep') if `post' == 1 
{txt}
{com}. qui bysort id_quarter (pre_q`dep'): replace pre_q`dep'=pre_q`dep'[1]
{txt}
{com}. gen pre_lq`dep' = log(pre_q`dep')
{txt}(317 missing values generated)

{com}. gen post_lq`dep' = log(post_q`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_lq`dep' = post_lq`dep' - pre_lq`dep'
{txt}(5,268 missing values generated)

{com}. drop post_lq`dep' pre_lq`dep' post_q`dep' pre_q`dep'
{txt}
{com}. label var diff_lq`dep' "Diff_lfare"
{txt}
{com}. 
. encode q, gen(q2)
{txt}
{com}. drop q
{txt}
{com}. rename q2 q
{res}{txt}
{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. local vars `seat_contr' `itineary_contr'
{txt}
{com}. foreach m of local vars{c -(}
{txt}  2{com}.         qui bysort market_id: egen pre_`m' = mean(`m') if `post' == 0
{txt}  3{com}.         qui bysort market_id (pre_`m'): replace pre_`m'=pre_`m'[1]
{txt}  4{com}.         gen post_`m' = `m' if `post' == 1
{txt}  5{com}.         gen `m'_diff = post_`m' - pre_`m'
{txt}  6{com}.         drop pre_`m' post_`m'
{txt}  7{com}. {c )-}
{txt}(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)

{com}. local seat_contr restricted_diff business_diff first_diff
{txt}
{com}. local itineary_contr coupon_num_diff roundtrip_diff transfer_diff
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post'
{txt}
{com}. 
. gegen int tag_unique = tag(market_id q) if post4 == 1
{res}{txt}{res}{txt}
{com}. order tag_unique, after(diff_lqfare)
{txt}
{com}. 
. reg diff_lq`dep' lcc_ratio_pre if tag_unique == 1, r

{txt}Linear regression                               Number of obs     = {res}     1,500
                                                {txt}F(1, 1498)        =  {res}   269.74
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.1638
                                                {txt}Root MSE          =    {res} .12583

{txt}{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}  diff_lqfare{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
lcc_ratio_pre {c |}{col 15}{res}{space 2}-.1920533{col 27}{space 2} .0116936{col 38}{space 1}  -16.42{col 47}{space 3}0.000{col 55}{space 4}-.2149908{col 68}{space 3}-.1691158
{txt}{space 8}_cons {c |}{col 15}{res}{space 2} .0002512{col 27}{space 2} .0036148{col 38}{space 1}    0.07{col 47}{space 3}0.945{col 55}{space 4}-.0068393{col 68}{space 3} .0073417
{txt}{hline 14}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}.         eststo asvx_fe_1
{txt}
{com}.         estadd local qfe "No" : asvx_fe_1
{txt}
{com}.         estadd local mfe "No" : asvx_fe_1
{txt}
{com}. 
. reg diff_lq`dep' lcc_ratio_pre i.q if tag_unique == 1, r

{txt}Linear regression                               Number of obs     = {res}     1,500
                                                {txt}F(4, 1495)        =  {res}    77.61
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.1789
                                                {txt}Root MSE          =    {res} .12481

{txt}{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}  diff_lqfare{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
lcc_ratio_pre {c |}{col 15}{res}{space 2} -.192138{col 27}{space 2}  .011547{col 38}{space 1}  -16.64{col 47}{space 3}0.000{col 55}{space 4} -.214788{col 68}{space 3}-.1694879
{txt}{space 13} {c |}
{space 12}q {c |}
{space 11}2  {c |}{col 15}{res}{space 2} .0069538{col 27}{space 2}  .009551{col 38}{space 1}    0.73{col 47}{space 3}0.467{col 55}{space 4}-.0117809{col 68}{space 3} .0256885
{txt}{space 11}3  {c |}{col 15}{res}{space 2} .0301746{col 27}{space 2} .0094554{col 38}{space 1}    3.19{col 47}{space 3}0.001{col 55}{space 4} .0116274{col 68}{space 3} .0487218
{txt}{space 11}4  {c |}{col 15}{res}{space 2}  .042526{col 27}{space 2} .0099179{col 38}{space 1}    4.29{col 47}{space 3}0.000{col 55}{space 4} .0230715{col 68}{space 3} .0619805
{txt}{space 13} {c |}
{space 8}_cons {c |}{col 15}{res}{space 2}-.0201465{col 27}{space 2} .0076385{col 38}{space 1}   -2.64{col 47}{space 3}0.008{col 55}{space 4}-.0351298{col 68}{space 3}-.0051633
{txt}{hline 14}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}.         eststo asvx_fe_2
{txt}
{com}.         estadd local qfe "Yes" : asvx_fe_2
{txt}
{com}.         estadd local mfe "No" : asvx_fe_2
{txt}
{com}.         
. reg diff_lq`dep' lcc_ratio_pre i.q `itineary_contr' if tag_unique == 1, r

{txt}Linear regression                               Number of obs     = {res}     1,500
                                                {txt}F(7, 1492)        =  {res}    56.77
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.2237
                                                {txt}Root MSE          =    {res} .12148

{txt}{hline 16}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 17}{c |}{col 29}    Robust
{col 1}    diff_lqfare{col 17}{c |} Coefficient{col 29}  std. err.{col 41}      t{col 49}   P>|t|{col 57}     [95% con{col 70}f. interval]
{hline 16}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 2}lcc_ratio_pre {c |}{col 17}{res}{space 2}-.1813401{col 29}{space 2} .0111817{col 40}{space 1}  -16.22{col 49}{space 3}0.000{col 57}{space 4}-.2032736{col 70}{space 3}-.1594066
{txt}{space 15} {c |}
{space 14}q {c |}
{space 13}2  {c |}{col 17}{res}{space 2} .0033218{col 29}{space 2} .0091356{col 40}{space 1}    0.36{col 49}{space 3}0.716{col 57}{space 4}-.0145982{col 70}{space 3} .0212418
{txt}{space 13}3  {c |}{col 17}{res}{space 2} .0310908{col 29}{space 2} .0091399{col 40}{space 1}    3.40{col 49}{space 3}0.001{col 57}{space 4} .0131623{col 70}{space 3} .0490192
{txt}{space 13}4  {c |}{col 17}{res}{space 2} .0332771{col 29}{space 2} .0097005{col 40}{space 1}    3.43{col 49}{space 3}0.001{col 57}{space 4} .0142491{col 70}{space 3}  .052305
{txt}{space 15} {c |}
coupon_num_diff {c |}{col 17}{res}{space 2}-.2560906{col 29}{space 2} .0740196{col 40}{space 1}   -3.46{col 49}{space 3}0.001{col 57}{space 4} -.401284{col 70}{space 3}-.1108971
{txt}{space 1}roundtrip_diff {c |}{col 17}{res}{space 2}  .700896{col 29}{space 2} .1130946{col 40}{space 1}    6.20{col 49}{space 3}0.000{col 57}{space 4} .4790548{col 70}{space 3} .9227373
{txt}{space 2}transfer_diff {c |}{col 17}{res}{space 2} .3988442{col 29}{space 2} .1008666{col 40}{space 1}    3.95{col 49}{space 3}0.000{col 57}{space 4} .2009889{col 70}{space 3} .5966996
{txt}{space 10}_cons {c |}{col 17}{res}{space 2}-.0099103{col 29}{space 2} .0074255{col 40}{space 1}   -1.33{col 49}{space 3}0.182{col 57}{space 4}-.0244759{col 70}{space 3} .0046553
{txt}{hline 16}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}.         eststo asvx_fe_3
{txt}
{com}.         estadd local qfe "Yes" : asvx_fe_3
{txt}
{com}.         estadd local mfe "No" : asvx_fe_3
{txt}
{com}. 
. reg diff_lq`dep' lcc_ratio_pre i.q `itineary_contr' `seat_contr' `interactions' if tag_unique == 1, r

{txt}Linear regression                               Number of obs     = {res}     1,500
                                                {txt}F(13, 1486)       =  {res}    60.10
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.3484
                                                {txt}Root MSE          =    {res} .11152

{txt}{hline 24}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 25}{c |}{col 37}    Robust
{col 1}            diff_lqfare{col 25}{c |} Coefficient{col 37}  std. err.{col 49}      t{col 57}   P>|t|{col 65}     [95% con{col 78}f. interval]
{hline 24}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}lcc_ratio_pre {c |}{col 25}{res}{space 2} -.236497{col 37}{space 2} .0134905{col 48}{space 1}  -17.53{col 57}{space 3}0.000{col 65}{space 4}-.2629594{col 78}{space 3}-.2100346
{txt}{space 23} {c |}
{space 22}q {c |}
{space 21}2  {c |}{col 25}{res}{space 2} .0147917{col 37}{space 2} .0083631{col 48}{space 1}    1.77{col 57}{space 3}0.077{col 65}{space 4}-.0016131{col 78}{space 3} .0311965
{txt}{space 21}3  {c |}{col 25}{res}{space 2} .0479755{col 37}{space 2} .0083985{col 48}{space 1}    5.71{col 57}{space 3}0.000{col 65}{space 4} .0315014{col 78}{space 3} .0644496
{txt}{space 21}4  {c |}{col 25}{res}{space 2} .0510169{col 37}{space 2} .0091409{col 48}{space 1}    5.58{col 57}{space 3}0.000{col 65}{space 4} .0330865{col 78}{space 3} .0689473
{txt}{space 23} {c |}
{space 8}coupon_num_diff {c |}{col 25}{res}{space 2}-.1332447{col 37}{space 2} .0722604{col 48}{space 1}   -1.84{col 57}{space 3}0.065{col 65}{space 4}-.2749879{col 78}{space 3} .0084986
{txt}{space 9}roundtrip_diff {c |}{col 25}{res}{space 2}  .561519{col 37}{space 2} .1135888{col 48}{space 1}    4.94{col 57}{space 3}0.000{col 65}{space 4} .3387075{col 78}{space 3} .7843304
{txt}{space 10}transfer_diff {c |}{col 25}{res}{space 2} .2566971{col 37}{space 2} .1020917{col 48}{space 1}    2.51{col 57}{space 3}0.012{col 65}{space 4} .0564379{col 78}{space 3} .4569564
{txt}{space 8}restricted_diff {c |}{col 25}{res}{space 2} .8541079{col 37}{space 2} .1190605{col 48}{space 1}    7.17{col 57}{space 3}0.000{col 65}{space 4} .6205634{col 78}{space 3} 1.087652
{txt}{space 10}business_diff {c |}{col 25}{res}{space 2} -.242129{col 37}{space 2} .1518376{col 48}{space 1}   -1.59{col 57}{space 3}0.111{col 65}{space 4}-.5399677{col 78}{space 3} .0557098
{txt}{space 13}first_diff {c |}{col 25}{res}{space 2}  1.00995{col 37}{space 2} .1930768{col 48}{space 1}    5.23{col 57}{space 3}0.000{col 65}{space 4} .6312183{col 78}{space 3} 1.388682
{txt}{space 4}carrier_total_post4 {c |}{col 25}{res}{space 2}  -.00186{col 37}{space 2} .0010292{col 48}{space 1}   -1.81{col 57}{space 3}0.071{col 65}{space 4}-.0038788{col 78}{space 3} .0001588
{txt}carrier_total_lcc_post4 {c |}{col 25}{res}{space 2} .0146623{col 37}{space 2} .0026147{col 48}{space 1}    5.61{col 57}{space 3}0.000{col 65}{space 4} .0095334{col 78}{space 3} .0197912
{txt}{space 8}market_WN_post4 {c |}{col 25}{res}{space 2}-.0812442{col 37}{space 2} .0106508{col 48}{space 1}   -7.63{col 57}{space 3}0.000{col 65}{space 4}-.1021364{col 78}{space 3}-.0603521
{txt}{space 18}_cons {c |}{col 25}{res}{space 2} .0310156{col 37}{space 2} .0100351{col 48}{space 1}    3.09{col 57}{space 3}0.002{col 65}{space 4} .0113311{col 78}{space 3} .0507001
{txt}{hline 24}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{txt}
{com}.         eststo asvx_fe_4
{txt}
{com}.         estadd local qfe "Yes" : asvx_fe_4
{txt}
{com}.         estadd local mfe "No" : asvx_fe_4
{txt}
{com}.         
. xi: xtreg diff_lq`dep' lcc_ratio_pre i.q `itineary_contr' `seat_contr' `interactions' if tag_unique == 1, fe vce(robust)
{txt}i.q{col 19}_Iq_1-4{col 39}(naturally coded; _Iq_1 omitted)
{p 0 6 2}note: {bf:lcc_ratio_pre} omitted because of collinearity.{p_end}
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}     1,500
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}       474

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.1457{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.1241{col 63}{txt}avg{col 67}={col 69}{res}       3.2
{txt}     Overall = {res}0.1053{col 63}{txt}max{col 67}={col 69}{res}         4

{txt}{col 49}F({res}12{txt},{res}473{txt}){col 67}={col 70}{res}     9.63
{txt}corr(u_i, Xb) = {res}-0.9955{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 89:(Std. err. adjusted for {res:474} clusters in {res:market_id})}
{hline 24}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 25}{c |}{col 37}    Robust
{col 1}            diff_lqfare{col 25}{c |} Coefficient{col 37}  std. err.{col 49}      t{col 57}   P>|t|{col 65}     [95% con{col 78}f. interval]
{hline 24}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 10}lcc_ratio_pre {c |}{col 25}{res}{space 2}        0{col 37}{txt}  (omitted)
{space 18}_Iq_2 {c |}{col 25}{res}{space 2} .0101678{col 37}{space 2} .0056767{col 48}{space 1}    1.79{col 57}{space 3}0.074{col 65}{space 4}-.0009869{col 78}{space 3} .0213224
{txt}{space 18}_Iq_3 {c |}{col 25}{res}{space 2} .0271827{col 37}{space 2} .0066481{col 48}{space 1}    4.09{col 57}{space 3}0.000{col 65}{space 4} .0141192{col 78}{space 3} .0402462
{txt}{space 18}_Iq_4 {c |}{col 25}{res}{space 2} .0436069{col 37}{space 2} .0064804{col 48}{space 1}    6.73{col 57}{space 3}0.000{col 65}{space 4}  .030873{col 78}{space 3} .0563408
{txt}{space 8}coupon_num_diff {c |}{col 25}{res}{space 2} .0327296{col 37}{space 2} .0929158{col 48}{space 1}    0.35{col 57}{space 3}0.725{col 65}{space 4}-.1498492{col 78}{space 3} .2153084
{txt}{space 9}roundtrip_diff {c |}{col 25}{res}{space 2} .1037981{col 37}{space 2} .1241167{col 48}{space 1}    0.84{col 57}{space 3}0.403{col 65}{space 4}-.1400903{col 78}{space 3} .3476865
{txt}{space 10}transfer_diff {c |}{col 25}{res}{space 2} .0679664{col 37}{space 2} .1385467{col 48}{space 1}    0.49{col 57}{space 3}0.624{col 65}{space 4}-.2042768{col 78}{space 3} .3402096
{txt}{space 8}restricted_diff {c |}{col 25}{res}{space 2} .6977649{col 37}{space 2} .1455298{col 48}{space 1}    4.79{col 57}{space 3}0.000{col 65}{space 4}    .4118{col 78}{space 3} .9837298
{txt}{space 10}business_diff {c |}{col 25}{res}{space 2} .1535751{col 37}{space 2} .1771616{col 48}{space 1}    0.87{col 57}{space 3}0.386{col 65}{space 4} -.194546{col 78}{space 3} .5016962
{txt}{space 13}first_diff {c |}{col 25}{res}{space 2} .7054008{col 37}{space 2} .2177461{col 48}{space 1}    3.24{col 57}{space 3}0.001{col 65}{space 4} .2775315{col 78}{space 3}  1.13327
{txt}{space 4}carrier_total_post4 {c |}{col 25}{res}{space 2} .0108217{col 37}{space 2} .0247406{col 48}{space 1}    0.44{col 57}{space 3}0.662{col 65}{space 4}-.0377933{col 78}{space 3} .0594367
{txt}carrier_total_lcc_post4 {c |}{col 25}{res}{space 2}-.0075982{col 37}{space 2} .1135435{col 48}{space 1}   -0.07{col 57}{space 3}0.947{col 65}{space 4}-.2307102{col 78}{space 3} .2155138
{txt}{space 8}market_WN_post4 {c |}{col 25}{res}{space 2}-2.684971{col 37}{space 2} 1.363336{col 48}{space 1}   -1.97{col 57}{space 3}0.049{col 65}{space 4}-5.363915{col 78}{space 3}-.0060267
{txt}{space 18}_cons {c |}{col 25}{res}{space 2} 1.588256{col 37}{space 2} .9416321{col 48}{space 1}    1.69{col 57}{space 3}0.092{col 65}{space 4}-.2620439{col 78}{space 3} 3.438555
{txt}{hline 24}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                sigma_u {c |} {res}   1.23461
                {txt}sigma_e {c |} {res} .07363645
                    {txt}rho {c |} {res} .99645526{txt}   (fraction of variance due to u_i)
{hline 24}{c BT}{hline 64}

{com}.         eststo asvx_fe_5
{txt}
{com}.         estadd local qfe "Yes" : asvx_fe_5
{txt}
{com}.         estadd local mfe "Yes" : asvx_fe_5
{txt}
{com}.         
. 
. esttab asvx_fe* using "output/tables/asvx_fe.tex", replace booktabs ///
>         keep(lcc_ratio_pre `itineary_contr' `seat_contr' `interactions') label b(5) se(5) star(* 0.10 ** 0.05 *** 0.01) noabbrev ///
>         coeflabels(lcc_ratio_pre "LCC ratio" coupon_num_diff "Number of coupons" roundtrip_diff "\Centerstack{c -(}Roundtrip \\ (dummy){c )-}" transfer_diff "\Centerstack{c -(}Transfer \\ (dummy){c )-}" restricted_diff "Restricted seat ratio" business_diff "Business class ratio" first_diff "First class ratio" carrier_total_`post' "Total # of carriers $\times$ Post" carrier_total_lcc_`post' "Total # of LCC carriers $\times$ Post" market_WN_`post' "Southwest dummy $\times$ Post") ///
>         stats(qfe mfe N r2, fmt(0 0 0 a3) ///
>                 labels("Time FE" "Market FE" "N" "R^2")) ///
>         title("First Difference Regression" \label{c -(}asvx_fe{c )-})
{res}{txt}(output written to {browse  `"output/tables/asvx_fe.tex"'})

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
. local dep revenue
{txt}
{com}. local post post4
{txt}
{com}. gen lpassenger=log(passenger)
{txt}
{com}. gen market_ASVX = (market_AS > 0 | market_VX > 0)
{txt}
{com}. gen mk_`post' = market_ASVX * `post'
{txt}
{com}. gen lcc_`post' = lcc_ratio_pre * `post'
{txt}(14,599 missing values generated)

{com}. gen mk_`post'_lcc = mk_`post'*lcc_ratio_pre
{txt}(14,599 missing values generated)

{com}. *qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. gen apt_num_origin_`post' = apt_num_origin * `post' 
{txt}
{com}. gen apt_num_destination_city_`post' = apt_num_destination_city * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc, cluster(market_id)
{txt}note: {bf:mk_post4} omitted because of collinearity.
note: {bf:lcc_post4} omitted because of collinearity.
note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    25,314
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0000                                         {txt}min = {res}         1
{txt}     Between = {res}0.0000                                         {txt}avg = {res}      11.3
{txt}     Overall = {res}0.0000                                         {txt}max = {res}        13

                                                {txt}{help j_robustsingular##|_new:Wald chi2(0)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}    lrevenue{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}lcc_post4 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 7}_cons {c |}{col 14}{res}{space 2} 12.23979{col 26}{space 2} .0297695{col 37}{space 1}  411.15{col 46}{space 3}0.000{col 54}{space 4} 12.18144{col 67}{space 3} 12.29814
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 1.4076146
     {txt}sigma_e {c |} {res} .24976583
         {txt}rho {c |} {res}  .9694764{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
. local dep revenue
{txt}
{com}. local post post4
{txt}
{com}. gen lpassenger=log(passenger)
{txt}
{com}. gen market_ASVX = (market_AS > 0 | market_VX > 0)
{txt}
{com}. gen mk_`post' = market_ASVX * `post'
{txt}
{com}. gen lcc_`post' = lcc_ratio_pre * `post'
{txt}(14,599 missing values generated)

{com}. gen mk_`post'_lcc = mk_`post'*lcc_ratio_pre
{txt}(14,599 missing values generated)

{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. gen apt_num_origin_`post' = apt_num_origin * `post' 
{txt}
{com}. gen apt_num_destination_city_`post' = apt_num_destination_city * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc, cluster(market_id)
{txt}note: {bf:mk_post4} omitted because of collinearity.
note: {bf:lcc_post4} omitted because of collinearity.
note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    25,314
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0000                                         {txt}min = {res}         1
{txt}     Between = {res}0.0000                                         {txt}avg = {res}      11.3
{txt}     Overall = {res}0.0000                                         {txt}max = {res}        13

                                                {txt}{help j_robustsingular##|_new:Wald chi2(0)}{col 67}={col 70}{res}        .
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}     .

{txt}{ralign 78:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}    lrevenue{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 3}lcc_post4 {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 7}_cons {c |}{col 14}{res}{space 2} 12.23979{col 26}{space 2} .0297695{col 37}{space 1}  411.15{col 46}{space 3}0.000{col 54}{space 4} 12.18144{col 67}{space 3} 12.29814
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 1.4076146
     {txt}sigma_e {c |} {res} .24976583
         {txt}rho {c |} {res}  .9694764{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
. local dep revenue
{txt}
{com}. local post post4
{txt}
{com}. gen lpassenger=log(passenger)
{txt}
{com}. gen market_ASVX = (market_AS > 0 | market_VX > 0)
{txt}
{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. gen mk_`post' = market_ASVX * `post'
{txt}
{com}. gen lcc_`post' = lcc_ratio_pre * `post'
{txt}(239 missing values generated)

{com}. gen mk_`post'_lcc = mk_`post'*lcc_ratio_pre
{txt}(239 missing values generated)

{com}. 
. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. gen apt_num_origin_`post' = apt_num_origin * `post' 
{txt}
{com}. gen apt_num_destination_city_`post' = apt_num_destination_city * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc, cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,674
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0928                                         {txt}min = {res}         1
{txt}     Between = {res}0.0659                                         {txt}avg = {res}      17.7
{txt}     Overall = {res}0.0000                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}2{txt})      =  {res}  1952.22
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}    lrevenue{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2} .1862566{col 26}{space 2} .0057532{col 37}{space 1}   32.37{col 46}{space 3}0.000{col 54}{space 4} .1749807{col 67}{space 3} .1975326
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2} -.097338{col 26}{space 2} .0151994{col 37}{space 1}   -6.40{col 46}{space 3}0.000{col 54}{space 4}-.1271282{col 67}{space 3}-.0675478
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 7}_cons {c |}{col 14}{res}{space 2}   12.231{col 26}{space 2} .0299539{col 37}{space 1}  408.33{col 46}{space 3}0.000{col 54}{space 4} 12.17229{col 67}{space 3} 12.28971
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 1.3579423
     {txt}sigma_e {c |} {res} .24221342
         {txt}rho {c |} {res} .96916586{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
. local dep fare
{txt}
{com}. local post post4
{txt}
{com}. gen lpassenger=log(passenger)
{txt}
{com}. gen market_ASVX = (market_AS > 0 | market_VX > 0)
{txt}
{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. gen mk_`post' = market_ASVX * `post'
{txt}
{com}. gen lcc_`post' = lcc_ratio_pre * `post'
{txt}(239 missing values generated)

{com}. gen mk_`post'_lcc = mk_`post'*lcc_ratio_pre
{txt}(239 missing values generated)

{com}. 
. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. gen apt_num_origin_`post' = apt_num_origin * `post' 
{txt}
{com}. gen apt_num_destination_city_`post' = apt_num_destination_city * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc, cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,674
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0329                                         {txt}min = {res}         1
{txt}     Between = {res}0.0045                                         {txt}avg = {res}      17.7
{txt}     Overall = {res}0.0064                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}2{txt})      =  {res}   269.02
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}       lfare{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2}-.0380546{col 26}{space 2} .0042458{col 37}{space 1}   -8.96{col 46}{space 3}0.000{col 54}{space 4}-.0463762{col 67}{space 3} -.029733
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2}-.0137188{col 26}{space 2} .0107874{col 37}{space 1}   -1.27{col 46}{space 3}0.203{col 54}{space 4}-.0348618{col 67}{space 3} .0074242
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 7}_cons {c |}{col 14}{res}{space 2}    5.746{col 26}{space 2}  .007406{col 37}{space 1}  775.85{col 46}{space 3}0.000{col 54}{space 4} 5.731484{col 67}{space 3} 5.760515
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .27754095
     {txt}sigma_e {c |} {res} .11308135
         {txt}rho {c |} {res} .85762737{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}.         eststo any_ols_1
{txt}
{com}.         estadd local mfe "No" : any_ols_1
{txt}
{com}.         estadd local qfe "No" : any_ols_1
{txt}
{com}.         estadd local itinearycontrol "No" : any_ols_1
{txt}
{com}.         estadd local control "No" : any_ols_1
{txt}
{com}.         
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr', cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,674
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1853                                         {txt}min = {res}         1
{txt}     Between = {res}0.4282                                         {txt}avg = {res}      17.7
{txt}     Overall = {res}0.3739                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}5{txt})      =  {res}  2151.57
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}       lfare{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2} .0046275{col 26}{space 2} .0039733{col 37}{space 1}    1.16{col 46}{space 3}0.244{col 54}{space 4}-.0031601{col 67}{space 3}  .012415
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2}-.0472843{col 26}{space 2} .0099603{col 37}{space 1}   -4.75{col 46}{space 3}0.000{col 54}{space 4}-.0668061{col 67}{space 3}-.0277626
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}coupon_num {c |}{col 14}{res}{space 2}-.4163405{col 26}{space 2} .0386495{col 37}{space 1}  -10.77{col 46}{space 3}0.000{col 54}{space 4} -.492092{col 67}{space 3} -.340589
{txt}{space 3}roundtrip {c |}{col 14}{res}{space 2} 1.311386{col 26}{space 2}  .063034{col 37}{space 1}   20.80{col 46}{space 3}0.000{col 54}{space 4} 1.187842{col 67}{space 3}  1.43493
{txt}{space 4}transfer {c |}{col 14}{res}{space 2} 1.040582{col 26}{space 2} .0622291{col 37}{space 1}   16.72{col 46}{space 3}0.000{col 54}{space 4} .9186157{col 67}{space 3} 1.162549
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 5.543686{col 26}{space 2} .0271583{col 37}{space 1}  204.12{col 46}{space 3}0.000{col 54}{space 4} 5.490456{col 67}{space 3} 5.596915
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .22405012
     {txt}sigma_e {c |} {res} .10376819
         {txt}rho {c |} {res} .82338048{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}.         eststo any_ols_2
{txt}
{com}.         estadd local mfe "No" : any_ols_2
{txt}
{com}.         estadd local qfe "No" : any_ols_2
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_2
{txt}
{com}.         estadd local control "No" : any_ols_2
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr' `seat_contr' `interactions', cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,674
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2012                                         {txt}min = {res}         1
{txt}     Between = {res}0.4686                                         {txt}avg = {res}      17.7
{txt}     Overall = {res}0.4134                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}13{txt})     =  {res}  2479.56
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 96:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 31}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 32}{c |}{col 44}    Robust
{col 1}                         lfare{col 32}{c |} Coefficient{col 44}  std. err.{col 56}      z{col 64}   P>|z|{col 72}     [95% con{col 85}f. interval]
{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 22}mk_post4 {c |}{col 32}{res}{space 2}-.0481216{col 44}{space 2} .0093968{col 55}{space 1}   -5.12{col 64}{space 3}0.000{col 72}{space 4}-.0665391{col 85}{space 3}-.0297042
{txt}{space 21}lcc_post4 {c |}{col 32}{res}{space 2}-.0545428{col 44}{space 2} .0108954{col 55}{space 1}   -5.01{col 64}{space 3}0.000{col 72}{space 4}-.0758975{col 85}{space 3}-.0331882
{txt}{space 18}mk_post4_lcc {c |}{col 32}{res}{space 2}        0{col 44}{txt}  (omitted)
{space 20}coupon_num {c |}{col 32}{res}{space 2}-.4043648{col 44}{space 2} .0383932{col 55}{space 1}  -10.53{col 64}{space 3}0.000{col 72}{space 4}-.4796141{col 85}{space 3}-.3291155
{txt}{space 21}roundtrip {c |}{col 32}{res}{space 2} 1.322358{col 44}{space 2} .0629902{col 55}{space 1}   20.99{col 64}{space 3}0.000{col 72}{space 4}   1.1989{col 85}{space 3} 1.445817
{txt}{space 22}transfer {c |}{col 32}{res}{space 2} 1.029544{col 44}{space 2} .0617442{col 55}{space 1}   16.67{col 64}{space 3}0.000{col 72}{space 4} .9085272{col 85}{space 3}  1.15056
{txt}{space 20}restricted {c |}{col 32}{res}{space 2} .1826506{col 44}{space 2} .0170958{col 55}{space 1}   10.68{col 64}{space 3}0.000{col 72}{space 4} .1491435{col 85}{space 3} .2161578
{txt}{space 22}business {c |}{col 32}{res}{space 2} .3692914{col 44}{space 2} .0716375{col 55}{space 1}    5.15{col 64}{space 3}0.000{col 72}{space 4} .2288845{col 85}{space 3} .5096984
{txt}{space 25}first {c |}{col 32}{res}{space 2}-.0298249{col 44}{space 2} .0208612{col 55}{space 1}   -1.43{col 64}{space 3}0.153{col 72}{space 4} -.070712{col 85}{space 3} .0110622
{txt}{space 11}carrier_total_post4 {c |}{col 32}{res}{space 2} -.000586{col 44}{space 2} .0008296{col 55}{space 1}   -0.71{col 64}{space 3}0.480{col 72}{space 4} -.002212{col 85}{space 3} .0010399
{txt}{space 7}carrier_total_lcc_post4 {c |}{col 32}{res}{space 2} .0007341{col 44}{space 2} .0018265{col 55}{space 1}    0.40{col 64}{space 3}0.688{col 72}{space 4}-.0028458{col 85}{space 3}  .004314
{txt}{space 15}market_WN_post4 {c |}{col 32}{res}{space 2}-.0118094{col 44}{space 2} .0085745{col 55}{space 1}   -1.38{col 64}{space 3}0.168{col 72}{space 4}-.0286151{col 85}{space 3} .0049962
{txt}{space 10}apt_num_origin_post4 {c |}{col 32}{res}{space 2} .0263816{col 44}{space 2} .0042563{col 55}{space 1}    6.20{col 64}{space 3}0.000{col 72}{space 4} .0180394{col 85}{space 3} .0347239
{txt}apt_num_destination_city_post4 {c |}{col 32}{res}{space 2} .0252776{col 44}{space 2} .0041736{col 55}{space 1}    6.06{col 64}{space 3}0.000{col 72}{space 4} .0170975{col 85}{space 3} .0334578
{txt}{space 25}_cons {c |}{col 32}{res}{space 2} 5.484572{col 44}{space 2} .0272699{col 55}{space 1}  201.12{col 64}{space 3}0.000{col 72}{space 4} 5.431124{col 85}{space 3}  5.53802
{txt}{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                       sigma_u {c |} {res} .19991065
                       {txt}sigma_e {c |} {res}   .102726
                           {txt}rho {c |} {res} .79110691{txt}   (fraction of variance due to u_i)
{hline 31}{c BT}{hline 64}

{com}.         eststo any_ols_3
{txt}
{com}.         estadd local mfe "No" : any_ols_3
{txt}
{com}.         estadd local qfe "No" : any_ols_3
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_3
{txt}
{com}.         estadd local control "Yes" : any_ols_3
{txt}
{com}.         
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter, fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{p 0 6 2}note: {bf:mk_post4_lcc} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:_Iquarter_239} omitted because of collinearity.{p_end}
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}    39,674
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     2,241

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.1389{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.0000{col 63}{txt}avg{col 67}={col 69}{res}      17.7
{txt}     Overall = {res}0.0131{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}20{txt},{res}2240{txt}){col 67}={col 70}{res}   145.67
{txt}corr(u_i, Xb) = {res}-0.0083{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 79:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}        lfare{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}mk_post4 {c |}{col 15}{res}{space 2}-.1333114{col 27}{space 2} .0054615{col 38}{space 1}  -24.41{col 47}{space 3}0.000{col 55}{space 4}-.1440215{col 68}{space 3}-.1226013
{txt}{space 4}lcc_post4 {c |}{col 15}{res}{space 2} .0010944{col 27}{space 2} .0108944{col 38}{space 1}    0.10{col 47}{space 3}0.920{col 55}{space 4}-.0202698{col 68}{space 3} .0224586
{txt}{space 1}mk_post4_lcc {c |}{col 15}{res}{space 2}        0{col 27}{txt}  (omitted)
_Iquarter_221 {c |}{col 15}{res}{space 2}-.0222034{col 27}{space 2} .0023276{col 38}{space 1}   -9.54{col 47}{space 3}0.000{col 55}{space 4}-.0267679{col 68}{space 3}-.0176389
{txt}_Iquarter_222 {c |}{col 15}{res}{space 2}-.0576946{col 27}{space 2} .0030452{col 38}{space 1}  -18.95{col 47}{space 3}0.000{col 55}{space 4}-.0636663{col 68}{space 3}-.0517229
{txt}_Iquarter_223 {c |}{col 15}{res}{space 2}-.0725867{col 27}{space 2} .0029022{col 38}{space 1}  -25.01{col 47}{space 3}0.000{col 55}{space 4} -.078278{col 68}{space 3}-.0668955
{txt}_Iquarter_224 {c |}{col 15}{res}{space 2}-.0786037{col 27}{space 2} .0030806{col 38}{space 1}  -25.52{col 47}{space 3}0.000{col 55}{space 4}-.0846448{col 68}{space 3}-.0725626
{txt}_Iquarter_225 {c |}{col 15}{res}{space 2}-.0999316{col 27}{space 2} .0034885{col 38}{space 1}  -28.65{col 47}{space 3}0.000{col 55}{space 4}-.1067726{col 68}{space 3}-.0930907
{txt}_Iquarter_226 {c |}{col 15}{res}{space 2}-.1173027{col 27}{space 2} .0037805{col 38}{space 1}  -31.03{col 47}{space 3}0.000{col 55}{space 4}-.1247163{col 68}{space 3}-.1098891
{txt}_Iquarter_227 {c |}{col 15}{res}{space 2}-.1148228{col 27}{space 2} .0036049{col 38}{space 1}  -31.85{col 47}{space 3}0.000{col 55}{space 4}-.1218922{col 68}{space 3}-.1077534
{txt}_Iquarter_228 {c |}{col 15}{res}{space 2} -.102029{col 27}{space 2} .0035701{col 38}{space 1}  -28.58{col 47}{space 3}0.000{col 55}{space 4}-.1090301{col 68}{space 3}-.0950279
{txt}_Iquarter_229 {c |}{col 15}{res}{space 2}-.0989328{col 27}{space 2} .0036112{col 38}{space 1}  -27.40{col 47}{space 3}0.000{col 55}{space 4}-.1060145{col 68}{space 3}-.0918511
{txt}_Iquarter_230 {c |}{col 15}{res}{space 2}-.1563815{col 27}{space 2} .0040491{col 38}{space 1}  -38.62{col 47}{space 3}0.000{col 55}{space 4}-.1643219{col 68}{space 3}-.1484412
{txt}_Iquarter_231 {c |}{col 15}{res}{space 2}-.1413019{col 27}{space 2} .0038877{col 38}{space 1}  -36.35{col 47}{space 3}0.000{col 55}{space 4}-.1489258{col 68}{space 3}-.1336781
{txt}_Iquarter_232 {c |}{col 15}{res}{space 2}-.1376288{col 27}{space 2} .0037036{col 38}{space 1}  -37.16{col 47}{space 3}0.000{col 55}{space 4}-.1448915{col 68}{space 3} -.130366
{txt}_Iquarter_233 {c |}{col 15}{res}{space 2} -.000293{col 27}{space 2} .0034217{col 38}{space 1}   -0.09{col 47}{space 3}0.932{col 55}{space 4}-.0070029{col 68}{space 3}  .006417
{txt}_Iquarter_234 {c |}{col 15}{res}{space 2}-.0237423{col 27}{space 2} .0033001{col 38}{space 1}   -7.19{col 47}{space 3}0.000{col 55}{space 4}-.0302139{col 68}{space 3}-.0172706
{txt}_Iquarter_235 {c |}{col 15}{res}{space 2} .0121139{col 27}{space 2} .0028399{col 38}{space 1}    4.27{col 47}{space 3}0.000{col 55}{space 4} .0065447{col 68}{space 3}  .017683
{txt}_Iquarter_236 {c |}{col 15}{res}{space 2}-.0055922{col 27}{space 2} .0030795{col 38}{space 1}   -1.82{col 47}{space 3}0.070{col 55}{space 4}-.0116312{col 68}{space 3} .0004468
{txt}_Iquarter_237 {c |}{col 15}{res}{space 2} .0191415{col 27}{space 2} .0024187{col 38}{space 1}    7.91{col 47}{space 3}0.000{col 55}{space 4} .0143984{col 68}{space 3} .0238846
{txt}_Iquarter_238 {c |}{col 15}{res}{space 2}-.0186075{col 27}{space 2} .0021735{col 38}{space 1}   -8.56{col 47}{space 3}0.000{col 55}{space 4}-.0228698{col 68}{space 3}-.0143452
{txt}_Iquarter_239 {c |}{col 15}{res}{space 2}        0{col 27}{txt}  (omitted)
{space 8}_cons {c |}{col 15}{res}{space 2} 5.825689{col 27}{space 2} .0027589{col 38}{space 1} 2111.64{col 47}{space 3}0.000{col 55}{space 4} 5.820279{col 68}{space 3} 5.831099
{txt}{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
      sigma_u {c |} {res} .34584774
      {txt}sigma_e {c |} {res}  .1067417
          {txt}rho {c |} {res} .91302746{txt}   (fraction of variance due to u_i)
{hline 14}{c BT}{hline 64}

{com}.         eststo any_ols_4
{txt}
{com}.         estadd local mfe "Yes" : any_ols_4
{txt}
{com}.         estadd local qfe "Yes" : any_ols_4
{txt}
{com}.         estadd local itinearycontrol "No" : any_ols_4
{txt}
{com}.         estadd local control "No" : any_ols_4
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter `itineary_contr', fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{p 0 6 2}note: {bf:mk_post4_lcc} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:_Iquarter_239} omitted because of collinearity.{p_end}
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}    39,674
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     2,241

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.2371{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.4088{col 63}{txt}avg{col 67}={col 69}{res}      17.7
{txt}     Overall = {res}0.3594{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}23{txt},{res}2240{txt}){col 67}={col 70}{res}   174.78
{txt}corr(u_i, Xb) = {res}0.1963{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 79:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}        lfare{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}mk_post4 {c |}{col 15}{res}{space 2}-.0824409{col 27}{space 2}  .005395{col 38}{space 1}  -15.28{col 47}{space 3}0.000{col 55}{space 4}-.0930206{col 68}{space 3}-.0718612
{txt}{space 4}lcc_post4 {c |}{col 15}{res}{space 2}-.0261972{col 27}{space 2} .0101337{col 38}{space 1}   -2.59{col 47}{space 3}0.010{col 55}{space 4}-.0460697{col 68}{space 3}-.0063247
{txt}{space 1}mk_post4_lcc {c |}{col 15}{res}{space 2}        0{col 27}{txt}  (omitted)
_Iquarter_221 {c |}{col 15}{res}{space 2}-.0224002{col 27}{space 2} .0023368{col 38}{space 1}   -9.59{col 47}{space 3}0.000{col 55}{space 4}-.0269826{col 68}{space 3}-.0178177
{txt}_Iquarter_222 {c |}{col 15}{res}{space 2}-.0490119{col 27}{space 2} .0030476{col 38}{space 1}  -16.08{col 47}{space 3}0.000{col 55}{space 4}-.0549883{col 68}{space 3}-.0430355
{txt}_Iquarter_223 {c |}{col 15}{res}{space 2} -.073621{col 27}{space 2} .0029145{col 38}{space 1}  -25.26{col 47}{space 3}0.000{col 55}{space 4}-.0793364{col 68}{space 3}-.0679057
{txt}_Iquarter_224 {c |}{col 15}{res}{space 2} -.064626{col 27}{space 2} .0029994{col 38}{space 1}  -21.55{col 47}{space 3}0.000{col 55}{space 4} -.070508{col 68}{space 3}-.0587441
{txt}_Iquarter_225 {c |}{col 15}{res}{space 2}-.0800488{col 27}{space 2} .0034533{col 38}{space 1}  -23.18{col 47}{space 3}0.000{col 55}{space 4}-.0868208{col 68}{space 3}-.0732768
{txt}_Iquarter_226 {c |}{col 15}{res}{space 2}-.0849318{col 27}{space 2}  .003772{col 38}{space 1}  -22.52{col 47}{space 3}0.000{col 55}{space 4}-.0923287{col 68}{space 3}-.0775349
{txt}_Iquarter_227 {c |}{col 15}{res}{space 2}-.0928664{col 27}{space 2} .0036382{col 38}{space 1}  -25.53{col 47}{space 3}0.000{col 55}{space 4} -.100001{col 68}{space 3}-.0857318
{txt}_Iquarter_228 {c |}{col 15}{res}{space 2}-.0693178{col 27}{space 2} .0036276{col 38}{space 1}  -19.11{col 47}{space 3}0.000{col 55}{space 4}-.0764316{col 68}{space 3}-.0622041
{txt}_Iquarter_229 {c |}{col 15}{res}{space 2}-.0573222{col 27}{space 2} .0038207{col 38}{space 1}  -15.00{col 47}{space 3}0.000{col 55}{space 4}-.0648148{col 68}{space 3}-.0498297
{txt}_Iquarter_230 {c |}{col 15}{res}{space 2}-.1104558{col 27}{space 2} .0042532{col 38}{space 1}  -25.97{col 47}{space 3}0.000{col 55}{space 4}-.1187964{col 68}{space 3}-.1021152
{txt}_Iquarter_231 {c |}{col 15}{res}{space 2} -.108254{col 27}{space 2} .0039939{col 38}{space 1}  -27.10{col 47}{space 3}0.000{col 55}{space 4}-.1160861{col 68}{space 3}-.1004218
{txt}_Iquarter_232 {c |}{col 15}{res}{space 2}-.0942896{col 27}{space 2}  .003795{col 38}{space 1}  -24.85{col 47}{space 3}0.000{col 55}{space 4}-.1017318{col 68}{space 3}-.0868475
{txt}_Iquarter_233 {c |}{col 15}{res}{space 2} .0031257{col 27}{space 2} .0031409{col 38}{space 1}    1.00{col 47}{space 3}0.320{col 55}{space 4}-.0030336{col 68}{space 3} .0092851
{txt}_Iquarter_234 {c |}{col 15}{res}{space 2}-.0135624{col 27}{space 2}  .003078{col 38}{space 1}   -4.41{col 47}{space 3}0.000{col 55}{space 4}-.0195983{col 68}{space 3}-.0075264
{txt}_Iquarter_235 {c |}{col 15}{res}{space 2} .0084472{col 27}{space 2} .0026034{col 38}{space 1}    3.24{col 47}{space 3}0.001{col 55}{space 4} .0033418{col 68}{space 3} .0135525
{txt}_Iquarter_236 {c |}{col 15}{res}{space 2} .0021558{col 27}{space 2} .0030043{col 38}{space 1}    0.72{col 47}{space 3}0.473{col 55}{space 4}-.0037358{col 68}{space 3} .0080474
{txt}_Iquarter_237 {c |}{col 15}{res}{space 2} .0319102{col 27}{space 2} .0022837{col 38}{space 1}   13.97{col 47}{space 3}0.000{col 55}{space 4} .0274317{col 68}{space 3} .0363886
{txt}_Iquarter_238 {c |}{col 15}{res}{space 2}-.0040802{col 27}{space 2} .0020336{col 38}{space 1}   -2.01{col 47}{space 3}0.045{col 55}{space 4}-.0080681{col 68}{space 3}-.0000922
{txt}_Iquarter_239 {c |}{col 15}{res}{space 2}        0{col 27}{txt}  (omitted)
{space 3}coupon_num {c |}{col 15}{res}{space 2}-.4394322{col 27}{space 2} .0414623{col 38}{space 1}  -10.60{col 47}{space 3}0.000{col 55}{space 4}-.5207407{col 68}{space 3}-.3581237
{txt}{space 4}roundtrip {c |}{col 15}{res}{space 2}  1.23116{col 27}{space 2} .0684988{col 38}{space 1}   17.97{col 47}{space 3}0.000{col 55}{space 4} 1.096833{col 68}{space 3} 1.365488
{txt}{space 5}transfer {c |}{col 15}{res}{space 2} .9809531{col 27}{space 2} .0679905{col 38}{space 1}   14.43{col 47}{space 3}0.000{col 55}{space 4} .8476221{col 68}{space 3} 1.114284
{txt}{space 8}_cons {c |}{col 15}{res}{space 2} 5.714143{col 27}{space 2} .0292124{col 38}{space 1}  195.61{col 47}{space 3}0.000{col 55}{space 4} 5.656857{col 68}{space 3} 5.771429
{txt}{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
      sigma_u {c |} {res} .27281495
      {txt}sigma_e {c |} {res} .10047618
          {txt}rho {c |} {res} .88056022{txt}   (fraction of variance due to u_i)
{hline 14}{c BT}{hline 64}

{com}.         eststo any_ols_5
{txt}
{com}.         estadd local mfe "Yes" : any_ols_5
{txt}
{com}.         estadd local qfe "Yes" : any_ols_5
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_5
{txt}
{com}.         estadd local control "No" : any_ols_5
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter `itineary_contr' `seat_contr' `interactions', fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{p 0 6 2}note: {bf:mk_post4_lcc} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:_Iquarter_239} omitted because of collinearity.{p_end}
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}    39,674
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     2,241

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.2595{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.4622{col 63}{txt}avg{col 67}={col 69}{res}      17.7
{txt}     Overall = {res}0.4103{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}31{txt},{res}2240{txt}){col 67}={col 70}{res}   145.19
{txt}corr(u_i, Xb) = {res}0.2513{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 96:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 31}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 32}{c |}{col 44}    Robust
{col 1}                         lfare{col 32}{c |} Coefficient{col 44}  std. err.{col 56}      t{col 64}   P>|t|{col 72}     [95% con{col 85}f. interval]
{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 22}mk_post4 {c |}{col 32}{res}{space 2}-.1240187{col 44}{space 2} .0103508{col 55}{space 1}  -11.98{col 64}{space 3}0.000{col 72}{space 4}-.1443169{col 85}{space 3}-.1037205
{txt}{space 21}lcc_post4 {c |}{col 32}{res}{space 2}-.0297713{col 44}{space 2} .0111293{col 55}{space 1}   -2.68{col 64}{space 3}0.008{col 72}{space 4}-.0515961{col 85}{space 3}-.0079466
{txt}{space 18}mk_post4_lcc {c |}{col 32}{res}{space 2}        0{col 44}{txt}  (omitted)
{space 17}_Iquarter_221 {c |}{col 32}{res}{space 2}-.0202887{col 44}{space 2} .0022919{col 55}{space 1}   -8.85{col 64}{space 3}0.000{col 72}{space 4}-.0247832{col 85}{space 3}-.0157943
{txt}{space 17}_Iquarter_222 {c |}{col 32}{res}{space 2} -.043471{col 44}{space 2} .0030144{col 55}{space 1}  -14.42{col 64}{space 3}0.000{col 72}{space 4}-.0493823{col 85}{space 3}-.0375598
{txt}{space 17}_Iquarter_223 {c |}{col 32}{res}{space 2}-.0717126{col 44}{space 2} .0028447{col 55}{space 1}  -25.21{col 64}{space 3}0.000{col 72}{space 4}-.0772911{col 85}{space 3}-.0661341
{txt}{space 17}_Iquarter_224 {c |}{col 32}{res}{space 2}-.0626001{col 44}{space 2} .0029604{col 55}{space 1}  -21.15{col 64}{space 3}0.000{col 72}{space 4}-.0684054{col 85}{space 3}-.0567948
{txt}{space 17}_Iquarter_225 {c |}{col 32}{res}{space 2}-.0781305{col 44}{space 2} .0034201{col 55}{space 1}  -22.84{col 64}{space 3}0.000{col 72}{space 4}-.0848374{col 85}{space 3}-.0714236
{txt}{space 17}_Iquarter_226 {c |}{col 32}{res}{space 2}-.0806596{col 44}{space 2}  .003794{col 55}{space 1}  -21.26{col 64}{space 3}0.000{col 72}{space 4}-.0880997{col 85}{space 3}-.0732194
{txt}{space 17}_Iquarter_227 {c |}{col 32}{res}{space 2}-.0938377{col 44}{space 2} .0036298{col 55}{space 1}  -25.85{col 64}{space 3}0.000{col 72}{space 4}-.1009558{col 85}{space 3}-.0867195
{txt}{space 17}_Iquarter_228 {c |}{col 32}{res}{space 2}-.0803929{col 44}{space 2} .0036907{col 55}{space 1}  -21.78{col 64}{space 3}0.000{col 72}{space 4}-.0876305{col 85}{space 3}-.0731553
{txt}{space 17}_Iquarter_229 {c |}{col 32}{res}{space 2}-.0655965{col 44}{space 2} .0039496{col 55}{space 1}  -16.61{col 64}{space 3}0.000{col 72}{space 4}-.0733418{col 85}{space 3}-.0578512
{txt}{space 17}_Iquarter_230 {c |}{col 32}{res}{space 2}-.1169516{col 44}{space 2} .0044021{col 55}{space 1}  -26.57{col 64}{space 3}0.000{col 72}{space 4}-.1255843{col 85}{space 3}-.1083189
{txt}{space 17}_Iquarter_231 {c |}{col 32}{res}{space 2}-.1225504{col 44}{space 2} .0041096{col 55}{space 1}  -29.82{col 64}{space 3}0.000{col 72}{space 4}-.1306094{col 85}{space 3}-.1144913
{txt}{space 17}_Iquarter_232 {c |}{col 32}{res}{space 2}-.1073297{col 44}{space 2} .0038858{col 55}{space 1}  -27.62{col 64}{space 3}0.000{col 72}{space 4}-.1149499{col 85}{space 3}-.0997095
{txt}{space 17}_Iquarter_233 {c |}{col 32}{res}{space 2}-.0079487{col 44}{space 2} .0034726{col 55}{space 1}   -2.29{col 64}{space 3}0.022{col 72}{space 4}-.0147585{col 85}{space 3}-.0011388
{txt}{space 17}_Iquarter_234 {c |}{col 32}{res}{space 2}-.0275778{col 44}{space 2} .0035458{col 55}{space 1}   -7.78{col 64}{space 3}0.000{col 72}{space 4}-.0345312{col 85}{space 3}-.0206244
{txt}{space 17}_Iquarter_235 {c |}{col 32}{res}{space 2}-.0127411{col 44}{space 2} .0032526{col 55}{space 1}   -3.92{col 64}{space 3}0.000{col 72}{space 4}-.0191195{col 85}{space 3}-.0063628
{txt}{space 17}_Iquarter_236 {c |}{col 32}{res}{space 2}-.0196551{col 44}{space 2} .0034828{col 55}{space 1}   -5.64{col 64}{space 3}0.000{col 72}{space 4} -.026485{col 85}{space 3}-.0128252
{txt}{space 17}_Iquarter_237 {c |}{col 32}{res}{space 2} .0066756{col 44}{space 2} .0032165{col 55}{space 1}    2.08{col 64}{space 3}0.038{col 72}{space 4} .0003679{col 85}{space 3} .0129833
{txt}{space 17}_Iquarter_238 {c |}{col 32}{res}{space 2}-.0023273{col 44}{space 2}  .002009{col 55}{space 1}   -1.16{col 64}{space 3}0.247{col 72}{space 4} -.006267{col 85}{space 3} .0016124
{txt}{space 17}_Iquarter_239 {c |}{col 32}{res}{space 2}        0{col 44}{txt}  (omitted)
{space 20}coupon_num {c |}{col 32}{res}{space 2} -.424479{col 44}{space 2} .0413707{col 55}{space 1}  -10.26{col 64}{space 3}0.000{col 72}{space 4} -.505608{col 85}{space 3}  -.34335
{txt}{space 21}roundtrip {c |}{col 32}{res}{space 2} 1.224762{col 44}{space 2} .0685493{col 55}{space 1}   17.87{col 64}{space 3}0.000{col 72}{space 4} 1.090335{col 85}{space 3} 1.359188
{txt}{space 22}transfer {c |}{col 32}{res}{space 2} .9521124{col 44}{space 2} .0678618{col 55}{space 1}   14.03{col 64}{space 3}0.000{col 72}{space 4} .8190337{col 85}{space 3} 1.085191
{txt}{space 20}restricted {c |}{col 32}{res}{space 2}  .212712{col 44}{space 2} .0201593{col 55}{space 1}   10.55{col 64}{space 3}0.000{col 72}{space 4} .1731791{col 85}{space 3} .2522448
{txt}{space 22}business {c |}{col 32}{res}{space 2} .5417285{col 44}{space 2}  .082028{col 55}{space 1}    6.60{col 64}{space 3}0.000{col 72}{space 4} .3808696{col 85}{space 3} .7025875
{txt}{space 25}first {c |}{col 32}{res}{space 2}-.0780462{col 44}{space 2} .0220213{col 55}{space 1}   -3.54{col 64}{space 3}0.000{col 72}{space 4}-.1212306{col 85}{space 3}-.0348618
{txt}{space 11}carrier_total_post4 {c |}{col 32}{res}{space 2} -.000525{col 44}{space 2}  .000842{col 55}{space 1}   -0.62{col 64}{space 3}0.533{col 72}{space 4}-.0021761{col 85}{space 3} .0011261
{txt}{space 7}carrier_total_lcc_post4 {c |}{col 32}{res}{space 2}-.0002063{col 44}{space 2} .0018623{col 55}{space 1}   -0.11{col 64}{space 3}0.912{col 72}{space 4}-.0038583{col 85}{space 3} .0034456
{txt}{space 15}market_WN_post4 {c |}{col 32}{res}{space 2}-.0144564{col 44}{space 2} .0088172{col 55}{space 1}   -1.64{col 64}{space 3}0.101{col 72}{space 4}-.0317471{col 85}{space 3} .0028343
{txt}{space 10}apt_num_origin_post4 {c |}{col 32}{res}{space 2} .0245984{col 44}{space 2}  .004394{col 55}{space 1}    5.60{col 64}{space 3}0.000{col 72}{space 4} .0159817{col 85}{space 3}  .033215
{txt}apt_num_destination_city_post4 {c |}{col 32}{res}{space 2} .0246313{col 44}{space 2} .0042806{col 55}{space 1}    5.75{col 64}{space 3}0.000{col 72}{space 4} .0162369{col 85}{space 3} .0330257
{txt}{space 25}_cons {c |}{col 32}{res}{space 2} 5.663527{col 44}{space 2} .0295177{col 55}{space 1}  191.87{col 64}{space 3}0.000{col 72}{space 4} 5.605642{col 85}{space 3} 5.721412
{txt}{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                       sigma_u {c |} {res} .26411992
                       {txt}sigma_e {c |} {res} .09899755
                           {txt}rho {c |} {res} .87681582{txt}   (fraction of variance due to u_i)
{hline 31}{c BT}{hline 64}

{com}.         eststo any_ols_6
{txt}
{com}.         estadd local mfe "Yes" : any_ols_6
{txt}
{com}.         estadd local qfe "Yes" : any_ols_6
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_6
{txt}
{com}.         estadd local control "Yes" : any_ols_6
{txt}
{com}. 
. * Combine all OLS estimates to one table
. /*
> local dep fare
> local post post4
> local seat_contr restricted business first
> local itineary_contr coupon_num roundtrip transfer
> local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
> */
. 
. esttab any_ols* using "output/tables/`post'`dep'.tex", replace booktabs ///
>         keep(mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr' `seat_contr' `interactions') label b(5) se(5) star(* 0.10 ** 0.05 *** 0.01) noabbrev ///
>         coeflabels(mk_`post' "ASVX market $\times$ Post" lcc_`post' "LCC ratio $\times$ Post" mk_`post'_lcc "ASVX market $\times$ LCC ratio $\times$ Post" coupon_num "Number of coupons" roundtrip "\shortstack{c -(}Roundtrip \\ (dummy){c )-}" transfer "\shortstack{c -(}Transfer \\ (dummy){c )-}" restricted "Restricted seat ratio" business "Business class ratio" first "First class ratio" carrier_total_`post' "Total # of carriers $\times$ Post" carrier_total_lcc_`post' "Total # of LCC carriers $\times$ Post" market_WN_`post' "Southwest dummy $\times$ Post" apt_num_origin_`post' "Number of aiports in origin $\times$ Post" apt_num_destination_city_`post' "Number of aiports in destination $\times$ Post") ///
>         stats(mfe qfe itinearycontrol control N r2, fmt(0 0 0 0 0 a3) ///
>                 labels("Market FE" "Time FE" "Itineary Controls" "Other Controls" "N" "R^2")) ///
>         title("Fixed Effects Regression: `post' `dep'" \label{c -(}`post'`dep'{c )-}) ///
>         mgroups("OLS" "Fixed Effects", pattern(1 0 0 1 0 0) prefix(\multicolumn{c -(}@span{c )-}{c -(}c{c )-}{c -(}) suffix({c )-}) span erepeat(\cmidrule(lr){c -(}@span{c )-})) 
{res}{txt}(output written to {browse  `"output/tables/post4fare.tex"'})

{com}. 
. gen lcc_ratio_group = 0 if inrange(lcc_ratio_pre, 0, 0.1)
{txt}(30,612 missing values generated)

{com}. replace lcc_ratio_group = 1 if inrange(lcc_ratio_pre, 0.1, 0.3)
{txt}(10,833 real changes made)

{com}. replace lcc_ratio_group = 2 if inrange(lcc_ratio_pre, 0.3, 0.6)
{txt}(14,043 real changes made)

{com}. replace lcc_ratio_group = 3 if inrange(lcc_ratio_pre, 0.6, 1.0)
{txt}(5,497 real changes made)

{com}. label var lcc_ratio_group "LCC Ratio Group"
{txt}
{com}. label define lcc_ratio_group 0 "No LCC" 1 "Low LCC" 2 "Medium LCC" 3 "High LCC"
{txt}
{com}. label values lcc_ratio_group lcc_ratio_group
{txt}
{com}. 
. label var fare "Fare (mean)"
{txt}
{com}. label var post4 "After Jan 2017"
{txt}
{com}. label define post4 0 "Before" 1 "After"
{txt}
{com}. label values post4 post4
{txt}
{com}. 
. label var market_ASVX "Alaska-Virigin market"
{txt}
{com}. label define market_ASVX 0 "No ASVX" 1 "ASVX"
{txt}
{com}. label values market_ASVX market_ASVX
{txt}
{com}. 
. egen mfare = mean(fare), by(lcc_ratio_group)
{txt}
{com}. 
. *graph box fare, over(post4) over(lcc_ratio_group) //medtype(marker) medmarker(msymbol(diamond))
. graph box fare, over(market_ASVX) over(post4) over(lcc_ratio_group)
{res}{txt}
{com}. *graph box fare, over(post4) over(market_ASVX) over(lcc_ratio_group)
. *graph box fare, over(market_ASVX) over(lcc_ratio_group)                
.                 
. 
.                 
.                 
. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", clear
{txt}
{com}. 
. local dep passenger
{txt}
{com}. local post post4
{txt}
{com}. 
. bysort market_id: egen pre_`dep' = mean(`dep') if `post' == 0
{txt}(2,861 missing values generated)

{com}. qui bysort market_id: egen post_`dep' = mean(`dep') if `post' == 1
{txt}
{com}. qui bysort market_id (pre_`dep'): replace pre_`dep'=pre_`dep'[1]
{txt}
{com}. gen pre_l`dep' = log(pre_`dep')
{txt}(164 missing values generated)

{com}. gen post_l`dep' = log(post_`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_l`dep' = post_l`dep' - pre_l`dep'
{txt}(5,115 missing values generated)

{com}. drop post_l`dep' pre_l`dep' post_`dep' pre_`dep'
{txt}
{com}. 
. gen q = substr(string(quarter, "%tq"), -1, .), after(quarter)
{txt}
{com}. egen id_quarter = group(market_id q)
{txt}
{com}. qui bysort id_quarter: egen pre_q`dep' = mean(`dep') if `post' == 0 
{txt}
{com}. qui bysort id_quarter: egen post_q`dep' = mean(`dep') if `post' == 1 
{txt}
{com}. qui bysort id_quarter (pre_q`dep'): replace pre_q`dep'=pre_q`dep'[1]
{txt}
{com}. gen pre_lq`dep' = log(pre_q`dep')
{txt}(317 missing values generated)

{com}. gen post_lq`dep' = log(post_q`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_lq`dep' = post_lq`dep' - pre_lq`dep'
{txt}(5,268 missing values generated)

{com}. drop post_lq`dep' pre_lq`dep' post_q`dep' pre_q`dep'
{txt}
{com}. label var diff_lq`dep' "Diff_lfare"
{txt}
{com}. 
. encode q, gen(q2)
{txt}
{com}. drop q
{txt}
{com}. rename q2 q
{res}{txt}
{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. local vars `seat_contr' `itineary_contr'
{txt}
{com}. foreach m of local vars{c -(}
{txt}  2{com}.         qui bysort market_id: egen pre_`m' = mean(`m') if `post' == 0
{txt}  3{com}.         qui bysort market_id (pre_`m'): replace pre_`m'=pre_`m'[1]
{txt}  4{com}.         gen post_`m' = `m' if `post' == 1
{txt}  5{com}.         gen `m'_diff = post_`m' - pre_`m'
{txt}  6{com}.         drop pre_`m' post_`m'
{txt}  7{com}. {c )-}
{txt}(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)

{com}. local seat_contr restricted_diff business_diff first_diff
{txt}
{com}. local itineary_contr coupon_num_diff roundtrip_diff transfer_diff
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post'
{txt}
{com}. 
. gegen int tag_unique = tag(market_id q) if post4 == 1
{res}{txt}{res}{txt}
{com}. order tag_unique, after(diff_lqfare)
{err}variable {bf}diff_lqfare{sf} not found
(error in option {bf:after()})
{txt}{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
. local dep passenger
{txt}
{com}. local post post4
{txt}
{com}. gen lpassenger=log(passenger)
{txt}
{com}. gen market_ASVX = (market_AS > 0 | market_VX > 0)
{txt}
{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. gen mk_`post' = market_ASVX * `post'
{txt}
{com}. gen lcc_`post' = lcc_ratio_pre * `post'
{txt}(239 missing values generated)

{com}. gen mk_`post'_lcc = mk_`post'*lcc_ratio_pre
{txt}(239 missing values generated)

{com}. 
. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. gen apt_num_origin_`post' = apt_num_origin * `post' 
{txt}
{com}. gen apt_num_destination_city_`post' = apt_num_destination_city * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc, cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,674
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1325                                         {txt}min = {res}         1
{txt}     Between = {res}0.1021                                         {txt}avg = {res}      17.7
{txt}     Overall = {res}0.0000                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}2{txt})      =  {res}  2019.46
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}  lpassenger{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2} .2279473{col 26}{space 2} .0069833{col 37}{space 1}   32.64{col 46}{space 3}0.000{col 54}{space 4} .2142603{col 67}{space 3} .2416344
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2}-.0947039{col 26}{space 2} .0189054{col 37}{space 1}   -5.01{col 46}{space 3}0.000{col 54}{space 4}-.1317578{col 67}{space 3}  -.05765
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 7}_cons {c |}{col 14}{res}{space 2} 6.484715{col 26}{space 2} .0314894{col 37}{space 1}  205.93{col 46}{space 3}0.000{col 54}{space 4} 6.422997{col 67}{space 3} 6.546433
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 1.3735065
     {txt}sigma_e {c |} {res} .25120994
         {txt}rho {c |} {res} .96763153{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}.         eststo any_ols_1
{txt}
{com}.         estadd local mfe "No" : any_ols_1
{txt}
{com}.         estadd local qfe "No" : any_ols_1
{txt}
{com}.         estadd local itinearycontrol "No" : any_ols_1
{txt}
{com}.         estadd local control "No" : any_ols_1
{txt}
{com}.         
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr', cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,674
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.3186                                         {txt}min = {res}         1
{txt}     Between = {res}0.5566                                         {txt}avg = {res}      17.7
{txt}     Overall = {res}0.5502                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}5{txt})      =  {res}  4134.92
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}  lpassenger{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2} .1633739{col 26}{space 2} .0062711{col 37}{space 1}   26.05{col 46}{space 3}0.000{col 54}{space 4} .1510828{col 67}{space 3} .1756651
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2}-.0751687{col 26}{space 2} .0157632{col 37}{space 1}   -4.77{col 46}{space 3}0.000{col 54}{space 4}-.1060641{col 67}{space 3}-.0442733
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}coupon_num {c |}{col 14}{res}{space 2} .0994155{col 26}{space 2}  .089598{col 37}{space 1}    1.11{col 46}{space 3}0.267{col 54}{space 4}-.0761932{col 67}{space 3} .2750243
{txt}{space 3}roundtrip {c |}{col 14}{res}{space 2}  .100656{col 26}{space 2} .1448664{col 37}{space 1}    0.69{col 46}{space 3}0.487{col 54}{space 4} -.183277{col 67}{space 3}  .384589
{txt}{space 4}transfer {c |}{col 14}{res}{space 2}-1.409537{col 26}{space 2} .1312912{col 37}{space 1}  -10.74{col 46}{space 3}0.000{col 54}{space 4}-1.666863{col 67}{space 3}-1.152211
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 6.907278{col 26}{space 2} .0731564{col 37}{space 1}   94.42{col 46}{space 3}0.000{col 54}{space 4} 6.763894{col 67}{space 3} 7.050662
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .89482172
     {txt}sigma_e {c |} {res} .22253012
         {txt}rho {c |} {res} .94175704{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}.         eststo any_ols_2
{txt}
{com}.         estadd local mfe "No" : any_ols_2
{txt}
{com}.         estadd local qfe "No" : any_ols_2
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_2
{txt}
{com}.         estadd local control "No" : any_ols_2
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr' `seat_contr' `interactions', cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,674
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.3188                                         {txt}min = {res}         1
{txt}     Between = {res}0.5690                                         {txt}avg = {res}      17.7
{txt}     Overall = {res}0.5580                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}13{txt})     =  {res}  4810.06
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 96:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 31}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 32}{c |}{col 44}    Robust
{col 1}                    lpassenger{col 32}{c |} Coefficient{col 44}  std. err.{col 56}      z{col 64}   P>|z|{col 72}     [95% con{col 85}f. interval]
{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 22}mk_post4 {c |}{col 32}{res}{space 2} .1580388{col 44}{space 2} .0136838{col 55}{space 1}   11.55{col 64}{space 3}0.000{col 72}{space 4} .1312192{col 85}{space 3} .1848585
{txt}{space 21}lcc_post4 {c |}{col 32}{res}{space 2}-.0840594{col 44}{space 2} .0188998{col 55}{space 1}   -4.45{col 64}{space 3}0.000{col 72}{space 4}-.1211023{col 85}{space 3}-.0470165
{txt}{space 18}mk_post4_lcc {c |}{col 32}{res}{space 2}        0{col 44}{txt}  (omitted)
{space 20}coupon_num {c |}{col 32}{res}{space 2}-.0574378{col 44}{space 2} .0906608{col 55}{space 1}   -0.63{col 64}{space 3}0.526{col 72}{space 4}-.2351298{col 85}{space 3} .1202541
{txt}{space 21}roundtrip {c |}{col 32}{res}{space 2}  .360281{col 44}{space 2} .1477318{col 55}{space 1}    2.44{col 64}{space 3}0.015{col 72}{space 4}  .070732{col 85}{space 3} .6498299
{txt}{space 22}transfer {c |}{col 32}{res}{space 2}-1.255453{col 44}{space 2} .1333799{col 55}{space 1}   -9.41{col 64}{space 3}0.000{col 72}{space 4}-1.516873{col 85}{space 3}-.9940333
{txt}{space 20}restricted {c |}{col 32}{res}{space 2}-.1321858{col 44}{space 2} .0300148{col 55}{space 1}   -4.40{col 64}{space 3}0.000{col 72}{space 4}-.1910138{col 85}{space 3}-.0733578
{txt}{space 22}business {c |}{col 32}{res}{space 2} .0014142{col 44}{space 2} .1416863{col 55}{space 1}    0.01{col 64}{space 3}0.992{col 72}{space 4}-.2762858{col 85}{space 3} .2791141
{txt}{space 25}first {c |}{col 32}{res}{space 2}-.0348339{col 44}{space 2} .0438075{col 55}{space 1}   -0.80{col 64}{space 3}0.427{col 72}{space 4}-.1206949{col 85}{space 3} .0510272
{txt}{space 11}carrier_total_post4 {c |}{col 32}{res}{space 2} .0008687{col 44}{space 2} .0012817{col 55}{space 1}    0.68{col 64}{space 3}0.498{col 72}{space 4}-.0016434{col 85}{space 3} .0033808
{txt}{space 7}carrier_total_lcc_post4 {c |}{col 32}{res}{space 2}  .009321{col 44}{space 2} .0026813{col 55}{space 1}    3.48{col 64}{space 3}0.001{col 72}{space 4} .0040657{col 85}{space 3} .0145763
{txt}{space 15}market_WN_post4 {c |}{col 32}{res}{space 2}  .006664{col 44}{space 2} .0134838{col 55}{space 1}    0.49{col 64}{space 3}0.621{col 72}{space 4}-.0197638{col 85}{space 3} .0330919
{txt}{space 10}apt_num_origin_post4 {c |}{col 32}{res}{space 2}-.0174362{col 44}{space 2}  .006537{col 55}{space 1}   -2.67{col 64}{space 3}0.008{col 72}{space 4}-.0302485{col 85}{space 3}-.0046239
{txt}apt_num_destination_city_post4 {c |}{col 32}{res}{space 2}-.0145129{col 44}{space 2} .0067008{col 55}{space 1}   -2.17{col 64}{space 3}0.030{col 72}{space 4}-.0276463{col 85}{space 3}-.0013795
{txt}{space 25}_cons {c |}{col 32}{res}{space 2} 7.073255{col 44}{space 2} .0730135{col 55}{space 1}   96.88{col 64}{space 3}0.000{col 72}{space 4} 6.930151{col 85}{space 3} 7.216359
{txt}{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                       sigma_u {c |} {res} .62982908
                       {txt}sigma_e {c |} {res} .22217152
                           {txt}rho {c |} {res} .88933807{txt}   (fraction of variance due to u_i)
{hline 31}{c BT}{hline 64}

{com}.         eststo any_ols_3
{txt}
{com}.         estadd local mfe "No" : any_ols_3
{txt}
{com}.         estadd local qfe "No" : any_ols_3
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_3
{txt}
{com}.         estadd local control "Yes" : any_ols_3
{txt}
{com}.         
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter, fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{p 0 6 2}note: {bf:mk_post4_lcc} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:_Iquarter_239} omitted because of collinearity.{p_end}
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}    39,674
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     2,241

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.3209{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.2279{col 63}{txt}avg{col 67}={col 69}{res}      17.7
{txt}     Overall = {res}0.0007{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}20{txt},{res}2240{txt}){col 67}={col 70}{res}  1118.76
{txt}corr(u_i, Xb) = {res}-0.0797{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 79:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}   lpassenger{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}mk_post4 {c |}{col 15}{res}{space 2} -.053907{col 27}{space 2} .0101625{col 38}{space 1}   -5.30{col 47}{space 3}0.000{col 55}{space 4}-.0738358{col 68}{space 3}-.0339781
{txt}{space 4}lcc_post4 {c |}{col 15}{res}{space 2}-.1107868{col 27}{space 2} .0189062{col 38}{space 1}   -5.86{col 47}{space 3}0.000{col 55}{space 4}-.1478623{col 68}{space 3}-.0737112
{txt}{space 1}mk_post4_lcc {c |}{col 15}{res}{space 2}        0{col 27}{txt}  (omitted)
_Iquarter_221 {c |}{col 15}{res}{space 2}-.4453566{col 27}{space 2} .0066728{col 38}{space 1}  -66.74{col 47}{space 3}0.000{col 55}{space 4}-.4584422{col 68}{space 3} -.432271
{txt}_Iquarter_222 {c |}{col 15}{res}{space 2}-.3943229{col 27}{space 2} .0095806{col 38}{space 1}  -41.16{col 47}{space 3}0.000{col 55}{space 4}-.4131106{col 68}{space 3}-.3755352
{txt}_Iquarter_223 {c |}{col 15}{res}{space 2}-.4417855{col 27}{space 2} .0062536{col 38}{space 1}  -70.65{col 47}{space 3}0.000{col 55}{space 4}-.4540489{col 68}{space 3} -.429522
{txt}_Iquarter_224 {c |}{col 15}{res}{space 2}-.5248292{col 27}{space 2} .0052691{col 38}{space 1}  -99.60{col 47}{space 3}0.000{col 55}{space 4}-.5351621{col 68}{space 3}-.5144963
{txt}_Iquarter_225 {c |}{col 15}{res}{space 2}-.3226411{col 27}{space 2} .0079922{col 38}{space 1}  -40.37{col 47}{space 3}0.000{col 55}{space 4}-.3383141{col 68}{space 3}-.3069681
{txt}_Iquarter_226 {c |}{col 15}{res}{space 2}-.2837796{col 27}{space 2} .0103481{col 38}{space 1}  -27.42{col 47}{space 3}0.000{col 55}{space 4}-.3040725{col 68}{space 3}-.2634867
{txt}_Iquarter_227 {c |}{col 15}{res}{space 2}-.3372475{col 27}{space 2}  .007189{col 38}{space 1}  -46.91{col 47}{space 3}0.000{col 55}{space 4}-.3513453{col 68}{space 3}-.3231497
{txt}_Iquarter_228 {c |}{col 15}{res}{space 2}-.4215235{col 27}{space 2} .0061484{col 38}{space 1}  -68.56{col 47}{space 3}0.000{col 55}{space 4}-.4335807{col 68}{space 3}-.4094664
{txt}_Iquarter_229 {c |}{col 15}{res}{space 2}-.2192776{col 27}{space 2} .0084341{col 38}{space 1}  -26.00{col 47}{space 3}0.000{col 55}{space 4}-.2358171{col 68}{space 3}-.2027381
{txt}_Iquarter_230 {c |}{col 15}{res}{space 2} -.184845{col 27}{space 2}  .010553{col 38}{space 1}  -17.52{col 47}{space 3}0.000{col 55}{space 4}-.2055397{col 68}{space 3}-.1641503
{txt}_Iquarter_231 {c |}{col 15}{res}{space 2}-.2316002{col 27}{space 2} .0076854{col 38}{space 1}  -30.14{col 47}{space 3}0.000{col 55}{space 4}-.2466713{col 68}{space 3} -.216529
{txt}_Iquarter_232 {c |}{col 15}{res}{space 2}-.3170271{col 27}{space 2} .0067406{col 38}{space 1}  -47.03{col 47}{space 3}0.000{col 55}{space 4}-.3302455{col 68}{space 3}-.3038087
{txt}_Iquarter_233 {c |}{col 15}{res}{space 2}-.0249761{col 27}{space 2} .0059553{col 38}{space 1}   -4.19{col 47}{space 3}0.000{col 55}{space 4}-.0366545{col 68}{space 3}-.0132976
{txt}_Iquarter_234 {c |}{col 15}{res}{space 2}-.0052103{col 27}{space 2} .0074547{col 38}{space 1}   -0.70{col 47}{space 3}0.485{col 55}{space 4}-.0198291{col 68}{space 3} .0094085
{txt}_Iquarter_235 {c |}{col 15}{res}{space 2}-.0685972{col 27}{space 2} .0043145{col 38}{space 1}  -15.90{col 47}{space 3}0.000{col 55}{space 4}-.0770581{col 68}{space 3}-.0601363
{txt}_Iquarter_236 {c |}{col 15}{res}{space 2}-.1689174{col 27}{space 2} .0058237{col 38}{space 1}  -29.01{col 47}{space 3}0.000{col 55}{space 4}-.1803378{col 68}{space 3}-.1574971
{txt}_Iquarter_237 {c |}{col 15}{res}{space 2} .0277902{col 27}{space 2} .0046333{col 38}{space 1}    6.00{col 47}{space 3}0.000{col 55}{space 4} .0187042{col 68}{space 3} .0368763
{txt}_Iquarter_238 {c |}{col 15}{res}{space 2}   .06695{col 27}{space 2} .0065509{col 38}{space 1}   10.22{col 47}{space 3}0.000{col 55}{space 4} .0541036{col 68}{space 3} .0797964
{txt}_Iquarter_239 {c |}{col 15}{res}{space 2}        0{col 27}{txt}  (omitted)
{space 8}_cons {c |}{col 15}{res}{space 2} 7.024536{col 27}{space 2} .0067378{col 38}{space 1} 1042.56{col 47}{space 3}0.000{col 55}{space 4} 7.011323{col 68}{space 3} 7.037749
{txt}{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
      sigma_u {c |} {res} 1.4980893
      {txt}sigma_e {c |} {res}  .2223247
          {txt}rho {c |} {res} .97845042{txt}   (fraction of variance due to u_i)
{hline 14}{c BT}{hline 64}

{com}.         eststo any_ols_4
{txt}
{com}.         estadd local mfe "Yes" : any_ols_4
{txt}
{com}.         estadd local qfe "Yes" : any_ols_4
{txt}
{com}.         estadd local itinearycontrol "No" : any_ols_4
{txt}
{com}.         estadd local control "No" : any_ols_4
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter `itineary_contr', fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{p 0 6 2}note: {bf:mk_post4_lcc} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:_Iquarter_239} omitted because of collinearity.{p_end}
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}    39,674
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     2,241

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.5019{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.5358{col 63}{txt}avg{col 67}={col 69}{res}      17.7
{txt}     Overall = {res}0.5397{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}23{txt},{res}2240{txt}){col 67}={col 70}{res}  1146.86
{txt}corr(u_i, Xb) = {res}0.5080{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 79:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}   lpassenger{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}mk_post4 {c |}{col 15}{res}{space 2}-.1474234{col 27}{space 2} .0097269{col 38}{space 1}  -15.16{col 47}{space 3}0.000{col 55}{space 4} -.166498{col 68}{space 3}-.1283487
{txt}{space 4}lcc_post4 {c |}{col 15}{res}{space 2}-.0998023{col 27}{space 2}  .015837{col 38}{space 1}   -6.30{col 47}{space 3}0.000{col 55}{space 4}-.1308591{col 68}{space 3}-.0687456
{txt}{space 1}mk_post4_lcc {c |}{col 15}{res}{space 2}        0{col 27}{txt}  (omitted)
_Iquarter_221 {c |}{col 15}{res}{space 2}-.4560323{col 27}{space 2} .0061222{col 38}{space 1}  -74.49{col 47}{space 3}0.000{col 55}{space 4}-.4680381{col 68}{space 3}-.4440265
{txt}_Iquarter_222 {c |}{col 15}{res}{space 2} -.398276{col 27}{space 2} .0082663{col 38}{space 1}  -48.18{col 47}{space 3}0.000{col 55}{space 4}-.4144865{col 68}{space 3}-.3820655
{txt}_Iquarter_223 {c |}{col 15}{res}{space 2}-.4568941{col 27}{space 2} .0057301{col 38}{space 1}  -79.74{col 47}{space 3}0.000{col 55}{space 4} -.468131{col 68}{space 3}-.4456573
{txt}_Iquarter_224 {c |}{col 15}{res}{space 2}-.5365725{col 27}{space 2}  .005029{col 38}{space 1} -106.70{col 47}{space 3}0.000{col 55}{space 4}-.5464344{col 68}{space 3}-.5267106
{txt}_Iquarter_225 {c |}{col 15}{res}{space 2}-.3463211{col 27}{space 2} .0073327{col 38}{space 1}  -47.23{col 47}{space 3}0.000{col 55}{space 4}-.3607008{col 68}{space 3}-.3319415
{txt}_Iquarter_226 {c |}{col 15}{res}{space 2}-.3127377{col 27}{space 2} .0093167{col 38}{space 1}  -33.57{col 47}{space 3}0.000{col 55}{space 4}-.3310079{col 68}{space 3}-.2944674
{txt}_Iquarter_227 {c |}{col 15}{res}{space 2}-.3763082{col 27}{space 2} .0067357{col 38}{space 1}  -55.87{col 47}{space 3}0.000{col 55}{space 4}-.3895171{col 68}{space 3}-.3630993
{txt}_Iquarter_228 {c |}{col 15}{res}{space 2}-.4519238{col 27}{space 2} .0062563{col 38}{space 1}  -72.23{col 47}{space 3}0.000{col 55}{space 4}-.4641926{col 68}{space 3} -.439655
{txt}_Iquarter_229 {c |}{col 15}{res}{space 2}-.2579293{col 27}{space 2} .0080761{col 38}{space 1}  -31.94{col 47}{space 3}0.000{col 55}{space 4}-.2737667{col 68}{space 3}-.2420918
{txt}_Iquarter_230 {c |}{col 15}{res}{space 2}-.2234143{col 27}{space 2} .0097707{col 38}{space 1}  -22.87{col 47}{space 3}0.000{col 55}{space 4}-.2425749{col 68}{space 3}-.2042537
{txt}_Iquarter_231 {c |}{col 15}{res}{space 2}-.2851779{col 27}{space 2} .0072243{col 38}{space 1}  -39.47{col 47}{space 3}0.000{col 55}{space 4}-.2993449{col 68}{space 3}-.2710109
{txt}_Iquarter_232 {c |}{col 15}{res}{space 2}-.3649489{col 27}{space 2} .0068622{col 38}{space 1}  -53.18{col 47}{space 3}0.000{col 55}{space 4}-.3784058{col 68}{space 3} -.351492
{txt}_Iquarter_233 {c |}{col 15}{res}{space 2}-.0043115{col 27}{space 2}  .005041{col 38}{space 1}   -0.86{col 47}{space 3}0.392{col 55}{space 4}-.0141971{col 68}{space 3}  .005574
{txt}_Iquarter_234 {c |}{col 15}{res}{space 2} .0130494{col 27}{space 2} .0064687{col 38}{space 1}    2.02{col 47}{space 3}0.044{col 55}{space 4}  .000364{col 68}{space 3} .0257347
{txt}_Iquarter_235 {c |}{col 15}{res}{space 2}-.0653343{col 27}{space 2} .0036181{col 38}{space 1}  -18.06{col 47}{space 3}0.000{col 55}{space 4}-.0724295{col 68}{space 3}-.0582391
{txt}_Iquarter_236 {c |}{col 15}{res}{space 2}-.1440542{col 27}{space 2} .0053434{col 38}{space 1}  -26.96{col 47}{space 3}0.000{col 55}{space 4}-.1545327{col 68}{space 3}-.1335757
{txt}_Iquarter_237 {c |}{col 15}{res}{space 2} .0391198{col 27}{space 2}  .004103{col 38}{space 1}    9.53{col 47}{space 3}0.000{col 55}{space 4} .0310736{col 68}{space 3} .0471659
{txt}_Iquarter_238 {c |}{col 15}{res}{space 2} .0768823{col 27}{space 2} .0057043{col 38}{space 1}   13.48{col 47}{space 3}0.000{col 55}{space 4} .0656961{col 68}{space 3} .0880686
{txt}_Iquarter_239 {c |}{col 15}{res}{space 2}        0{col 27}{txt}  (omitted)
{space 3}coupon_num {c |}{col 15}{res}{space 2} .1114177{col 27}{space 2} .0927301{col 38}{space 1}    1.20{col 47}{space 3}0.230{col 55}{space 4}-.0704282{col 68}{space 3} .2932637
{txt}{space 4}roundtrip {c |}{col 15}{res}{space 2} .1486944{col 27}{space 2} .1538392{col 38}{space 1}    0.97{col 47}{space 3}0.334{col 55}{space 4}-.1529879{col 68}{space 3} .4503767
{txt}{space 5}transfer {c |}{col 15}{res}{space 2}-1.293835{col 27}{space 2} .1369275{col 38}{space 1}   -9.45{col 47}{space 3}0.000{col 55}{space 4}-1.562353{col 68}{space 3}-1.025317
{txt}{space 8}_cons {c |}{col 15}{res}{space 2} 7.322829{col 27}{space 2} .0724703{col 38}{space 1}  101.05{col 47}{space 3}0.000{col 55}{space 4} 7.180713{col 68}{space 3} 7.464945
{txt}{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
      sigma_u {c |} {res} 1.1785693
      {txt}sigma_e {c |} {res} .19040525
          {txt}rho {c |} {res} .97456348{txt}   (fraction of variance due to u_i)
{hline 14}{c BT}{hline 64}

{com}.         eststo any_ols_5
{txt}
{com}.         estadd local mfe "Yes" : any_ols_5
{txt}
{com}.         estadd local qfe "Yes" : any_ols_5
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_5
{txt}
{com}.         estadd local control "No" : any_ols_5
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter `itineary_contr' `seat_contr' `interactions', fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{p 0 6 2}note: {bf:mk_post4_lcc} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:_Iquarter_239} omitted because of collinearity.{p_end}
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}    39,674
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     2,241

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.5027{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.5374{col 63}{txt}avg{col 67}={col 69}{res}      17.7
{txt}     Overall = {res}0.5396{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}31{txt},{res}2240{txt}){col 67}={col 70}{res}   872.02
{txt}corr(u_i, Xb) = {res}0.5087{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 96:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 31}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 32}{c |}{col 44}    Robust
{col 1}                    lpassenger{col 32}{c |} Coefficient{col 44}  std. err.{col 56}      t{col 64}   P>|t|{col 72}     [95% con{col 85}f. interval]
{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 22}mk_post4 {c |}{col 32}{res}{space 2}-.1155658{col 44}{space 2} .0161221{col 55}{space 1}   -7.17{col 64}{space 3}0.000{col 72}{space 4}-.1471817{col 85}{space 3}-.0839499
{txt}{space 21}lcc_post4 {c |}{col 32}{res}{space 2}-.1045528{col 44}{space 2} .0192937{col 55}{space 1}   -5.42{col 64}{space 3}0.000{col 72}{space 4}-.1423883{col 85}{space 3}-.0667174
{txt}{space 18}mk_post4_lcc {c |}{col 32}{res}{space 2}        0{col 44}{txt}  (omitted)
{space 17}_Iquarter_221 {c |}{col 32}{res}{space 2}-.4565823{col 44}{space 2} .0061199{col 55}{space 1}  -74.61{col 64}{space 3}0.000{col 72}{space 4}-.4685835{col 85}{space 3} -.444581
{txt}{space 17}_Iquarter_222 {c |}{col 32}{res}{space 2}-.3998875{col 44}{space 2} .0083006{col 55}{space 1}  -48.18{col 64}{space 3}0.000{col 72}{space 4}-.4161652{col 85}{space 3}-.3836099
{txt}{space 17}_Iquarter_223 {c |}{col 32}{res}{space 2} -.457694{col 44}{space 2} .0057513{col 55}{space 1}  -79.58{col 64}{space 3}0.000{col 72}{space 4}-.4689725{col 85}{space 3}-.4464156
{txt}{space 17}_Iquarter_224 {c |}{col 32}{res}{space 2}-.5372521{col 44}{space 2} .0050299{col 55}{space 1} -106.81{col 64}{space 3}0.000{col 72}{space 4}-.5471159{col 85}{space 3}-.5273883
{txt}{space 17}_Iquarter_225 {c |}{col 32}{res}{space 2}-.3467824{col 44}{space 2} .0073323{col 55}{space 1}  -47.30{col 64}{space 3}0.000{col 72}{space 4}-.3611612{col 85}{space 3}-.3324037
{txt}{space 17}_Iquarter_226 {c |}{col 32}{res}{space 2}-.3138479{col 44}{space 2} .0093477{col 55}{space 1}  -33.57{col 64}{space 3}0.000{col 72}{space 4} -.332179{col 85}{space 3}-.2955168
{txt}{space 17}_Iquarter_227 {c |}{col 32}{res}{space 2}-.3759273{col 44}{space 2} .0067432{col 55}{space 1}  -55.75{col 64}{space 3}0.000{col 72}{space 4} -.389151{col 85}{space 3}-.3627037
{txt}{space 17}_Iquarter_228 {c |}{col 32}{res}{space 2}-.4493344{col 44}{space 2} .0064322{col 55}{space 1}  -69.86{col 64}{space 3}0.000{col 72}{space 4}-.4619481{col 85}{space 3}-.4367207
{txt}{space 17}_Iquarter_229 {c |}{col 32}{res}{space 2}-.2561618{col 44}{space 2} .0083346{col 55}{space 1}  -30.73{col 64}{space 3}0.000{col 72}{space 4}-.2725061{col 85}{space 3}-.2398175
{txt}{space 17}_Iquarter_230 {c |}{col 32}{res}{space 2}-.2221231{col 44}{space 2} .0099836{col 55}{space 1}  -22.25{col 64}{space 3}0.000{col 72}{space 4}-.2417011{col 85}{space 3}-.2025451
{txt}{space 17}_Iquarter_231 {c |}{col 32}{res}{space 2}-.2819278{col 44}{space 2} .0075075{col 55}{space 1}  -37.55{col 64}{space 3}0.000{col 72}{space 4}-.2966501{col 85}{space 3}-.2672054
{txt}{space 17}_Iquarter_232 {c |}{col 32}{res}{space 2}-.3618642{col 44}{space 2} .0070978{col 55}{space 1}  -50.98{col 64}{space 3}0.000{col 72}{space 4}-.3757831{col 85}{space 3}-.3479453
{txt}{space 17}_Iquarter_233 {c |}{col 32}{res}{space 2}-.0011352{col 44}{space 2} .0056915{col 55}{space 1}   -0.20{col 64}{space 3}0.842{col 72}{space 4}-.0122965{col 85}{space 3}  .010026
{txt}{space 17}_Iquarter_234 {c |}{col 32}{res}{space 2} .0173288{col 44}{space 2} .0072082{col 55}{space 1}    2.40{col 64}{space 3}0.016{col 72}{space 4} .0031933{col 85}{space 3} .0314642
{txt}{space 17}_Iquarter_235 {c |}{col 32}{res}{space 2}-.0593694{col 44}{space 2} .0050351{col 55}{space 1}  -11.79{col 64}{space 3}0.000{col 72}{space 4}-.0692433{col 85}{space 3}-.0494955
{txt}{space 17}_Iquarter_236 {c |}{col 32}{res}{space 2}-.1382248{col 44}{space 2} .0064731{col 55}{space 1}  -21.35{col 64}{space 3}0.000{col 72}{space 4}-.1509188{col 85}{space 3}-.1255309
{txt}{space 17}_Iquarter_237 {c |}{col 32}{res}{space 2} .0459131{col 44}{space 2} .0055735{col 55}{space 1}    8.24{col 64}{space 3}0.000{col 72}{space 4} .0349834{col 85}{space 3} .0568428
{txt}{space 17}_Iquarter_238 {c |}{col 32}{res}{space 2} .0768394{col 44}{space 2} .0056758{col 55}{space 1}   13.54{col 64}{space 3}0.000{col 72}{space 4}  .065709{col 85}{space 3} .0879699
{txt}{space 17}_Iquarter_239 {c |}{col 32}{res}{space 2}        0{col 44}{txt}  (omitted)
{space 20}coupon_num {c |}{col 32}{res}{space 2} .0955127{col 44}{space 2} .0943437{col 55}{space 1}    1.01{col 64}{space 3}0.311{col 72}{space 4}-.0894975{col 85}{space 3} .2805229
{txt}{space 21}roundtrip {c |}{col 32}{res}{space 2} .1705303{col 44}{space 2} .1564251{col 55}{space 1}    1.09{col 64}{space 3}0.276{col 72}{space 4} -.136223{col 85}{space 3} .4772836
{txt}{space 22}transfer {c |}{col 32}{res}{space 2}-1.265234{col 44}{space 2} .1397352{col 55}{space 1}   -9.05{col 64}{space 3}0.000{col 72}{space 4}-1.539258{col 85}{space 3}-.9912102
{txt}{space 20}restricted {c |}{col 32}{res}{space 2}-.0609802{col 44}{space 2} .0346501{col 55}{space 1}   -1.76{col 64}{space 3}0.079{col 72}{space 4}-.1289299{col 85}{space 3} .0069695
{txt}{space 22}business {c |}{col 32}{res}{space 2}-.0302627{col 44}{space 2} .1414707{col 55}{space 1}   -0.21{col 64}{space 3}0.831{col 72}{space 4}-.3076901{col 85}{space 3} .2471648
{txt}{space 25}first {c |}{col 32}{res}{space 2} .0425082{col 44}{space 2} .0463131{col 55}{space 1}    0.92{col 64}{space 3}0.359{col 72}{space 4}-.0483129{col 85}{space 3} .1333292
{txt}{space 11}carrier_total_post4 {c |}{col 32}{res}{space 2} .0005393{col 44}{space 2} .0012966{col 55}{space 1}    0.42{col 64}{space 3}0.678{col 72}{space 4}-.0020035{col 85}{space 3}  .003082
{txt}{space 7}carrier_total_lcc_post4 {c |}{col 32}{res}{space 2} .0046338{col 44}{space 2} .0026858{col 55}{space 1}    1.73{col 64}{space 3}0.085{col 72}{space 4}-.0006332{col 85}{space 3} .0099007
{txt}{space 15}market_WN_post4 {c |}{col 32}{res}{space 2}-.0037344{col 44}{space 2} .0133155{col 55}{space 1}   -0.28{col 64}{space 3}0.779{col 72}{space 4}-.0298464{col 85}{space 3} .0223777
{txt}{space 10}apt_num_origin_post4 {c |}{col 32}{res}{space 2}-.0195799{col 44}{space 2} .0065961{col 55}{space 1}   -2.97{col 64}{space 3}0.003{col 72}{space 4} -.032515{col 85}{space 3}-.0066448
{txt}apt_num_destination_city_post4 {c |}{col 32}{res}{space 2}-.0196442{col 44}{space 2} .0068252{col 55}{space 1}   -2.88{col 64}{space 3}0.004{col 72}{space 4}-.0330286{col 85}{space 3}-.0062599
{txt}{space 25}_cons {c |}{col 32}{res}{space 2} 7.341182{col 44}{space 2} .0737138{col 55}{space 1}   99.59{col 64}{space 3}0.000{col 72}{space 4} 7.196627{col 85}{space 3} 7.485736
{txt}{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                       sigma_u {c |} {res} 1.1786778
                       {txt}sigma_e {c |} {res} .19026817
                           {txt}rho {c |} {res} .97460372{txt}   (fraction of variance due to u_i)
{hline 31}{c BT}{hline 64}

{com}.         eststo any_ols_6
{txt}
{com}.         estadd local mfe "Yes" : any_ols_6
{txt}
{com}.         estadd local qfe "Yes" : any_ols_6
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_6
{txt}
{com}.         estadd local control "Yes" : any_ols_6
{txt}
{com}. 
. * Combine all OLS estimates to one table
. /*
> local dep fare
> local post post4
> local seat_contr restricted business first
> local itineary_contr coupon_num roundtrip transfer
> local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
> */
. 
. esttab any_ols* using "output/tables/`post'`dep'.tex", replace booktabs ///
>         keep(mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr' `seat_contr' `interactions') label b(5) se(5) star(* 0.10 ** 0.05 *** 0.01) noabbrev ///
>         coeflabels(mk_`post' "ASVX market $\times$ Post" lcc_`post' "LCC ratio $\times$ Post" mk_`post'_lcc "ASVX market $\times$ LCC ratio $\times$ Post" coupon_num "Number of coupons" roundtrip "\shortstack{c -(}Roundtrip \\ (dummy){c )-}" transfer "\shortstack{c -(}Transfer \\ (dummy){c )-}" restricted "Restricted seat ratio" business "Business class ratio" first "First class ratio" carrier_total_`post' "Total # of carriers $\times$ Post" carrier_total_lcc_`post' "Total # of LCC carriers $\times$ Post" market_WN_`post' "Southwest dummy $\times$ Post" apt_num_origin_`post' "Number of aiports in origin $\times$ Post" apt_num_destination_city_`post' "Number of aiports in destination $\times$ Post") ///
>         stats(mfe qfe itinearycontrol control N r2, fmt(0 0 0 0 0 a3) ///
>                 labels("Market FE" "Time FE" "Itineary Controls" "Other Controls" "N" "R^2")) ///
>         title("Fixed Effects Regression: `post' `dep'" \label{c -(}`post'`dep'{c )-}) ///
>         mgroups("OLS" "Fixed Effects", pattern(1 0 0 1 0 0) prefix(\multicolumn{c -(}@span{c )-}{c -(}c{c )-}{c -(}) suffix({c )-}) span erepeat(\cmidrule(lr){c -(}@span{c )-})) 
{res}{txt}(output written to {browse  `"output/tables/post4passenger.tex"'})

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
. local dep revenue
{txt}
{com}. local post post4
{txt}
{com}. gen lpassenger=log(passenger)
{txt}
{com}. gen market_ASVX = (market_AS > 0 | market_VX > 0)
{txt}
{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. gen mk_`post' = market_ASVX * `post'
{txt}
{com}. gen lcc_`post' = lcc_ratio_pre * `post'
{txt}(239 missing values generated)

{com}. gen mk_`post'_lcc = mk_`post'*lcc_ratio_pre
{txt}(239 missing values generated)

{com}. 
. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. gen apt_num_origin_`post' = apt_num_origin * `post' 
{txt}
{com}. gen apt_num_destination_city_`post' = apt_num_destination_city * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc, cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,674
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0928                                         {txt}min = {res}         1
{txt}     Between = {res}0.0659                                         {txt}avg = {res}      17.7
{txt}     Overall = {res}0.0000                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}2{txt})      =  {res}  1952.22
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}    lrevenue{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2} .1862566{col 26}{space 2} .0057532{col 37}{space 1}   32.37{col 46}{space 3}0.000{col 54}{space 4} .1749807{col 67}{space 3} .1975326
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2} -.097338{col 26}{space 2} .0151994{col 37}{space 1}   -6.40{col 46}{space 3}0.000{col 54}{space 4}-.1271282{col 67}{space 3}-.0675478
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 7}_cons {c |}{col 14}{res}{space 2}   12.231{col 26}{space 2} .0299539{col 37}{space 1}  408.33{col 46}{space 3}0.000{col 54}{space 4} 12.17229{col 67}{space 3} 12.28971
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 1.3579423
     {txt}sigma_e {c |} {res} .24221342
         {txt}rho {c |} {res} .96916586{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}.         eststo any_ols_1
{txt}
{com}.         estadd local mfe "No" : any_ols_1
{txt}
{com}.         estadd local qfe "No" : any_ols_1
{txt}
{com}.         estadd local itinearycontrol "No" : any_ols_1
{txt}
{com}.         estadd local control "No" : any_ols_1
{txt}
{com}.         
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr', cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,674
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2722                                         {txt}min = {res}         1
{txt}     Between = {res}0.5446                                         {txt}avg = {res}      17.7
{txt}     Overall = {res}0.5185                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}5{txt})      =  {res}  5386.58
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}    lrevenue{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2}  .164086{col 26}{space 2} .0050237{col 37}{space 1}   32.66{col 46}{space 3}0.000{col 54}{space 4} .1542397{col 67}{space 3} .1739322
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2}-.1128921{col 26}{space 2} .0124137{col 37}{space 1}   -9.09{col 46}{space 3}0.000{col 54}{space 4}-.1372225{col 67}{space 3}-.0885617
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 2}coupon_num {c |}{col 14}{res}{space 2}-.3371212{col 26}{space 2}  .080909{col 37}{space 1}   -4.17{col 46}{space 3}0.000{col 54}{space 4}-.4956999{col 67}{space 3}-.1785426
{txt}{space 3}roundtrip {c |}{col 14}{res}{space 2}   1.4264{col 26}{space 2} .1342926{col 37}{space 1}   10.62{col 46}{space 3}0.000{col 54}{space 4} 1.163192{col 67}{space 3} 1.689609
{txt}{space 4}transfer {c |}{col 14}{res}{space 2}-.3516647{col 26}{space 2} .1143941{col 37}{space 1}   -3.07{col 46}{space 3}0.002{col 54}{space 4} -.575873{col 67}{space 3}-.1274564
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 12.47788{col 26}{space 2} .0686834{col 37}{space 1}  181.67{col 46}{space 3}0.000{col 54}{space 4} 12.34326{col 67}{space 3}  12.6125
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .92279869
     {txt}sigma_e {c |} {res} .21688684
         {txt}rho {c |} {res} .94765186{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}.         eststo any_ols_2
{txt}
{com}.         estadd local mfe "No" : any_ols_2
{txt}
{com}.         estadd local qfe "No" : any_ols_2
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_2
{txt}
{com}.         estadd local control "No" : any_ols_2
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr' `seat_contr' `interactions', cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,674
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2722                                         {txt}min = {res}         1
{txt}     Between = {res}0.5582                                         {txt}avg = {res}      17.7
{txt}     Overall = {res}0.5314                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}13{txt})     =  {res}  6410.42
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 96:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 31}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 32}{c |}{col 44}    Robust
{col 1}                      lrevenue{col 32}{c |} Coefficient{col 44}  std. err.{col 56}      z{col 64}   P>|z|{col 72}     [95% con{col 85}f. interval]
{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 22}mk_post4 {c |}{col 32}{res}{space 2} .1090049{col 44}{space 2} .0116267{col 55}{space 1}    9.38{col 64}{space 3}0.000{col 72}{space 4}  .086217{col 85}{space 3} .1317929
{txt}{space 21}lcc_post4 {c |}{col 32}{res}{space 2}-.1297373{col 44}{space 2}  .014685{col 55}{space 1}   -8.83{col 64}{space 3}0.000{col 72}{space 4}-.1585194{col 85}{space 3}-.1009552
{txt}{space 18}mk_post4_lcc {c |}{col 32}{res}{space 2}        0{col 44}{txt}  (omitted)
{space 20}coupon_num {c |}{col 32}{res}{space 2}-.4790744{col 44}{space 2} .0816116{col 55}{space 1}   -5.87{col 64}{space 3}0.000{col 72}{space 4}-.6390303{col 85}{space 3}-.3191186
{txt}{space 21}roundtrip {c |}{col 32}{res}{space 2} 1.694591{col 44}{space 2} .1363154{col 55}{space 1}   12.43{col 64}{space 3}0.000{col 72}{space 4} 1.427418{col 85}{space 3} 1.961765
{txt}{space 22}transfer {c |}{col 32}{res}{space 2}-.2113034{col 44}{space 2} .1165522{col 55}{space 1}   -1.81{col 64}{space 3}0.070{col 72}{space 4}-.4397416{col 85}{space 3} .0171348
{txt}{space 20}restricted {c |}{col 32}{res}{space 2} .0415018{col 44}{space 2} .0225741{col 55}{space 1}    1.84{col 64}{space 3}0.066{col 72}{space 4}-.0027426{col 85}{space 3} .0857463
{txt}{space 22}business {c |}{col 32}{res}{space 2} .3018124{col 44}{space 2} .1272641{col 55}{space 1}    2.37{col 64}{space 3}0.018{col 72}{space 4} .0523794{col 85}{space 3} .5512454
{txt}{space 25}first {c |}{col 32}{res}{space 2}-.0691342{col 44}{space 2} .0383308{col 55}{space 1}   -1.80{col 64}{space 3}0.071{col 72}{space 4}-.1442612{col 85}{space 3} .0059928
{txt}{space 11}carrier_total_post4 {c |}{col 32}{res}{space 2} .0002258{col 44}{space 2} .0009828{col 55}{space 1}    0.23{col 64}{space 3}0.818{col 72}{space 4}-.0017004{col 85}{space 3}  .002152
{txt}{space 7}carrier_total_lcc_post4 {c |}{col 32}{res}{space 2} .0099522{col 44}{space 2} .0021142{col 55}{space 1}    4.71{col 64}{space 3}0.000{col 72}{space 4} .0058084{col 85}{space 3} .0140961
{txt}{space 15}market_WN_post4 {c |}{col 32}{res}{space 2}-.0049545{col 44}{space 2} .0115179{col 55}{space 1}   -0.43{col 64}{space 3}0.667{col 72}{space 4}-.0275291{col 85}{space 3} .0176202
{txt}{space 10}apt_num_origin_post4 {c |}{col 32}{res}{space 2} .0084962{col 44}{space 2} .0050207{col 55}{space 1}    1.69{col 64}{space 3}0.091{col 72}{space 4}-.0013442{col 85}{space 3} .0183365
{txt}apt_num_destination_city_post4 {c |}{col 32}{res}{space 2} .0104095{col 44}{space 2} .0053163{col 55}{space 1}    1.96{col 64}{space 3}0.050{col 72}{space 4}-.0000102{col 85}{space 3} .0208293
{txt}{space 25}_cons {c |}{col 32}{res}{space 2} 12.58354{col 44}{space 2} .0682596{col 55}{space 1}  184.35{col 64}{space 3}0.000{col 72}{space 4} 12.44976{col 85}{space 3} 12.71733
{txt}{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                       sigma_u {c |} {res} .62856678
                       {txt}sigma_e {c |} {res} .21666045
                           {txt}rho {c |} {res} .89380606{txt}   (fraction of variance due to u_i)
{hline 31}{c BT}{hline 64}

{com}.         eststo any_ols_3
{txt}
{com}.         estadd local mfe "No" : any_ols_3
{txt}
{com}.         estadd local qfe "No" : any_ols_3
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_3
{txt}
{com}.         estadd local control "Yes" : any_ols_3
{txt}
{com}.         
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter, fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{p 0 6 2}note: {bf:mk_post4_lcc} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:_Iquarter_239} omitted because of collinearity.{p_end}
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}    39,674
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     2,241

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.3269{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.1530{col 63}{txt}avg{col 67}={col 69}{res}      17.7
{txt}     Overall = {res}0.0015{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}20{txt},{res}2240{txt}){col 67}={col 70}{res}  1421.08
{txt}corr(u_i, Xb) = {res}-0.0668{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 79:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}     lrevenue{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}mk_post4 {c |}{col 15}{res}{space 2}-.1872184{col 27}{space 2} .0091817{col 38}{space 1}  -20.39{col 47}{space 3}0.000{col 55}{space 4} -.205224{col 68}{space 3}-.1692127
{txt}{space 4}lcc_post4 {c |}{col 15}{res}{space 2}-.1096923{col 27}{space 2} .0152014{col 38}{space 1}   -7.22{col 47}{space 3}0.000{col 55}{space 4}-.1395027{col 68}{space 3}-.0798819
{txt}{space 1}mk_post4_lcc {c |}{col 15}{res}{space 2}        0{col 27}{txt}  (omitted)
_Iquarter_221 {c |}{col 15}{res}{space 2}  -.46756{col 27}{space 2} .0067364{col 38}{space 1}  -69.41{col 47}{space 3}0.000{col 55}{space 4}-.4807702{col 68}{space 3}-.4543499
{txt}_Iquarter_222 {c |}{col 15}{res}{space 2}-.4520175{col 27}{space 2} .0096414{col 38}{space 1}  -46.88{col 47}{space 3}0.000{col 55}{space 4}-.4709244{col 68}{space 3}-.4331106
{txt}_Iquarter_223 {c |}{col 15}{res}{space 2}-.5143722{col 27}{space 2} .0060412{col 38}{space 1}  -85.14{col 47}{space 3}0.000{col 55}{space 4}-.5262192{col 68}{space 3}-.5025252
{txt}_Iquarter_224 {c |}{col 15}{res}{space 2}-.6034328{col 27}{space 2} .0047156{col 38}{space 1} -127.96{col 47}{space 3}0.000{col 55}{space 4}-.6126803{col 68}{space 3}-.5941854
{txt}_Iquarter_225 {c |}{col 15}{res}{space 2}-.4225727{col 27}{space 2} .0075169{col 38}{space 1}  -56.22{col 47}{space 3}0.000{col 55}{space 4}-.4373134{col 68}{space 3}-.4078319
{txt}_Iquarter_226 {c |}{col 15}{res}{space 2}-.4010823{col 27}{space 2} .0099025{col 38}{space 1}  -40.50{col 47}{space 3}0.000{col 55}{space 4}-.4205014{col 68}{space 3}-.3816632
{txt}_Iquarter_227 {c |}{col 15}{res}{space 2}-.4520703{col 27}{space 2}  .006701{col 38}{space 1}  -67.46{col 47}{space 3}0.000{col 55}{space 4}-.4652111{col 68}{space 3}-.4389295
{txt}_Iquarter_228 {c |}{col 15}{res}{space 2}-.5235525{col 27}{space 2} .0054393{col 38}{space 1}  -96.25{col 47}{space 3}0.000{col 55}{space 4}-.5342192{col 68}{space 3}-.5128858
{txt}_Iquarter_229 {c |}{col 15}{res}{space 2}-.3182104{col 27}{space 2}  .008108{col 38}{space 1}  -39.25{col 47}{space 3}0.000{col 55}{space 4}-.3341105{col 68}{space 3}-.3023104
{txt}_Iquarter_230 {c |}{col 15}{res}{space 2}-.3412265{col 27}{space 2} .0104545{col 38}{space 1}  -32.64{col 47}{space 3}0.000{col 55}{space 4} -.361728{col 68}{space 3}-.3207249
{txt}_Iquarter_231 {c |}{col 15}{res}{space 2}-.3729021{col 27}{space 2} .0072491{col 38}{space 1}  -51.44{col 47}{space 3}0.000{col 55}{space 4}-.3871177{col 68}{space 3}-.3586865
{txt}_Iquarter_232 {c |}{col 15}{res}{space 2}-.4546559{col 27}{space 2} .0059491{col 38}{space 1}  -76.42{col 47}{space 3}0.000{col 55}{space 4}-.4663222{col 68}{space 3}-.4429895
{txt}_Iquarter_233 {c |}{col 15}{res}{space 2} -.025269{col 27}{space 2} .0053361{col 38}{space 1}   -4.74{col 47}{space 3}0.000{col 55}{space 4}-.0357332{col 68}{space 3}-.0148049
{txt}_Iquarter_234 {c |}{col 15}{res}{space 2}-.0289526{col 27}{space 2} .0071036{col 38}{space 1}   -4.08{col 47}{space 3}0.000{col 55}{space 4}-.0428829{col 68}{space 3}-.0150223
{txt}_Iquarter_235 {c |}{col 15}{res}{space 2}-.0564834{col 27}{space 2} .0038108{col 38}{space 1}  -14.82{col 47}{space 3}0.000{col 55}{space 4}-.0639565{col 68}{space 3}-.0490102
{txt}_Iquarter_236 {c |}{col 15}{res}{space 2}-.1745096{col 27}{space 2} .0057499{col 38}{space 1}  -30.35{col 47}{space 3}0.000{col 55}{space 4}-.1857854{col 68}{space 3}-.1632339
{txt}_Iquarter_237 {c |}{col 15}{res}{space 2} .0469317{col 27}{space 2} .0045746{col 38}{space 1}   10.26{col 47}{space 3}0.000{col 55}{space 4} .0379609{col 68}{space 3} .0559026
{txt}_Iquarter_238 {c |}{col 15}{res}{space 2} .0483425{col 27}{space 2}  .006539{col 38}{space 1}    7.39{col 47}{space 3}0.000{col 55}{space 4} .0355193{col 68}{space 3} .0611657
{txt}_Iquarter_239 {c |}{col 15}{res}{space 2}        0{col 27}{txt}  (omitted)
{space 8}_cons {c |}{col 15}{res}{space 2} 12.85023{col 27}{space 2} .0063932{col 38}{space 1} 2009.97{col 47}{space 3}0.000{col 55}{space 4} 12.83769{col 68}{space 3} 12.86276
{txt}{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
      sigma_u {c |} {res} 1.4281157
      {txt}sigma_e {c |} {res} .20867797
          {txt}rho {c |} {res} .97909495{txt}   (fraction of variance due to u_i)
{hline 14}{c BT}{hline 64}

{com}.         eststo any_ols_4
{txt}
{com}.         estadd local mfe "Yes" : any_ols_4
{txt}
{com}.         estadd local qfe "Yes" : any_ols_4
{txt}
{com}.         estadd local itinearycontrol "No" : any_ols_4
{txt}
{com}.         estadd local control "No" : any_ols_4
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter `itineary_contr', fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{p 0 6 2}note: {bf:mk_post4_lcc} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:_Iquarter_239} omitted because of collinearity.{p_end}
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}    39,674
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     2,241

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.5106{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.5139{col 63}{txt}avg{col 67}={col 69}{res}      17.7
{txt}     Overall = {res}0.5046{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}23{txt},{res}2240{txt}){col 67}={col 70}{res}  1547.95
{txt}corr(u_i, Xb) = {res}0.4900{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 79:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}     lrevenue{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}mk_post4 {c |}{col 15}{res}{space 2}-.2298642{col 27}{space 2} .0085332{col 38}{space 1}  -26.94{col 47}{space 3}0.000{col 55}{space 4} -.246598{col 68}{space 3}-.2131305
{txt}{space 4}lcc_post4 {c |}{col 15}{res}{space 2}-.1259995{col 27}{space 2}    .0125{col 38}{space 1}  -10.08{col 47}{space 3}0.000{col 55}{space 4}-.1505123{col 68}{space 3}-.1014867
{txt}{space 1}mk_post4_lcc {c |}{col 15}{res}{space 2}        0{col 27}{txt}  (omitted)
_Iquarter_221 {c |}{col 15}{res}{space 2}-.4784325{col 27}{space 2} .0059405{col 38}{space 1}  -80.54{col 47}{space 3}0.000{col 55}{space 4} -.490082{col 68}{space 3}-.4667829
{txt}_Iquarter_222 {c |}{col 15}{res}{space 2}-.4472879{col 27}{space 2} .0081477{col 38}{space 1}  -54.90{col 47}{space 3}0.000{col 55}{space 4}-.4632658{col 68}{space 3}  -.43131
{txt}_Iquarter_223 {c |}{col 15}{res}{space 2}-.5305152{col 27}{space 2} .0052995{col 38}{space 1} -100.11{col 47}{space 3}0.000{col 55}{space 4}-.5409076{col 68}{space 3}-.5201227
{txt}_Iquarter_224 {c |}{col 15}{res}{space 2}-.6011985{col 27}{space 2} .0044077{col 38}{space 1} -136.40{col 47}{space 3}0.000{col 55}{space 4} -.609842{col 68}{space 3} -.592555
{txt}_Iquarter_225 {c |}{col 15}{res}{space 2}-.4263699{col 27}{space 2} .0066313{col 38}{space 1}  -64.30{col 47}{space 3}0.000{col 55}{space 4} -.439374{col 68}{space 3}-.4133659
{txt}_Iquarter_226 {c |}{col 15}{res}{space 2}-.3976694{col 27}{space 2} .0087168{col 38}{space 1}  -45.62{col 47}{space 3}0.000{col 55}{space 4}-.4147633{col 68}{space 3}-.3805756
{txt}_Iquarter_227 {c |}{col 15}{res}{space 2}-.4691746{col 27}{space 2} .0060704{col 38}{space 1}  -77.29{col 47}{space 3}0.000{col 55}{space 4}-.4810788{col 68}{space 3}-.4572704
{txt}_Iquarter_228 {c |}{col 15}{res}{space 2}-.5212417{col 27}{space 2} .0055705{col 38}{space 1}  -93.57{col 47}{space 3}0.000{col 55}{space 4}-.5321655{col 68}{space 3}-.5103178
{txt}_Iquarter_229 {c |}{col 15}{res}{space 2}-.3152515{col 27}{space 2} .0075371{col 38}{space 1}  -41.83{col 47}{space 3}0.000{col 55}{space 4} -.330032{col 68}{space 3}-.3004711
{txt}_Iquarter_230 {c |}{col 15}{res}{space 2}-.3338701{col 27}{space 2} .0095182{col 38}{space 1}  -35.08{col 47}{space 3}0.000{col 55}{space 4}-.3525355{col 68}{space 3}-.3152046
{txt}_Iquarter_231 {c |}{col 15}{res}{space 2}-.3934318{col 27}{space 2} .0067409{col 38}{space 1}  -58.36{col 47}{space 3}0.000{col 55}{space 4} -.406651{col 68}{space 3}-.3802127
{txt}_Iquarter_232 {c |}{col 15}{res}{space 2}-.4592385{col 27}{space 2} .0062224{col 38}{space 1}  -73.80{col 47}{space 3}0.000{col 55}{space 4}-.4714409{col 68}{space 3}-.4470362
{txt}_Iquarter_233 {c |}{col 15}{res}{space 2}-.0011858{col 27}{space 2} .0046062{col 38}{space 1}   -0.26{col 47}{space 3}0.797{col 55}{space 4}-.0102188{col 68}{space 3} .0078472
{txt}_Iquarter_234 {c |}{col 15}{res}{space 2} -.000513{col 27}{space 2} .0063062{col 38}{space 1}   -0.08{col 47}{space 3}0.935{col 55}{space 4}-.0128796{col 68}{space 3} .0118535
{txt}_Iquarter_235 {c |}{col 15}{res}{space 2}-.0568871{col 27}{space 2} .0032399{col 38}{space 1}  -17.56{col 47}{space 3}0.000{col 55}{space 4}-.0632406{col 68}{space 3}-.0505337
{txt}_Iquarter_236 {c |}{col 15}{res}{space 2}-.1418984{col 27}{space 2}  .005213{col 38}{space 1}  -27.22{col 47}{space 3}0.000{col 55}{space 4}-.1521211{col 68}{space 3}-.1316757
{txt}_Iquarter_237 {c |}{col 15}{res}{space 2} .0710299{col 27}{space 2} .0042149{col 38}{space 1}   16.85{col 47}{space 3}0.000{col 55}{space 4} .0627643{col 68}{space 3} .0792956
{txt}_Iquarter_238 {c |}{col 15}{res}{space 2} .0728022{col 27}{space 2}  .005807{col 38}{space 1}   12.54{col 47}{space 3}0.000{col 55}{space 4} .0614146{col 68}{space 3} .0841898
{txt}_Iquarter_239 {c |}{col 15}{res}{space 2}        0{col 27}{txt}  (omitted)
{space 3}coupon_num {c |}{col 15}{res}{space 2}-.3280144{col 27}{space 2} .0824583{col 38}{space 1}   -3.98{col 47}{space 3}0.000{col 55}{space 4}-.4897171{col 68}{space 3}-.1663117
{txt}{space 4}roundtrip {c |}{col 15}{res}{space 2} 1.379855{col 27}{space 2} .1409644{col 38}{space 1}    9.79{col 47}{space 3}0.000{col 55}{space 4}  1.10342{col 68}{space 3} 1.656289
{txt}{space 5}transfer {c |}{col 15}{res}{space 2} -.312882{col 27}{space 2} .1175455{col 38}{space 1}   -2.66{col 47}{space 3}0.008{col 55}{space 4}-.5433916{col 68}{space 3}-.0823725
{txt}{space 8}_cons {c |}{col 15}{res}{space 2} 13.03697{col 27}{space 2} .0664076{col 38}{space 1}  196.32{col 47}{space 3}0.000{col 55}{space 4} 12.90675{col 68}{space 3}  13.1672
{txt}{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
      sigma_u {c |} {res} 1.1522878
      {txt}sigma_e {c |} {res} .17794468
          {txt}rho {c |} {res} .97670768{txt}   (fraction of variance due to u_i)
{hline 14}{c BT}{hline 64}

{com}.         eststo any_ols_5
{txt}
{com}.         estadd local mfe "Yes" : any_ols_5
{txt}
{com}.         estadd local qfe "Yes" : any_ols_5
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_5
{txt}
{com}.         estadd local control "No" : any_ols_5
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter `itineary_contr' `seat_contr' `interactions', fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{p 0 6 2}note: {bf:mk_post4_lcc} omitted because of collinearity.{p_end}
{p 0 6 2}note: {bf:_Iquarter_239} omitted because of collinearity.{p_end}
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}    39,674
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     2,241

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.5129{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.5198{col 63}{txt}avg{col 67}={col 69}{res}      17.7
{txt}     Overall = {res}0.5127{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}31{txt},{res}2240{txt}){col 67}={col 70}{res}  1170.79
{txt}corr(u_i, Xb) = {res}0.4982{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 96:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 31}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 32}{c |}{col 44}    Robust
{col 1}                      lrevenue{col 32}{c |} Coefficient{col 44}  std. err.{col 56}      t{col 64}   P>|t|{col 72}     [95% con{col 85}f. interval]
{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 22}mk_post4 {c |}{col 32}{res}{space 2}-.2395845{col 44}{space 2} .0142572{col 55}{space 1}  -16.80{col 64}{space 3}0.000{col 72}{space 4}-.2675433{col 85}{space 3}-.2116257
{txt}{space 21}lcc_post4 {c |}{col 32}{res}{space 2}-.1343241{col 44}{space 2} .0150444{col 55}{space 1}   -8.93{col 64}{space 3}0.000{col 72}{space 4}-.1638265{col 85}{space 3}-.1048217
{txt}{space 18}mk_post4_lcc {c |}{col 32}{res}{space 2}        0{col 44}{txt}  (omitted)
{space 17}_Iquarter_221 {c |}{col 32}{res}{space 2} -.476871{col 44}{space 2}  .005942{col 55}{space 1}  -80.25{col 64}{space 3}0.000{col 72}{space 4}-.4885233{col 85}{space 3}-.4652187
{txt}{space 17}_Iquarter_222 {c |}{col 32}{res}{space 2}-.4433586{col 44}{space 2} .0081756{col 55}{space 1}  -54.23{col 64}{space 3}0.000{col 72}{space 4}-.4593911{col 85}{space 3}-.4273261
{txt}{space 17}_Iquarter_223 {c |}{col 32}{res}{space 2}-.5294066{col 44}{space 2} .0053401{col 55}{space 1}  -99.14{col 64}{space 3}0.000{col 72}{space 4}-.5398787{col 85}{space 3}-.5189346
{txt}{space 17}_Iquarter_224 {c |}{col 32}{res}{space 2}-.5998522{col 44}{space 2} .0044685{col 55}{space 1} -134.24{col 64}{space 3}0.000{col 72}{space 4}-.6086151{col 85}{space 3}-.5910894
{txt}{space 17}_Iquarter_225 {c |}{col 32}{res}{space 2} -.424913{col 44}{space 2} .0066471{col 55}{space 1}  -63.92{col 64}{space 3}0.000{col 72}{space 4}-.4379481{col 85}{space 3}-.4118778
{txt}{space 17}_Iquarter_226 {c |}{col 32}{res}{space 2}-.3945074{col 44}{space 2} .0087581{col 55}{space 1}  -45.05{col 64}{space 3}0.000{col 72}{space 4}-.4116822{col 85}{space 3}-.3773327
{txt}{space 17}_Iquarter_227 {c |}{col 32}{res}{space 2} -.469765{col 44}{space 2} .0060704{col 55}{space 1}  -77.39{col 64}{space 3}0.000{col 72}{space 4}-.4816691{col 85}{space 3}-.4578609
{txt}{space 17}_Iquarter_228 {c |}{col 32}{res}{space 2}-.5297273{col 44}{space 2} .0057946{col 55}{space 1}  -91.42{col 64}{space 3}0.000{col 72}{space 4}-.5410907{col 85}{space 3}-.5183639
{txt}{space 17}_Iquarter_229 {c |}{col 32}{res}{space 2}-.3217583{col 44}{space 2} .0077736{col 55}{space 1}  -41.39{col 64}{space 3}0.000{col 72}{space 4}-.3370024{col 85}{space 3}-.3065142
{txt}{space 17}_Iquarter_230 {c |}{col 32}{res}{space 2}-.3390747{col 44}{space 2} .0097896{col 55}{space 1}  -34.64{col 64}{space 3}0.000{col 72}{space 4}-.3582724{col 85}{space 3}-.3198769
{txt}{space 17}_Iquarter_231 {c |}{col 32}{res}{space 2}-.4044781{col 44}{space 2} .0069912{col 55}{space 1}  -57.86{col 64}{space 3}0.000{col 72}{space 4}-.4181881{col 85}{space 3}-.3907681
{txt}{space 17}_Iquarter_232 {c |}{col 32}{res}{space 2}-.4691939{col 44}{space 2} .0064335{col 55}{space 1}  -72.93{col 64}{space 3}0.000{col 72}{space 4}-.4818101{col 85}{space 3}-.4565777
{txt}{space 17}_Iquarter_233 {c |}{col 32}{res}{space 2}-.0090839{col 44}{space 2} .0050286{col 55}{space 1}   -1.81{col 64}{space 3}0.071{col 72}{space 4}-.0189451{col 85}{space 3} .0007774
{txt}{space 17}_Iquarter_234 {c |}{col 32}{res}{space 2}-.0102491{col 44}{space 2} .0066245{col 55}{space 1}   -1.55{col 64}{space 3}0.122{col 72}{space 4}  -.02324{col 85}{space 3} .0027418
{txt}{space 17}_Iquarter_235 {c |}{col 32}{res}{space 2}-.0721105{col 44}{space 2} .0041612{col 55}{space 1}  -17.33{col 64}{space 3}0.000{col 72}{space 4}-.0802708{col 85}{space 3}-.0639503
{txt}{space 17}_Iquarter_236 {c |}{col 32}{res}{space 2}  -.15788{col 44}{space 2} .0059924{col 55}{space 1}  -26.35{col 64}{space 3}0.000{col 72}{space 4}-.1696313{col 85}{space 3}-.1461286
{txt}{space 17}_Iquarter_237 {c |}{col 32}{res}{space 2} .0525887{col 44}{space 2} .0050432{col 55}{space 1}   10.43{col 64}{space 3}0.000{col 72}{space 4} .0426989{col 85}{space 3} .0624785
{txt}{space 17}_Iquarter_238 {c |}{col 32}{res}{space 2} .0745122{col 44}{space 2} .0057513{col 55}{space 1}   12.96{col 64}{space 3}0.000{col 72}{space 4} .0632338{col 85}{space 3} .0857906
{txt}{space 17}_Iquarter_239 {c |}{col 32}{res}{space 2}        0{col 44}{txt}  (omitted)
{space 20}coupon_num {c |}{col 32}{res}{space 2}-.3289662{col 44}{space 2} .0838917{col 55}{space 1}   -3.92{col 64}{space 3}0.000{col 72}{space 4}-.4934798{col 85}{space 3}-.1644527
{txt}{space 21}roundtrip {c |}{col 32}{res}{space 2} 1.395292{col 44}{space 2} .1432808{col 55}{space 1}    9.74{col 64}{space 3}0.000{col 72}{space 4} 1.114315{col 85}{space 3} 1.676269
{txt}{space 22}transfer {c |}{col 32}{res}{space 2}-.3131221{col 44}{space 2} .1198856{col 55}{space 1}   -2.61{col 64}{space 3}0.009{col 72}{space 4}-.5482206{col 85}{space 3}-.0780235
{txt}{space 20}restricted {c |}{col 32}{res}{space 2} .1517318{col 44}{space 2} .0256118{col 55}{space 1}    5.92{col 64}{space 3}0.000{col 72}{space 4} .1015064{col 85}{space 3} .2019571
{txt}{space 22}business {c |}{col 32}{res}{space 2} .5114658{col 44}{space 2} .1266681{col 55}{space 1}    4.04{col 64}{space 3}0.000{col 72}{space 4} .2630667{col 85}{space 3} .7598649
{txt}{space 25}first {c |}{col 32}{res}{space 2} -.035538{col 44}{space 2} .0398325{col 55}{space 1}   -0.89{col 64}{space 3}0.372{col 72}{space 4}-.1136504{col 85}{space 3} .0425744
{txt}{space 11}carrier_total_post4 {c |}{col 32}{res}{space 2} .0000143{col 44}{space 2} .0009894{col 55}{space 1}    0.01{col 64}{space 3}0.988{col 72}{space 4} -.001926{col 85}{space 3} .0019546
{txt}{space 7}carrier_total_lcc_post4 {c |}{col 32}{res}{space 2} .0044274{col 44}{space 2} .0021099{col 55}{space 1}    2.10{col 64}{space 3}0.036{col 72}{space 4} .0002899{col 85}{space 3}  .008565
{txt}{space 15}market_WN_post4 {c |}{col 32}{res}{space 2}-.0181908{col 44}{space 2} .0112643{col 55}{space 1}   -1.61{col 64}{space 3}0.106{col 72}{space 4}-.0402804{col 85}{space 3} .0038987
{txt}{space 10}apt_num_origin_post4 {c |}{col 32}{res}{space 2} .0050185{col 44}{space 2} .0050533{col 55}{space 1}    0.99{col 64}{space 3}0.321{col 72}{space 4}-.0048912{col 85}{space 3} .0149281
{txt}apt_num_destination_city_post4 {c |}{col 32}{res}{space 2} .0049871{col 44}{space 2} .0053787{col 55}{space 1}    0.93{col 64}{space 3}0.354{col 72}{space 4}-.0055608{col 85}{space 3} .0155349
{txt}{space 25}_cons {c |}{col 32}{res}{space 2} 13.00471{col 44}{space 2} .0675761{col 55}{space 1}  192.45{col 64}{space 3}0.000{col 72}{space 4} 12.87219{col 85}{space 3} 13.13723
{txt}{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                       sigma_u {c |} {res} 1.1498655
                       {txt}sigma_e {c |} {res} .17755251
                           {txt}rho {c |} {res} .97671232{txt}   (fraction of variance due to u_i)
{hline 31}{c BT}{hline 64}

{com}.         eststo any_ols_6
{txt}
{com}.         estadd local mfe "Yes" : any_ols_6
{txt}
{com}.         estadd local qfe "Yes" : any_ols_6
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_6
{txt}
{com}.         estadd local control "Yes" : any_ols_6
{txt}
{com}. 
. * Combine all OLS estimates to one table
. /*
> local dep fare
> local post post4
> local seat_contr restricted business first
> local itineary_contr coupon_num roundtrip transfer
> local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
> */
. 
. esttab any_ols* using "output/tables/`post'`dep'.tex", replace booktabs ///
>         keep(mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr' `seat_contr' `interactions') label b(5) se(5) star(* 0.10 ** 0.05 *** 0.01) noabbrev ///
>         coeflabels(mk_`post' "ASVX market $\times$ Post" lcc_`post' "LCC ratio $\times$ Post" mk_`post'_lcc "ASVX market $\times$ LCC ratio $\times$ Post" coupon_num "Number of coupons" roundtrip "\shortstack{c -(}Roundtrip \\ (dummy){c )-}" transfer "\shortstack{c -(}Transfer \\ (dummy){c )-}" restricted "Restricted seat ratio" business "Business class ratio" first "First class ratio" carrier_total_`post' "Total # of carriers $\times$ Post" carrier_total_lcc_`post' "Total # of LCC carriers $\times$ Post" market_WN_`post' "Southwest dummy $\times$ Post" apt_num_origin_`post' "Number of aiports in origin $\times$ Post" apt_num_destination_city_`post' "Number of aiports in destination $\times$ Post") ///
>         stats(mfe qfe itinearycontrol control N r2, fmt(0 0 0 0 0 a3) ///
>                 labels("Market FE" "Time FE" "Itineary Controls" "Other Controls" "N" "R^2")) ///
>         title("Fixed Effects Regression: `post' `dep'" \label{c -(}`post'`dep'{c )-}) ///
>         mgroups("OLS" "Fixed Effects", pattern(1 0 0 1 0 0) prefix(\multicolumn{c -(}@span{c )-}{c -(}c{c )-}{c -(}) suffix({c )-}) span erepeat(\cmidrule(lr){c -(}@span{c )-})) 
{res}{txt}(output written to {browse  `"output/tables/post4revenue.tex"'})

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
. local dep fare
{txt}
{com}. local post post4
{txt}
{com}. gen lpassenger=log(passenger)
{txt}
{com}. gen market_ASVX = (market_AS > 0 | market_VX > 0)
{txt}
{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. gen mk_`post' = market_ASVX * `post'
{txt}
{com}. gen lcc_`post' = lcc_ratio_pre * `post'
{txt}(239 missing values generated)

{com}. gen mk_`post'_lcc = mk_`post'*lcc_ratio_pre
{txt}(239 missing values generated)

{com}. 
. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. gen apt_num_origin_`post' = apt_num_origin * `post' 
{txt}
{com}. gen apt_num_destination_city_`post' = apt_num_destination_city * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc, cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,674
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,241

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0329                                         {txt}min = {res}         1
{txt}     Between = {res}0.0045                                         {txt}avg = {res}      17.7
{txt}     Overall = {res}0.0064                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}2{txt})      =  {res}   269.02
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}       lfare{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2}-.0380546{col 26}{space 2} .0042458{col 37}{space 1}   -8.96{col 46}{space 3}0.000{col 54}{space 4}-.0463762{col 67}{space 3} -.029733
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2}-.0137188{col 26}{space 2} .0107874{col 37}{space 1}   -1.27{col 46}{space 3}0.203{col 54}{space 4}-.0348618{col 67}{space 3} .0074242
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 7}_cons {c |}{col 14}{res}{space 2}    5.746{col 26}{space 2}  .007406{col 37}{space 1}  775.85{col 46}{space 3}0.000{col 54}{space 4} 5.731484{col 67}{space 3} 5.760515
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .27754095
     {txt}sigma_e {c |} {res} .11308135
         {txt}rho {c |} {res} .85762737{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. 
{txt}end of do-file

{com}. reg lfare mk_post4_lcc, cluster(market_id)

{txt}Linear regression                               Number of obs     = {res}    39,674
                                                {txt}F(1, 2240)        =  {res}   793.88
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.0758
                                                {txt}Root MSE          =    {res} .32983

{txt}{ralign 78:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}       lfare{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
mk_post4_lcc {c |}{col 14}{res}{space 2}-.4531682{col 26}{space 2} .0160835{col 37}{space 1}  -28.18{col 46}{space 3}0.000{col 54}{space 4}-.4847083{col 67}{space 3} -.421628
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 5.768734{col 26}{space 2} .0073396{col 37}{space 1}  785.97{col 46}{space 3}0.000{col 54}{space 4} 5.754341{col 67}{space 3} 5.783127
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. reg lfare mk_post4 lcc_post4 mk_post4_lcc, cluster(market_id)
{txt}{p 0 6 2}note: {bf:mk_post4_lcc} omitted because of collinearity.{p_end}

Linear regression                               Number of obs     = {res}    39,674
                                                {txt}F(2, 2240)        =  {res}   451.16
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.1234
                                                {txt}Root MSE          =    {res} .32124

{txt}{ralign 78:(Std. err. adjusted for {res:2,241} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}       lfare{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2} .2238444{col 26}{space 2} .0100931{col 37}{space 1}   22.18{col 46}{space 3}0.000{col 54}{space 4} .2040517{col 67}{space 3} .2436372
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2}-.8238848{col 26}{space 2} .0280863{col 37}{space 1}  -29.33{col 46}{space 3}0.000{col 54}{space 4}-.8789628{col 67}{space 3}-.7688069
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 7}_cons {c |}{col 14}{res}{space 2} 5.729545{col 26}{space 2} .0071089{col 37}{space 1}  805.97{col 46}{space 3}0.000{col 54}{space 4} 5.715604{col 67}{space 3} 5.743486
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
. local dep fare
{txt}
{com}. local post post4
{txt}
{com}. gen lpassenger=log(passenger)
{txt}
{com}. gen market_ASVX = (market_AS > 0 | market_VX > 0)
{txt}
{com}. qui bysort market_id (lcc_ratio): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. gen mk_`post' = market_ASVX * `post'
{txt}
{com}. gen lcc_`post' = lcc_ratio * `post'
{txt}
{com}. gen mk_`post'_lcc = mk_`post'*lcc_ratio
{txt}
{com}. 
. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. gen apt_num_origin_`post' = apt_num_origin * `post' 
{txt}
{com}. gen apt_num_destination_city_`post' = apt_num_destination_city * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc, cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,913
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,348

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0407                                         {txt}min = {res}         1
{txt}     Between = {res}0.2452                                         {txt}avg = {res}      17.0
{txt}     Overall = {res}0.0633                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}2{txt})      =  {res}   300.91
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:2,348} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}       lfare{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2}-.0123187{col 26}{space 2} .0038157{col 37}{space 1}   -3.23{col 46}{space 3}0.001{col 54}{space 4}-.0197973{col 67}{space 3}-.0048401
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2}-.0997937{col 26}{space 2} .0111971{col 37}{space 1}   -8.91{col 46}{space 3}0.000{col 54}{space 4}-.1217396{col 67}{space 3}-.0778477
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 7}_cons {c |}{col 14}{res}{space 2} 5.748409{col 26}{space 2} .0072811{col 37}{space 1}  789.50{col 46}{space 3}0.000{col 54}{space 4} 5.734138{col 67}{space 3} 5.762679
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .28460036
     {txt}sigma_e {c |} {res} .11258457
         {txt}rho {c |} {res} .86468531{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
. local dep fare
{txt}
{com}. local post post4
{txt}
{com}. gen lpassenger=log(passenger)
{txt}
{com}. gen market_ASVX = (market_AS > 0 | market_VX > 0)
{txt}
{com}. *qui bysort market_id (lcc_ratio): replace lcc_ratio=lcc_ratio[1] if post4 == 1
. gen mk_`post' = market_ASVX * `post'
{txt}
{com}. gen lcc_`post' = lcc_ratio * `post'
{txt}
{com}. gen mk_`post'_lcc = mk_`post'*lcc_ratio
{txt}
{com}. 
. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. gen apt_num_origin_`post' = apt_num_origin * `post' 
{txt}
{com}. gen apt_num_destination_city_`post' = apt_num_destination_city * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc, cluster(market_id)
{txt}note: {bf:mk_post4_lcc} omitted because of collinearity.
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}    39,913
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     2,348

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0407                                         {txt}min = {res}         1
{txt}     Between = {res}0.2452                                         {txt}avg = {res}      17.0
{txt}     Overall = {res}0.0633                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}2{txt})      =  {res}   300.91
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:2,348} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}       lfare{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2}-.0123187{col 26}{space 2} .0038157{col 37}{space 1}   -3.23{col 46}{space 3}0.001{col 54}{space 4}-.0197973{col 67}{space 3}-.0048401
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2}-.0997937{col 26}{space 2} .0111971{col 37}{space 1}   -8.91{col 46}{space 3}0.000{col 54}{space 4}-.1217396{col 67}{space 3}-.0778477
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 7}_cons {c |}{col 14}{res}{space 2} 5.748409{col 26}{space 2} .0072811{col 37}{space 1}  789.50{col 46}{space 3}0.000{col 54}{space 4} 5.734138{col 67}{space 3} 5.762679
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .28460036
     {txt}sigma_e {c |} {res} .11258457
         {txt}rho {c |} {res} .86468531{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}. 
{txt}end of do-file

{com}. br

. order mk_post4 lcc_post4 mk_post4_lcc, after(market_id)

. reg lfare lcc_post4 mk_post4_lcc, cluster(market_id)
{txt}{p 0 6 2}note: {bf:mk_post4_lcc} omitted because of collinearity.{p_end}

Linear regression                               Number of obs     = {res}    39,913
                                                {txt}F(1, 2347)        =  {res}   920.55
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.0864
                                                {txt}Root MSE          =    {res} .32828

{txt}{ralign 78:(Std. err. adjusted for {res:2,348} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}       lfare{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      t{col 46}   P>|t|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 3}lcc_post4 {c |}{col 14}{res}{space 2}-.4947988{col 26}{space 2} .0163082{col 37}{space 1}  -30.34{col 46}{space 3}0.000{col 54}{space 4}-.5267787{col 67}{space 3}-.4628188
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}        0{col 26}{txt}  (omitted)
{space 7}_cons {c |}{col 14}{res}{space 2} 5.771181{col 26}{space 2} .0072566{col 37}{space 1}  795.30{col 46}{space 3}0.000{col 54}{space 4} 5.756951{col 67}{space 3} 5.785411
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. use "input/dta_clean/${c -(}dataset{c )-}_agg2_city", clear

. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. collapse (rawsum) revenue passenger passenger_lcc1-passenger_lcc4 passenger_ASVX1-passenger_ASVX4 (mean) fareI coupon_num roundtrip transfer restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 apt_num_origin_city apt_num_destination_city total_passenger_lcc1-total_passenger_lcc4 [fw = passenger], by(quarter market_id_city origin_city destination_city)
{res}{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. keep if passenger >= 90
{txt}(813,512 observations deleted)

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. rename (fareI origin_city destination_city market_id_city) (fare origin destination market_id)
{res}{txt}
{com}. gen lfare = log(fare), after(fare)
{txt}
{com}. gen lrevenue = log(revenue), after(revenue)
{txt}
{com}. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. 
. * Compute weighted_average
. gen coupon_total = coupon_total1 if coupon_total2 == .
{txt}(138,411 missing values generated)

{com}. replace coupon_total = coupon_total1+coupon_total2 if coupon_total3 == . & coupon_total2 != .
{txt}(11,821 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3 if coupon_total4 == . & coupon_total3 != .
{txt}(0 real changes made)

{com}. replace coupon_total = coupon_total1+coupon_total2+coupon_total3+coupon_total4 if coupon_total4 != .
{txt}(126,590 real changes made)

{com}. 
. local weighted total_passenger_lcc passenger_lcc passenger_ASVX restricted business first
{txt}
{com}. foreach m of local weighted{c -(}
{txt}  2{com}.         gen `m' = (`m'1*coupon_total1)/coupon_total if coupon_total2==., before(`m'1)
{txt}  3{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace `m' = (`m'1*coupon_total1+`m'2*coupon_total2+`m'3*coupon_total3+`m'4*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,586 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,586 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,586 real changes made)

{com}. 
. local airlines AS VX WN
{txt}
{com}. foreach m of local airlines{c -(}
{txt}  2{com}.         gen market_`m' = (market1_`m'*coupon_total1)/coupon_total if coupon_total2==., before(market1_`m')
{txt}  3{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace market_`m' = (market1_`m'*coupon_total1+market2_`m'*coupon_total2+market3_`m'*coupon_total3+market4_`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)

{com}. 
. local binary _total _total_lcc
{txt}
{com}. foreach m of local binary{c -(}
{txt}  2{com}.         gen carrier`m' = (carrier1`m'*coupon_total1)/coupon_total if coupon_total2==., before(carrier1`m')
{txt}  3{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2)/coupon_total if coupon_total3 == . & coupon_total2 != .
{txt}  4{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3)/coupon_total if coupon_total4 == . & coupon_total3 != .
{txt}  5{com}.         replace carrier`m' = (carrier1`m'*coupon_total1+carrier2`m'*coupon_total2+carrier3`m'*coupon_total3+carrier4`m'*coupon_total4)/coupon_total if coupon_total4 != .
{txt}  6{com}. {c )-}
{txt}(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)
(138,411 missing values generated)
(11,821 real changes made)
(0 real changes made)
(126,590 real changes made)

{com}. 
. * Quarter dummy 
. forvalues n=1/4{c -(}
{txt}  2{com}.         gen quarter`n' = inlist(quarter, tq(2015q`n'), tq(2016q`n'), tq(2017q`n'), tq(2018q`n'), tq(2019q`n'))
{txt}  3{com}. {c )-}
{txt}
{com}. drop quarter1
{txt}
{com}. 
. * Post dummy
. gen post1 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4))
{txt}
{com}. gen post2 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2))
{txt}
{com}. gen post3 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4))
{txt}
{com}. gen post4 = !inlist(quarter, tq(2015q1), tq(2015q2), tq(2015q3), tq(2015q4), tq(2016q1), tq(2016q2), tq(2016q3), tq(2016q4), tq(2017q1), tq(2017q2), tq(2017q3), tq(2017q4), tq(2018q1))
{txt}
{com}. 
. * lcc-market share in each market
. gen lcc_ratio = passenger_lcc / passenger
{txt}
{com}. gegen long lcc_ratio_pre1 = total(passenger_lcc) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gegen long lcc_ratio_pre2 = total(passenger) if post4 == 0, by(market_id)
{res}{txt}{res}{txt}
{com}. gen lcc_ratio_pre = lcc_ratio_pre1 / lcc_ratio_pre2
{txt}(54,423 missing values generated)

{com}. 
. drop passenger_lcc1-passenger_lcc4 total_passenger_lcc1-total_passenger_lcc4 passenger_ASVX1-passenger_ASVX4 restricted1-restricted4 business1-business4 first1-first4 carrier1_total-carrier4_total carrier1_total_lcc-carrier4_total_lcc market1_AS-market4_AS market1_VX-market4_VX market1_WN-market4_WN coupon_total1-coupon_total4 lcc_ratio_pre1 lcc_ratio_pre2
{txt}
{com}. 
. * Merge with lookup tables
. /*
> save "dta_clean/${c -(}dataset{c )-}_agg3_city", replace
> import delimited "lookup/airports_codes.txt", clear 
> drop worldareacode
> rename airportcode origin
> drop if inlist(origin, "SFF", "BST", "OLD", "CLV", "DTR")
> drop if inlist(origin, "HST", "LSA", "MAM", "TMP", "CNC")
> set obs `=_N+13'
> replace origin = "WDC" if _n == _N
> replace cityname = "Washington D.C., D.C., USA" if _n == _N
> replace origin = "SFF" if _n == _N-1
> replace cityname = "San Francisco, California, USA" if _n == _N-1
> replace origin = "BST" if _n == _N-2
> replace cityname = "Boston, Massachusettes, USA" if _n == _N-2
> replace origin = "OLD" if _n == _N-3
> replace cityname = "Chicago, Illinois, USA" if _n == _N-3
> replace origin = "CNC" if _n == _N-4
> replace cityname = "Cincinnati, Kentucky, USA" if _n == _N-4
> replace origin = "CLV" if _n == _N-5
> replace cityname = "Cleveland, Ohio, USA" if _n == _N-5
> replace origin = "DFO" if _n == _N-6
> replace cityname = "Dallas-Fort Worth, Texas, USA" if _n == _N-6
> replace origin = "DTR" if _n == _N-7
> replace cityname = "Detroit, Michigan, USA" if _n == _N-7
> replace origin = "HST" if _n == _N-8
> replace cityname = "Houston, Texas, USA" if _n == _N-8
> replace origin = "LSA" if _n == _N-9
> replace cityname = "Los Angels, California, USA" if _n == _N-9
> replace origin = "MAM" if _n == _N-10
> replace cityname = "Miami, Florida, USA" if _n == _N-10
> replace origin = "NYT" if _n == _N-11
> replace cityname = "New York, New York, USA" if _n == _N-11
> replace origin = "TMP" if _n == _N-12
> replace cityname = "Tampa, Florida, USA" if _n == _N-12
> save "lookup/airport_code_origin_city", replace
> rename origin destination
> save "lookup/airport_code_destination_city", replace
> 
> use "dta_clean/${c -(}dataset{c )-}_agg3_city", clear
> */
. local citytype origin destination
{txt}
{com}. 
. foreach m of local citytype {c -(}
{txt}  2{com}.         merge m:1 `m' using "lookup/airport_code_`m'_city"
{txt}  3{com}.         drop if _merge == 2
{txt}  4{com}.         replace cityname = "Phoenix, Arizona, USA" if `m' == "AZA"
{txt}  5{com}.         replace cityname = "Branson, Missouri, USA" if `m' == "BKG"
{txt}  6{com}.         replace cityname = "Bay County, Florida, USA" if `m' == "ECP"
{txt}  7{com}.         replace cityname = "Concord, North Carolina, USA" if inlist(`m', "JQF", "USA")
{txt}  8{com}.         drop if inlist(`m', "DSS", "ICN", "PVG") 
{txt}  9{com}.         drop _merge
{txt} 10{com}.         rename cityname `m'_name
{txt} 11{com}.         split `m'_name, parse(,)
{txt} 12{com}.         replace `m'_name3 = strtrim(`m'_name3)
{txt} 13{com}.         replace `m'_name4 = strtrim(`m'_name4)
{txt} 14{com}.         drop if `m'_name3 != "USA" & `m'_name4 != "USA"
{txt} 15{com}.         drop `m'_name1-`m'_name4
{txt} 16{com}. {c )-}
{res}{err}{p 0 4 2}
file {bf:{err}lookup/airport_code_origin_city.dta}
not found
{p_end}
{txt}{search r(601), local:r(601);}

end of do-file

{search r(601), local:r(601);}

{com}. cd input
{res}/Users/tsukik/Downloads/airline_tatsuki/input

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. foreach m of local citytype {c -(}
{txt}  2{com}.         merge m:1 `m' using "lookup/airport_code_`m'_city"
{txt}  3{com}.         drop if _merge == 2
{txt}  4{com}.         replace cityname = "Phoenix, Arizona, USA" if `m' == "AZA"
{txt}  5{com}.         replace cityname = "Branson, Missouri, USA" if `m' == "BKG"
{txt}  6{com}.         replace cityname = "Bay County, Florida, USA" if `m' == "ECP"
{txt}  7{com}.         replace cityname = "Concord, North Carolina, USA" if inlist(`m', "JQF", "USA")
{txt}  8{com}.         drop if inlist(`m', "DSS", "ICN", "PVG") 
{txt}  9{com}.         drop _merge
{txt} 10{com}.         rename cityname `m'_name
{txt} 11{com}.         split `m'_name, parse(,)
{txt} 12{com}.         replace `m'_name3 = strtrim(`m'_name3)
{txt} 13{com}.         replace `m'_name4 = strtrim(`m'_name4)
{txt} 14{com}.         drop if `m'_name3 != "USA" & `m'_name4 != "USA"
{txt} 15{com}.         drop `m'_name1-`m'_name4
{txt} 16{com}. {c )-}
{txt}
{com}. 
. tsset market_id quarter, quarterly
{res}
{col 1}{txt:Panel variable: }{res:market_id}{txt: (unbalanced)}
{p 1 16 2}{txt:Time variable: }{res:quarter}{txt:, }{res:{bind:2015q1}}{txt: to }{res:{bind:2019q4}}{txt:, but with gaps}{p_end}
{txt}{col 10}Delta: {res}1 quarter
{txt}
{com}. save "dta_clean/${c -(}dataset{c )-}_agg3_city", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_agg3_city.dta{rm}
saved
{p_end}

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{err}{p 0 4 2}
file {bf:{err}input/dta_clean/merged_agg3_city.dta}
not found
{p_end}
{txt}{search r(601), local:r(601);}

end of do-file

{search r(601), local:r(601);}

{com}. cd ..
{res}/Users/tsukik/Downloads/airline_tatsuki

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. 
. 
. ***********************************
. ***  7-2. OLS/FE City-Pair All  ***
. ***********************************
. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
. local dep fare
{txt}
{com}. local post post4
{txt}
{com}. gen lpassenger=log(passenger)
{txt}
{com}. gen market_ASVX = (market_AS > 0 | market_VX > 0)
{txt}
{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. gen mk_`post' = market_ASVX * `post'
{txt}
{com}. gen lcc_`post' = lcc_ratio_pre * `post'
{txt}(5,283 missing values generated)

{com}. gen mk_`post'_lcc = mk_`post'*lcc_ratio_pre
{txt}(5,283 missing values generated)

{com}. 
. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. gen apt_num_origin_`post' = apt_num_origin * `post' 
{txt}
{com}. gen apt_num_destination_city_`post' = apt_num_destination_city * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc, cluster(market_id)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}   133,152
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     9,145

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0280                                         {txt}min = {res}         1
{txt}     Between = {res}0.2585                                         {txt}avg = {res}      14.6
{txt}     Overall = {res}0.0836                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}3{txt})      =  {res}   979.80
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}       lfare{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2}-.0397878{col 26}{space 2} .0034529{col 37}{space 1}  -11.52{col 46}{space 3}0.000{col 54}{space 4}-.0465553{col 67}{space 3}-.0330204
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2}-.1182049{col 26}{space 2} .0049227{col 37}{space 1}  -24.01{col 46}{space 3}0.000{col 54}{space 4}-.1278532{col 67}{space 3}-.1085565
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2} .1043129{col 26}{space 2} .0109919{col 37}{space 1}    9.49{col 46}{space 3}0.000{col 54}{space 4} .0827693{col 67}{space 3} .1258566
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 5.797038{col 26}{space 2}  .003959{col 37}{space 1} 1464.25{col 46}{space 3}0.000{col 54}{space 4} 5.789278{col 67}{space 3} 5.804797
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .29187142
     {txt}sigma_e {c |} {res} .12424397
         {txt}rho {c |} {res}  .8465939{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}.         eststo any_ols_1
{txt}
{com}.         estadd local mfe "No" : any_ols_1
{txt}
{com}.         estadd local qfe "No" : any_ols_1
{txt}
{com}.         estadd local itinearycontrol "No" : any_ols_1
{txt}
{com}.         estadd local control "No" : any_ols_1
{txt}
{com}.         
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr', cluster(market_id)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}   133,152
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     9,145

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2811                                         {txt}min = {res}         1
{txt}     Between = {res}0.3752                                         {txt}avg = {res}      14.6
{txt}     Overall = {res}0.3413                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}6{txt})      =  {res}  8805.81
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}       lfare{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2} .0146789{col 26}{space 2} .0031881{col 37}{space 1}    4.60{col 46}{space 3}0.000{col 54}{space 4} .0084304{col 67}{space 3} .0209274
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2}-.0746627{col 26}{space 2} .0040182{col 37}{space 1}  -18.58{col 46}{space 3}0.000{col 54}{space 4}-.0825382{col 67}{space 3}-.0667872
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2} .0231913{col 26}{space 2} .0097501{col 37}{space 1}    2.38{col 46}{space 3}0.017{col 54}{space 4} .0040815{col 67}{space 3} .0423012
{txt}{space 2}coupon_num {c |}{col 14}{res}{space 2}-.0645621{col 26}{space 2}  .021608{col 37}{space 1}   -2.99{col 46}{space 3}0.003{col 54}{space 4} -.106913{col 67}{space 3}-.0222112
{txt}{space 3}roundtrip {c |}{col 14}{res}{space 2} .7899125{col 26}{space 2} .0382968{col 37}{space 1}   20.63{col 46}{space 3}0.000{col 54}{space 4} .7148521{col 67}{space 3} .8649728
{txt}{space 4}transfer {c |}{col 14}{res}{space 2} .6238223{col 26}{space 2} .0342625{col 37}{space 1}   18.21{col 46}{space 3}0.000{col 54}{space 4}  .556669{col 67}{space 3} .6909757
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 5.147227{col 26}{space 2}  .016145{col 37}{space 1}  318.81{col 46}{space 3}0.000{col 54}{space 4} 5.115583{col 67}{space 3}  5.17887
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .24853665
     {txt}sigma_e {c |} {res}  .1068349
         {txt}rho {c |} {res} .84404146{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}.         eststo any_ols_2
{txt}
{com}.         estadd local mfe "No" : any_ols_2
{txt}
{com}.         estadd local qfe "No" : any_ols_2
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_2
{txt}
{com}.         estadd local control "No" : any_ols_2
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr' `seat_contr' `interactions', cluster(market_id)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}   133,148
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     9,145

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2974                                         {txt}min = {res}         1
{txt}     Between = {res}0.4131                                         {txt}avg = {res}      14.6
{txt}     Overall = {res}0.3771                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}14{txt})     =  {res} 10515.25
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 96:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 31}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 32}{c |}{col 44}    Robust
{col 1}                         lfare{col 32}{c |} Coefficient{col 44}  std. err.{col 56}      z{col 64}   P>|z|{col 72}     [95% con{col 85}f. interval]
{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 22}mk_post4 {c |}{col 32}{res}{space 2} .0141078{col 44}{space 2} .0038265{col 55}{space 1}    3.69{col 64}{space 3}0.000{col 72}{space 4}  .006608{col 85}{space 3} .0216077
{txt}{space 21}lcc_post4 {c |}{col 32}{res}{space 2}-.0874215{col 44}{space 2} .0056099{col 55}{space 1}  -15.58{col 64}{space 3}0.000{col 72}{space 4}-.0984166{col 85}{space 3}-.0764263
{txt}{space 18}mk_post4_lcc {c |}{col 32}{res}{space 2} .0438183{col 44}{space 2} .0101154{col 55}{space 1}    4.33{col 64}{space 3}0.000{col 72}{space 4} .0239925{col 85}{space 3} .0636441
{txt}{space 20}coupon_num {c |}{col 32}{res}{space 2}-.0471764{col 44}{space 2} .0208795{col 55}{space 1}   -2.26{col 64}{space 3}0.024{col 72}{space 4}-.0880995{col 85}{space 3}-.0062533
{txt}{space 21}roundtrip {c |}{col 32}{res}{space 2} .7878523{col 44}{space 2} .0371415{col 55}{space 1}   21.21{col 64}{space 3}0.000{col 72}{space 4} .7150564{col 85}{space 3} .8606483
{txt}{space 22}transfer {c |}{col 32}{res}{space 2} .5977018{col 44}{space 2} .0330925{col 55}{space 1}   18.06{col 64}{space 3}0.000{col 72}{space 4} .5328417{col 85}{space 3} .6625619
{txt}{space 20}restricted {c |}{col 32}{res}{space 2} .1688162{col 44}{space 2} .0084518{col 55}{space 1}   19.97{col 64}{space 3}0.000{col 72}{space 4}  .152251{col 85}{space 3} .1853813
{txt}{space 22}business {c |}{col 32}{res}{space 2} .8744257{col 44}{space 2} .0459933{col 55}{space 1}   19.01{col 64}{space 3}0.000{col 72}{space 4} .7842805{col 85}{space 3} .9645709
{txt}{space 25}first {c |}{col 32}{res}{space 2}-.0585399{col 44}{space 2} .0081138{col 55}{space 1}   -7.21{col 64}{space 3}0.000{col 72}{space 4}-.0744426{col 85}{space 3}-.0426371
{txt}{space 11}carrier_total_post4 {c |}{col 32}{res}{space 2}-.0020663{col 44}{space 2} .0003253{col 55}{space 1}   -6.35{col 64}{space 3}0.000{col 72}{space 4}-.0027039{col 85}{space 3}-.0014287
{txt}{space 7}carrier_total_lcc_post4 {c |}{col 32}{res}{space 2}-.0043283{col 44}{space 2} .0011446{col 55}{space 1}   -3.78{col 64}{space 3}0.000{col 72}{space 4}-.0065717{col 85}{space 3}-.0020848
{txt}{space 15}market_WN_post4 {c |}{col 32}{res}{space 2} .0029038{col 44}{space 2} .0037155{col 55}{space 1}    0.78{col 64}{space 3}0.434{col 72}{space 4}-.0043785{col 85}{space 3}  .010186
{txt}{space 10}apt_num_origin_post4 {c |}{col 32}{res}{space 2} .0097598{col 44}{space 2} .0019996{col 55}{space 1}    4.88{col 64}{space 3}0.000{col 72}{space 4} .0058406{col 85}{space 3}  .013679
{txt}apt_num_destination_city_post4 {c |}{col 32}{res}{space 2} .0090351{col 44}{space 2} .0018996{col 55}{space 1}    4.76{col 64}{space 3}0.000{col 72}{space 4} .0053119{col 85}{space 3} .0127583
{txt}{space 25}_cons {c |}{col 32}{res}{space 2} 5.088901{col 44}{space 2} .0156302{col 55}{space 1}  325.58{col 64}{space 3}0.000{col 72}{space 4} 5.058267{col 85}{space 3} 5.119536
{txt}{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                       sigma_u {c |} {res} .21841565
                       {txt}sigma_e {c |} {res} .10558123
                           {txt}rho {c |} {res} .81058848{txt}   (fraction of variance due to u_i)
{hline 31}{c BT}{hline 64}

{com}.         eststo any_ols_3
{txt}
{com}.         estadd local mfe "No" : any_ols_3
{txt}
{com}.         estadd local qfe "No" : any_ols_3
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_3
{txt}
{com}.         estadd local control "Yes" : any_ols_3
{txt}
{com}.         
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter, fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}   133,152
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     9,145

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.1075{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.0286{col 63}{txt}avg{col 67}={col 69}{res}      14.6
{txt}     Overall = {res}0.0146{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}22{txt},{res}9144{txt}){col 67}={col 70}{res}   338.40
{txt}corr(u_i, Xb) = {res}0.0133{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 79:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}        lfare{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}mk_post4 {c |}{col 15}{res}{space 2} .0111716{col 27}{space 2} .0044754{col 38}{space 1}    2.50{col 47}{space 3}0.013{col 55}{space 4} .0023988{col 68}{space 3} .0199444
{txt}{space 4}lcc_post4 {c |}{col 15}{res}{space 2}-.0080663{col 27}{space 2} .0066045{col 38}{space 1}   -1.22{col 47}{space 3}0.222{col 55}{space 4}-.0210126{col 68}{space 3}   .00488
{txt}{space 1}mk_post4_lcc {c |}{col 15}{res}{space 2} .0108092{col 27}{space 2} .0119192{col 38}{space 1}    0.91{col 47}{space 3}0.364{col 55}{space 4}-.0125551{col 68}{space 3} .0341736
{txt}_Iquarter_221 {c |}{col 15}{res}{space 2}-.0220381{col 27}{space 2} .0014773{col 38}{space 1}  -14.92{col 47}{space 3}0.000{col 55}{space 4} -.024934{col 68}{space 3}-.0191422
{txt}_Iquarter_222 {c |}{col 15}{res}{space 2}-.0525654{col 27}{space 2} .0017555{col 38}{space 1}  -29.94{col 47}{space 3}0.000{col 55}{space 4}-.0560066{col 68}{space 3}-.0491243
{txt}_Iquarter_223 {c |}{col 15}{res}{space 2}-.0597501{col 27}{space 2} .0016434{col 38}{space 1}  -36.36{col 47}{space 3}0.000{col 55}{space 4}-.0629716{col 68}{space 3}-.0565286
{txt}_Iquarter_224 {c |}{col 15}{res}{space 2}-.0507029{col 27}{space 2} .0017665{col 38}{space 1}  -28.70{col 47}{space 3}0.000{col 55}{space 4}-.0541655{col 68}{space 3}-.0472402
{txt}_Iquarter_225 {c |}{col 15}{res}{space 2}-.0849663{col 27}{space 2} .0019643{col 38}{space 1}  -43.26{col 47}{space 3}0.000{col 55}{space 4}-.0888167{col 68}{space 3}-.0811159
{txt}_Iquarter_226 {c |}{col 15}{res}{space 2}-.1103472{col 27}{space 2} .0021233{col 38}{space 1}  -51.97{col 47}{space 3}0.000{col 55}{space 4}-.1145094{col 68}{space 3} -.106185
{txt}_Iquarter_227 {c |}{col 15}{res}{space 2}-.0960186{col 27}{space 2} .0019873{col 38}{space 1}  -48.32{col 47}{space 3}0.000{col 55}{space 4}-.0999141{col 68}{space 3} -.092123
{txt}_Iquarter_228 {c |}{col 15}{res}{space 2}-.0788011{col 27}{space 2}  .002073{col 38}{space 1}  -38.01{col 47}{space 3}0.000{col 55}{space 4}-.0828646{col 68}{space 3}-.0747376
{txt}_Iquarter_229 {c |}{col 15}{res}{space 2}-.0751576{col 27}{space 2} .0021437{col 38}{space 1}  -35.06{col 47}{space 3}0.000{col 55}{space 4}-.0793597{col 68}{space 3}-.0709555
{txt}_Iquarter_230 {c |}{col 15}{res}{space 2}-.1348625{col 27}{space 2} .0024196{col 38}{space 1}  -55.74{col 47}{space 3}0.000{col 55}{space 4}-.1396055{col 68}{space 3}-.1301196
{txt}_Iquarter_231 {c |}{col 15}{res}{space 2}-.1110053{col 27}{space 2} .0022657{col 38}{space 1}  -48.99{col 47}{space 3}0.000{col 55}{space 4}-.1154466{col 68}{space 3} -.106564
{txt}_Iquarter_232 {c |}{col 15}{res}{space 2}-.1033708{col 27}{space 2} .0023287{col 38}{space 1}  -44.39{col 47}{space 3}0.000{col 55}{space 4}-.1079356{col 68}{space 3} -.098806
{txt}_Iquarter_233 {c |}{col 15}{res}{space 2}-.1178866{col 27}{space 2} .0032848{col 38}{space 1}  -35.89{col 47}{space 3}0.000{col 55}{space 4}-.1243255{col 68}{space 3}-.1114476
{txt}_Iquarter_234 {c |}{col 15}{res}{space 2}-.1546806{col 27}{space 2} .0034401{col 38}{space 1}  -44.96{col 47}{space 3}0.000{col 55}{space 4}-.1614241{col 68}{space 3}-.1479372
{txt}_Iquarter_235 {c |}{col 15}{res}{space 2}-.1179592{col 27}{space 2} .0032726{col 38}{space 1}  -36.04{col 47}{space 3}0.000{col 55}{space 4}-.1243743{col 68}{space 3}-.1115442
{txt}_Iquarter_236 {c |}{col 15}{res}{space 2}-.1311534{col 27}{space 2} .0033214{col 38}{space 1}  -39.49{col 47}{space 3}0.000{col 55}{space 4}-.1376641{col 68}{space 3}-.1246426
{txt}_Iquarter_237 {c |}{col 15}{res}{space 2} -.117977{col 27}{space 2}  .003378{col 38}{space 1}  -34.93{col 47}{space 3}0.000{col 55}{space 4}-.1245987{col 68}{space 3}-.1113554
{txt}_Iquarter_238 {c |}{col 15}{res}{space 2}-.1549468{col 27}{space 2} .0034863{col 38}{space 1}  -44.44{col 47}{space 3}0.000{col 55}{space 4}-.1617807{col 68}{space 3}-.1481128
{txt}_Iquarter_239 {c |}{col 15}{res}{space 2}-.1299924{col 27}{space 2} .0033076{col 38}{space 1}  -39.30{col 47}{space 3}0.000{col 55}{space 4}-.1364761{col 68}{space 3}-.1235087
{txt}{space 8}_cons {c |}{col 15}{res}{space 2}   5.8481{col 27}{space 2} .0015451{col 38}{space 1} 3784.95{col 47}{space 3}0.000{col 55}{space 4} 5.845071{col 68}{space 3} 5.851128
{txt}{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
      sigma_u {c |} {res} .37583024
      {txt}sigma_e {c |} {res} .11906906
          {txt}rho {c |} {res} .90878323{txt}   (fraction of variance due to u_i)
{hline 14}{c BT}{hline 64}

{com}.         eststo any_ols_4
{txt}
{com}.         estadd local mfe "Yes" : any_ols_4
{txt}
{com}.         estadd local qfe "Yes" : any_ols_4
{txt}
{com}.         estadd local itinearycontrol "No" : any_ols_4
{txt}
{com}.         estadd local control "No" : any_ols_4
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter `itineary_contr', fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}   133,152
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     9,145

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.3094{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.3691{col 63}{txt}avg{col 67}={col 69}{res}      14.6
{txt}     Overall = {res}0.3398{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}25{txt},{res}9144{txt}){col 67}={col 70}{res}   530.77
{txt}corr(u_i, Xb) = {res}0.0626{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 79:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}        lfare{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}mk_post4 {c |}{col 15}{res}{space 2} .0147578{col 27}{space 2} .0039447{col 38}{space 1}    3.74{col 47}{space 3}0.000{col 55}{space 4} .0070253{col 68}{space 3} .0224904
{txt}{space 4}lcc_post4 {c |}{col 15}{res}{space 2}-.0569317{col 27}{space 2} .0056944{col 38}{space 1}  -10.00{col 47}{space 3}0.000{col 55}{space 4} -.068094{col 68}{space 3}-.0457694
{txt}{space 1}mk_post4_lcc {c |}{col 15}{res}{space 2} .0166757{col 27}{space 2} .0106511{col 38}{space 1}    1.57{col 47}{space 3}0.117{col 55}{space 4}-.0042027{col 68}{space 3} .0375542
{txt}_Iquarter_221 {c |}{col 15}{res}{space 2}-.0177536{col 27}{space 2} .0013926{col 38}{space 1}  -12.75{col 47}{space 3}0.000{col 55}{space 4}-.0204835{col 68}{space 3}-.0150238
{txt}_Iquarter_222 {c |}{col 15}{res}{space 2}-.0431476{col 27}{space 2} .0016814{col 38}{space 1}  -25.66{col 47}{space 3}0.000{col 55}{space 4}-.0464436{col 68}{space 3}-.0398516
{txt}_Iquarter_223 {c |}{col 15}{res}{space 2}-.0610548{col 27}{space 2} .0015826{col 38}{space 1}  -38.58{col 47}{space 3}0.000{col 55}{space 4} -.064157{col 68}{space 3}-.0579525
{txt}_Iquarter_224 {c |}{col 15}{res}{space 2}-.0345873{col 27}{space 2} .0016063{col 38}{space 1}  -21.53{col 47}{space 3}0.000{col 55}{space 4}-.0377361{col 68}{space 3}-.0314385
{txt}_Iquarter_225 {c |}{col 15}{res}{space 2}-.0583358{col 27}{space 2} .0018452{col 38}{space 1}  -31.62{col 47}{space 3}0.000{col 55}{space 4}-.0619528{col 68}{space 3}-.0547189
{txt}_Iquarter_226 {c |}{col 15}{res}{space 2} -.073493{col 27}{space 2}  .002006{col 38}{space 1}  -36.64{col 47}{space 3}0.000{col 55}{space 4}-.0774252{col 68}{space 3}-.0695608
{txt}_Iquarter_227 {c |}{col 15}{res}{space 2}-.0705541{col 27}{space 2} .0018697{col 38}{space 1}  -37.74{col 47}{space 3}0.000{col 55}{space 4}-.0742191{col 68}{space 3} -.066889
{txt}_Iquarter_228 {c |}{col 15}{res}{space 2}-.0409255{col 27}{space 2} .0019478{col 38}{space 1}  -21.01{col 47}{space 3}0.000{col 55}{space 4}-.0447436{col 68}{space 3}-.0371074
{txt}_Iquarter_229 {c |}{col 15}{res}{space 2}-.0247552{col 27}{space 2} .0020451{col 38}{space 1}  -12.10{col 47}{space 3}0.000{col 55}{space 4} -.028764{col 68}{space 3}-.0207464
{txt}_Iquarter_230 {c |}{col 15}{res}{space 2}-.0790977{col 27}{space 2} .0023098{col 38}{space 1}  -34.24{col 47}{space 3}0.000{col 55}{space 4}-.0836254{col 68}{space 3}  -.07457
{txt}_Iquarter_231 {c |}{col 15}{res}{space 2}-.0719865{col 27}{space 2} .0021427{col 38}{space 1}  -33.60{col 47}{space 3}0.000{col 55}{space 4}-.0761867{col 68}{space 3}-.0677862
{txt}_Iquarter_232 {c |}{col 15}{res}{space 2}-.0522813{col 27}{space 2}  .002173{col 38}{space 1}  -24.06{col 47}{space 3}0.000{col 55}{space 4} -.056541{col 68}{space 3}-.0480217
{txt}_Iquarter_233 {c |}{col 15}{res}{space 2}-.0441624{col 27}{space 2} .0027998{col 38}{space 1}  -15.77{col 47}{space 3}0.000{col 55}{space 4}-.0496507{col 68}{space 3}-.0386741
{txt}_Iquarter_234 {c |}{col 15}{res}{space 2}-.0745831{col 27}{space 2} .0029178{col 38}{space 1}  -25.56{col 47}{space 3}0.000{col 55}{space 4}-.0803026{col 68}{space 3}-.0688636
{txt}_Iquarter_235 {c |}{col 15}{res}{space 2}-.0538896{col 27}{space 2}  .002796{col 38}{space 1}  -19.27{col 47}{space 3}0.000{col 55}{space 4}-.0593704{col 68}{space 3}-.0484088
{txt}_Iquarter_236 {c |}{col 15}{res}{space 2}-.0546203{col 27}{space 2} .0027904{col 38}{space 1}  -19.57{col 47}{space 3}0.000{col 55}{space 4}-.0600901{col 68}{space 3}-.0491505
{txt}_Iquarter_237 {c |}{col 15}{res}{space 2}-.0307541{col 27}{space 2} .0028369{col 38}{space 1}  -10.84{col 47}{space 3}0.000{col 55}{space 4}-.0363151{col 68}{space 3}-.0251931
{txt}_Iquarter_238 {c |}{col 15}{res}{space 2}-.0677661{col 27}{space 2}  .002966{col 38}{space 1}  -22.85{col 47}{space 3}0.000{col 55}{space 4}-.0735801{col 68}{space 3}-.0619521
{txt}_Iquarter_239 {c |}{col 15}{res}{space 2}-.0609293{col 27}{space 2} .0028816{col 38}{space 1}  -21.14{col 47}{space 3}0.000{col 55}{space 4}-.0665779{col 68}{space 3}-.0552807
{txt}{space 3}coupon_num {c |}{col 15}{res}{space 2}-.0468486{col 27}{space 2} .0225088{col 38}{space 1}   -2.08{col 47}{space 3}0.037{col 55}{space 4} -.090971{col 68}{space 3}-.0027263
{txt}{space 4}roundtrip {c |}{col 15}{res}{space 2} .7248306{col 27}{space 2} .0393772{col 38}{space 1}   18.41{col 47}{space 3}0.000{col 55}{space 4} .6476424{col 68}{space 3} .8020187
{txt}{space 5}transfer {c |}{col 15}{res}{space 2} .5712105{col 27}{space 2} .0354157{col 38}{space 1}   16.13{col 47}{space 3}0.000{col 55}{space 4} .5017878{col 68}{space 3} .6406331
{txt}{space 8}_cons {c |}{col 15}{res}{space 2} 5.230039{col 27}{space 2}  .017156{col 38}{space 1}  304.85{col 47}{space 3}0.000{col 55}{space 4} 5.196409{col 68}{space 3} 5.263668
{txt}{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
      sigma_u {c |} {res} .30188034
      {txt}sigma_e {c |} {res} .10474169
          {txt}rho {c |} {res} .89255097{txt}   (fraction of variance due to u_i)
{hline 14}{c BT}{hline 64}

{com}.         eststo any_ols_5
{txt}
{com}.         estadd local mfe "Yes" : any_ols_5
{txt}
{com}.         estadd local qfe "Yes" : any_ols_5
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_5
{txt}
{com}.         estadd local control "No" : any_ols_5
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter `itineary_contr' `seat_contr' `interactions', fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}   133,148
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     9,145

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.3319{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.4108{col 63}{txt}avg{col 67}={col 69}{res}      14.6
{txt}     Overall = {res}0.3805{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}33{txt},{res}9144{txt}){col 67}={col 70}{res}   439.75
{txt}corr(u_i, Xb) = {res}0.1058{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 96:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 31}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 32}{c |}{col 44}    Robust
{col 1}                         lfare{col 32}{c |} Coefficient{col 44}  std. err.{col 56}      t{col 64}   P>|t|{col 72}     [95% con{col 85}f. interval]
{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 22}mk_post4 {c |}{col 32}{res}{space 2} .0255466{col 44}{space 2} .0041192{col 55}{space 1}    6.20{col 64}{space 3}0.000{col 72}{space 4} .0174721{col 85}{space 3} .0336211
{txt}{space 21}lcc_post4 {c |}{col 32}{res}{space 2}-.0399721{col 44}{space 2} .0062015{col 55}{space 1}   -6.45{col 64}{space 3}0.000{col 72}{space 4}-.0521284{col 85}{space 3}-.0278158
{txt}{space 18}mk_post4_lcc {c |}{col 32}{res}{space 2} .0124225{col 44}{space 2} .0107258{col 55}{space 1}    1.16{col 64}{space 3}0.247{col 72}{space 4}-.0086026{col 85}{space 3} .0334475
{txt}{space 17}_Iquarter_221 {c |}{col 32}{res}{space 2}-.0170932{col 44}{space 2} .0013798{col 55}{space 1}  -12.39{col 64}{space 3}0.000{col 72}{space 4} -.019798{col 85}{space 3}-.0143885
{txt}{space 17}_Iquarter_222 {c |}{col 32}{res}{space 2}-.0405086{col 44}{space 2} .0016681{col 55}{space 1}  -24.28{col 64}{space 3}0.000{col 72}{space 4}-.0437785{col 85}{space 3}-.0372388
{txt}{space 17}_Iquarter_223 {c |}{col 32}{res}{space 2}-.0609939{col 44}{space 2} .0015588{col 55}{space 1}  -39.13{col 64}{space 3}0.000{col 72}{space 4}-.0640495{col 85}{space 3}-.0579382
{txt}{space 17}_Iquarter_224 {c |}{col 32}{res}{space 2}-.0341262{col 44}{space 2} .0015943{col 55}{space 1}  -21.41{col 64}{space 3}0.000{col 72}{space 4}-.0372514{col 85}{space 3} -.031001
{txt}{space 17}_Iquarter_225 {c |}{col 32}{res}{space 2}-.0579491{col 44}{space 2} .0018298{col 55}{space 1}  -31.67{col 64}{space 3}0.000{col 72}{space 4} -.061536{col 85}{space 3}-.0543622
{txt}{space 17}_Iquarter_226 {c |}{col 32}{res}{space 2}-.0722208{col 44}{space 2} .0019984{col 55}{space 1}  -36.14{col 64}{space 3}0.000{col 72}{space 4}-.0761382{col 85}{space 3}-.0683034
{txt}{space 17}_Iquarter_227 {c |}{col 32}{res}{space 2} -.073191{col 44}{space 2} .0018547{col 55}{space 1}  -39.46{col 64}{space 3}0.000{col 72}{space 4}-.0768265{col 85}{space 3}-.0695555
{txt}{space 17}_Iquarter_228 {c |}{col 32}{res}{space 2}-.0584768{col 44}{space 2} .0020071{col 55}{space 1}  -29.13{col 64}{space 3}0.000{col 72}{space 4}-.0624112{col 85}{space 3}-.0545424
{txt}{space 17}_Iquarter_229 {c |}{col 32}{res}{space 2}-.0405137{col 44}{space 2} .0021022{col 55}{space 1}  -19.27{col 64}{space 3}0.000{col 72}{space 4}-.0446345{col 85}{space 3}-.0363929
{txt}{space 17}_Iquarter_230 {c |}{col 32}{res}{space 2}-.0935429{col 44}{space 2} .0023532{col 55}{space 1}  -39.75{col 64}{space 3}0.000{col 72}{space 4}-.0981558{col 85}{space 3}  -.08893
{txt}{space 17}_Iquarter_231 {c |}{col 32}{res}{space 2}-.0938844{col 44}{space 2} .0022584{col 55}{space 1}  -41.57{col 64}{space 3}0.000{col 72}{space 4}-.0983113{col 85}{space 3}-.0894575
{txt}{space 17}_Iquarter_232 {c |}{col 32}{res}{space 2}-.0729736{col 44}{space 2} .0022635{col 55}{space 1}  -32.24{col 64}{space 3}0.000{col 72}{space 4}-.0774106{col 85}{space 3}-.0685365
{txt}{space 17}_Iquarter_233 {c |}{col 32}{res}{space 2}-.0978633{col 44}{space 2} .0056204{col 55}{space 1}  -17.41{col 64}{space 3}0.000{col 72}{space 4}-.1088806{col 85}{space 3} -.086846
{txt}{space 17}_Iquarter_234 {c |}{col 32}{res}{space 2}-.1297026{col 44}{space 2} .0057586{col 55}{space 1}  -22.52{col 64}{space 3}0.000{col 72}{space 4}-.1409907{col 85}{space 3}-.1184144
{txt}{space 17}_Iquarter_235 {c |}{col 32}{res}{space 2}-.1170939{col 44}{space 2} .0058312{col 55}{space 1}  -20.08{col 64}{space 3}0.000{col 72}{space 4}-.1285244{col 85}{space 3}-.1056634
{txt}{space 17}_Iquarter_236 {c |}{col 32}{res}{space 2} -.119404{col 44}{space 2} .0057459{col 55}{space 1}  -20.78{col 64}{space 3}0.000{col 72}{space 4}-.1306671{col 85}{space 3}-.1081408
{txt}{space 17}_Iquarter_237 {c |}{col 32}{res}{space 2}-.0986103{col 44}{space 2} .0057769{col 55}{space 1}  -17.07{col 64}{space 3}0.000{col 72}{space 4}-.1099343{col 85}{space 3}-.0872862
{txt}{space 17}_Iquarter_238 {c |}{col 32}{res}{space 2}-.1117834{col 44}{space 2} .0056925{col 55}{space 1}  -19.64{col 64}{space 3}0.000{col 72}{space 4} -.122942{col 85}{space 3}-.1006249
{txt}{space 17}_Iquarter_239 {c |}{col 32}{res}{space 2}-.1061345{col 44}{space 2} .0057621{col 55}{space 1}  -18.42{col 64}{space 3}0.000{col 72}{space 4}-.1174295{col 85}{space 3}-.0948395
{txt}{space 20}coupon_num {c |}{col 32}{res}{space 2}-.0214004{col 44}{space 2} .0217359{col 55}{space 1}   -0.98{col 64}{space 3}0.325{col 72}{space 4}-.0640076{col 85}{space 3} .0212069
{txt}{space 21}roundtrip {c |}{col 32}{res}{space 2} .6889815{col 44}{space 2} .0381926{col 55}{space 1}   18.04{col 64}{space 3}0.000{col 72}{space 4} .6141155{col 85}{space 3} .7638476
{txt}{space 22}transfer {c |}{col 32}{res}{space 2}   .52239{col 44}{space 2} .0342582{col 55}{space 1}   15.25{col 64}{space 3}0.000{col 72}{space 4} .4552362{col 85}{space 3} .5895438
{txt}{space 20}restricted {c |}{col 32}{res}{space 2} .1720226{col 44}{space 2} .0104566{col 55}{space 1}   16.45{col 64}{space 3}0.000{col 72}{space 4} .1515252{col 85}{space 3} .1925199
{txt}{space 22}business {c |}{col 32}{res}{space 2} 1.102201{col 44}{space 2} .0543398{col 55}{space 1}   20.28{col 64}{space 3}0.000{col 72}{space 4} .9956831{col 85}{space 3} 1.208719
{txt}{space 25}first {c |}{col 32}{res}{space 2}-.0768085{col 44}{space 2} .0084202{col 55}{space 1}   -9.12{col 64}{space 3}0.000{col 72}{space 4}-.0933139{col 85}{space 3} -.060303
{txt}{space 11}carrier_total_post4 {c |}{col 32}{res}{space 2}-.0007888{col 44}{space 2}  .000356{col 55}{space 1}   -2.22{col 64}{space 3}0.027{col 72}{space 4}-.0014867{col 85}{space 3} -.000091
{txt}{space 7}carrier_total_lcc_post4 {c |}{col 32}{res}{space 2}-.0083761{col 44}{space 2} .0011717{col 55}{space 1}   -7.15{col 64}{space 3}0.000{col 72}{space 4}-.0106728{col 85}{space 3}-.0060794
{txt}{space 15}market_WN_post4 {c |}{col 32}{res}{space 2} .0037504{col 44}{space 2} .0037625{col 55}{space 1}    1.00{col 64}{space 3}0.319{col 72}{space 4} -.003625{col 85}{space 3} .0111258
{txt}{space 10}apt_num_origin_post4 {c |}{col 32}{res}{space 2} .0193405{col 44}{space 2} .0022814{col 55}{space 1}    8.48{col 64}{space 3}0.000{col 72}{space 4} .0148685{col 85}{space 3} .0238125
{txt}apt_num_destination_city_post4 {c |}{col 32}{res}{space 2} .0197311{col 44}{space 2} .0022359{col 55}{space 1}    8.82{col 64}{space 3}0.000{col 72}{space 4} .0153481{col 85}{space 3}  .024114
{txt}{space 25}_cons {c |}{col 32}{res}{space 2} 5.191136{col 44}{space 2} .0166346{col 55}{space 1}  312.07{col 64}{space 3}0.000{col 72}{space 4} 5.158528{col 85}{space 3} 5.223744
{txt}{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                       sigma_u {c |} {res} .29254981
                       {txt}sigma_e {c |} {res} .10302522
                           {txt}rho {c |} {res} .88966484{txt}   (fraction of variance due to u_i)
{hline 31}{c BT}{hline 64}

{com}.         eststo any_ols_6
{txt}
{com}.         estadd local mfe "Yes" : any_ols_6
{txt}
{com}.         estadd local qfe "Yes" : any_ols_6
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_6
{txt}
{com}.         estadd local control "Yes" : any_ols_6
{txt}
{com}. 
. * Combine all OLS estimates to one table
. /*
> local dep fare
> local post post4
> local seat_contr restricted business first
> local itineary_contr coupon_num roundtrip transfer
> local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
> */
. 
. esttab any_ols* using "output/tables/`post'`dep'.tex", replace booktabs ///
>         keep(mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr' `seat_contr' `interactions') label b(5) se(5) star(* 0.10 ** 0.05 *** 0.01) noabbrev ///
>         coeflabels(mk_`post' "ASVX market $\times$ Post" lcc_`post' "LCC ratio $\times$ Post" mk_`post'_lcc "ASVX market $\times$ LCC ratio $\times$ Post" coupon_num "Number of coupons" roundtrip "\shortstack{c -(}Roundtrip \\ (dummy){c )-}" transfer "\shortstack{c -(}Transfer \\ (dummy){c )-}" restricted "Restricted seat ratio" business "Business class ratio" first "First class ratio" carrier_total_`post' "Total # of carriers $\times$ Post" carrier_total_lcc_`post' "Total # of LCC carriers $\times$ Post" market_WN_`post' "Southwest dummy $\times$ Post" apt_num_origin_`post' "Number of aiports in origin $\times$ Post" apt_num_destination_city_`post' "Number of aiports in destination $\times$ Post") ///
>         stats(mfe qfe itinearycontrol control N r2, fmt(0 0 0 0 0 a3) ///
>                 labels("Market FE" "Time FE" "Itineary Controls" "Other Controls" "N" "R^2")) ///
>         title("Fixed Effects Regression: `post' `dep'" \label{c -(}`post'`dep'{c )-}) ///
>         mgroups("OLS" "Fixed Effects", pattern(1 0 0 1 0 0) prefix(\multicolumn{c -(}@span{c )-}{c -(}c{c )-}{c -(}) suffix({c )-}) span erepeat(\cmidrule(lr){c -(}@span{c )-})) 
{res}{txt}(output written to {browse  `"output/tables/post4fare.tex"'})

{com}. 
. gen lcc_ratio_group = 0 if inrange(lcc_ratio_pre, 0, 0.1)
{txt}(93,242 missing values generated)

{com}. replace lcc_ratio_group = 1 if inrange(lcc_ratio_pre, 0.1, 0.3)
{txt}(35,455 real changes made)

{com}. replace lcc_ratio_group = 2 if inrange(lcc_ratio_pre, 0.3, 0.6)
{txt}(34,284 real changes made)

{com}. replace lcc_ratio_group = 3 if inrange(lcc_ratio_pre, 0.6, 1.0)
{txt}(18,220 real changes made)

{com}. label var lcc_ratio_group "LCC Ratio Group"
{txt}
{com}. label define lcc_ratio_group 0 "No LCC" 1 "Low LCC" 2 "Medium LCC" 3 "High LCC"
{txt}
{com}. label values lcc_ratio_group lcc_ratio_group
{txt}
{com}. 
. label var fare "Fare (mean)"
{txt}
{com}. label var post4 "After Jan 2017"
{txt}
{com}. label define post4 0 "Before" 1 "After"
{txt}
{com}. label values post4 post4
{txt}
{com}. 
. label var market_ASVX "Alaska-Virigin market"
{txt}
{com}. label define market_ASVX 0 "No ASVX" 1 "ASVX"
{txt}
{com}. label values market_ASVX market_ASVX
{txt}
{com}. 
. egen mfare = mean(fare), by(lcc_ratio_group)
{txt}
{com}. 
. *graph box fare, over(post4) over(lcc_ratio_group) //medtype(marker) medmarker(msymbol(diamond))
. graph box fare, over(market_ASVX) over(post4) over(lcc_ratio_group)
{res}{txt}
{com}. *graph box fare, over(post4) over(market_ASVX) over(lcc_ratio_group)
. *graph box fare, over(market_ASVX) over(lcc_ratio_group)                
.                 
. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. *** Summary Statistics
. cd "${c -(}rep_folder{c )-}"
{res}/Users/tsukik/Downloads/airline_tatsuki
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3", clear
{txt}
{com}. eststo data2: estpost summarize fare passenger revenue lcc_ratio_pre  coupon_num roundtrip transfer restricted business first carrier_total carrier_total_lcc market_AS market_VX market_WN 

{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:e(count)}{space 1}{space 1}{ralign 9:e(sum_w)}{space 1}{space 1}{ralign 9:e(mean)}{space 1}{space 1}{ralign 9:e(Var)}{space 1}{space 1}{ralign 9:e(sd)}{space 1}{space 1}{ralign 9:e(min)}{space 1}{space 1}{ralign 9:e(max)}{space 1}{space 1}{ralign 9:e(sum)}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:fare}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: 328.0116}}}{space 1}{space 1}{ralign 9:{res:{sf: 12370.37}}}{space 1}{space 1}{ralign 9:{res:{sf: 111.2221}}}{space 1}{space 1}{ralign 9:{res:{sf: 31.99422}}}{space 1}{space 1}{ralign 9:{res:{sf: 1016.772}}}{space 1}{space 1}{ralign 9:{res:{sf: 5.05e+07}}}{space 1}
{space 0}{space 0}{ralign 12:passenger}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: 904.0791}}}{space 1}{space 1}{ralign 9:{res:{sf:  2970688}}}{space 1}{space 1}{ralign 9:{res:{sf: 1723.569}}}{space 1}{space 1}{ralign 9:{res:{sf:       90}}}{space 1}{space 1}{ralign 9:{res:{sf:    36304}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.39e+08}}}{space 1}
{space 0}{space 0}{ralign 12:revenue}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   253560}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.12e+11}}}{space 1}{space 1}{ralign 9:{res:{sf: 460619.5}}}{space 1}{space 1}{ralign 9:{res:{sf:     3722}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.41e+07}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.90e+10}}}{space 1}
{space 0}{space 0}{ralign 12:lcc_ratio_~e}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    96256}}}{space 1}{space 1}{ralign 9:{res:{sf:    96256}}}{space 1}{space 1}{ralign 9:{res:{sf: .2953412}}}{space 1}{space 1}{ralign 9:{res:{sf: .0852144}}}{space 1}{space 1}{ralign 9:{res:{sf: .2919151}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 28428.36}}}{space 1}
{space 0}{space 0}{ralign 12:coupon_num}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.218993}}}{space 1}{space 1}{ralign 9:{res:{sf: .3713879}}}{space 1}{space 1}{ralign 9:{res:{sf: .6094161}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf:        4}}}{space 1}{space 1}{ralign 9:{res:{sf: 341549.6}}}{space 1}
{space 0}{space 0}{ralign 12:roundtrip}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: .5143198}}}{space 1}{space 1}{ralign 9:{res:{sf: .0290773}}}{space 1}{space 1}{ralign 9:{res:{sf: .1705207}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 79164.62}}}{space 1}
{space 0}{space 0}{ralign 12:transfer}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: .4940625}}}{space 1}{space 1}{ralign 9:{res:{sf: .1775331}}}{space 1}{space 1}{ralign 9:{res:{sf: .4213468}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 76046.59}}}{space 1}
{space 0}{space 0}{ralign 12:restricted}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153917}}}{space 1}{space 1}{ralign 9:{res:{sf:   153917}}}{space 1}{space 1}{ralign 9:{res:{sf: .1824388}}}{space 1}{space 1}{ralign 9:{res:{sf: .0353353}}}{space 1}{space 1}{ralign 9:{res:{sf: .1879768}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 28080.43}}}{space 1}
{space 0}{space 0}{ralign 12:business}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153917}}}{space 1}{space 1}{ralign 9:{res:{sf:   153917}}}{space 1}{space 1}{ralign 9:{res:{sf: .0096139}}}{space 1}{space 1}{ralign 9:{res:{sf: .0002842}}}{space 1}{space 1}{ralign 9:{res:{sf: .0168577}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .5778689}}}{space 1}{space 1}{ralign 9:{res:{sf:  1479.74}}}{space 1}
{space 0}{space 0}{ralign 12:first}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153917}}}{space 1}{space 1}{ralign 9:{res:{sf:   153917}}}{space 1}{space 1}{ralign 9:{res:{sf: .0367656}}}{space 1}{space 1}{ralign 9:{res:{sf:  .011247}}}{space 1}{space 1}{ralign 9:{res:{sf: .1060519}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 5658.854}}}{space 1}
{space 0}{space 0}{ralign 12:carrier_to~l}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:  12.0286}}}{space 1}{space 1}{ralign 9:{res:{sf: 26.35822}}}{space 1}{space 1}{ralign 9:{res:{sf: 5.134026}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 23.70124}}}{space 1}{space 1}{ralign 9:{res:{sf:  1851453}}}{space 1}
{space 0}{space 0}{ralign 12:carrier_to~c}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.738826}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.709431}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.307452}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        7}}}{space 1}{space 1}{ralign 9:{res:{sf: 267641.8}}}{space 1}
{space 0}{space 0}{ralign 12:market_AS}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: .3343685}}}{space 1}{space 1}{ralign 9:{res:{sf: .1926311}}}{space 1}{space 1}{ralign 9:{res:{sf: .4388976}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 51466.34}}}{space 1}
{space 0}{space 0}{ralign 12:market_VX}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: .0796525}}}{space 1}{space 1}{ralign 9:{res:{sf: .0625076}}}{space 1}{space 1}{ralign 9:{res:{sf: .2500152}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 12260.19}}}{space 1}
{space 0}{space 0}{ralign 12:market_WN}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf:   153921}}}{space 1}{space 1}{ralign 9:{res:{sf: .5880542}}}{space 1}{space 1}{ralign 9:{res:{sf: .2412412}}}{space 1}{space 1}{ralign 9:{res:{sf: .4911631}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 90513.89}}}{space 1}

{com}. 
. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. eststo data1: estpost summarize fare passenger revenue lcc_ratio_pre  coupon_num roundtrip transfer restricted business first carrier_total carrier_total_lcc market_AS market_VX market_WN 

{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:e(count)}{space 1}{space 1}{ralign 9:e(sum_w)}{space 1}{space 1}{ralign 9:e(mean)}{space 1}{space 1}{ralign 9:e(Var)}{space 1}{space 1}{ralign 9:e(sd)}{space 1}{space 1}{ralign 9:e(min)}{space 1}{space 1}{ralign 9:e(max)}{space 1}{space 1}{ralign 9:e(sum)}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:fare}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf: 339.9291}}}{space 1}{space 1}{ralign 9:{res:{sf: 13868.42}}}{space 1}{space 1}{ralign 9:{res:{sf: 117.7643}}}{space 1}{space 1}{ralign 9:{res:{sf: 31.99422}}}{space 1}{space 1}{ralign 9:{res:{sf:  1365.73}}}{space 1}{space 1}{ralign 9:{res:{sf: 4.71e+07}}}{space 1}
{space 0}{space 0}{ralign 12:passenger}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf: 1044.637}}}{space 1}{space 1}{ralign 9:{res:{sf:  6359866}}}{space 1}{space 1}{ralign 9:{res:{sf: 2521.877}}}{space 1}{space 1}{ralign 9:{res:{sf:       90}}}{space 1}{space 1}{ralign 9:{res:{sf:    98442}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.45e+08}}}{space 1}
{space 0}{space 0}{ralign 12:revenue}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf: 296275.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 4.65e+11}}}{space 1}{space 1}{ralign 9:{res:{sf: 681678.9}}}{space 1}{space 1}{ralign 9:{res:{sf:     3722}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.01e+07}}}{space 1}{space 1}{ralign 9:{res:{sf: 4.10e+10}}}{space 1}
{space 0}{space 0}{ralign 12:lcc_ratio_~e}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    84012}}}{space 1}{space 1}{ralign 9:{res:{sf:    84012}}}{space 1}{space 1}{ralign 9:{res:{sf: .2789726}}}{space 1}{space 1}{ralign 9:{res:{sf:  .068083}}}{space 1}{space 1}{ralign 9:{res:{sf: .2609272}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 23437.05}}}{space 1}
{space 0}{space 0}{ralign 12:coupon_num}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.300836}}}{space 1}{space 1}{ralign 9:{res:{sf: .3846197}}}{space 1}{space 1}{ralign 9:{res:{sf: .6201772}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf:        4}}}{space 1}{space 1}{ralign 9:{res:{sf: 318516.2}}}{space 1}
{space 0}{space 0}{ralign 12:roundtrip}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf: .5183307}}}{space 1}{space 1}{ralign 9:{res:{sf: .0301463}}}{space 1}{space 1}{ralign 9:{res:{sf: .1736268}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 71755.11}}}{space 1}
{space 0}{space 0}{ralign 12:transfer}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf: .5421876}}}{space 1}{space 1}{ralign 9:{res:{sf: .1745917}}}{space 1}{space 1}{ralign 9:{res:{sf: .4178417}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 75057.74}}}{space 1}
{space 0}{space 0}{ralign 12:restricted}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138431}}}{space 1}{space 1}{ralign 9:{res:{sf:   138431}}}{space 1}{space 1}{ralign 9:{res:{sf: .1784555}}}{space 1}{space 1}{ralign 9:{res:{sf: .0284438}}}{space 1}{space 1}{ralign 9:{res:{sf: .1686529}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 24703.78}}}{space 1}
{space 0}{space 0}{ralign 12:business}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138431}}}{space 1}{space 1}{ralign 9:{res:{sf:   138431}}}{space 1}{space 1}{ralign 9:{res:{sf: .0107939}}}{space 1}{space 1}{ralign 9:{res:{sf: .0003206}}}{space 1}{space 1}{ralign 9:{res:{sf: .0179045}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .5778689}}}{space 1}{space 1}{ralign 9:{res:{sf: 1494.208}}}{space 1}
{space 0}{space 0}{ralign 12:first}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138431}}}{space 1}{space 1}{ralign 9:{res:{sf:   138431}}}{space 1}{space 1}{ralign 9:{res:{sf: .0359503}}}{space 1}{space 1}{ralign 9:{res:{sf: .0103398}}}{space 1}{space 1}{ralign 9:{res:{sf: .1016849}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 4976.631}}}{space 1}
{space 0}{space 0}{ralign 12:carrier_to~l}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf: 12.40686}}}{space 1}{space 1}{ralign 9:{res:{sf: 27.58596}}}{space 1}{space 1}{ralign 9:{res:{sf: 5.252234}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 40.99807}}}{space 1}{space 1}{ralign 9:{res:{sf:  1717544}}}{space 1}
{space 0}{space 0}{ralign 12:carrier_to~c}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.865188}}}{space 1}{space 1}{ralign 9:{res:{sf:  2.12514}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.457786}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        7}}}{space 1}{space 1}{ralign 9:{res:{sf: 258207.3}}}{space 1}
{space 0}{space 0}{ralign 12:market_AS}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf: .3293352}}}{space 1}{space 1}{ralign 9:{res:{sf: .1896132}}}{space 1}{space 1}{ralign 9:{res:{sf:  .435446}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 45591.52}}}{space 1}
{space 0}{space 0}{ralign 12:market_VX}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf: .0763722}}}{space 1}{space 1}{ralign 9:{res:{sf: .0587779}}}{space 1}{space 1}{ralign 9:{res:{sf: .2424416}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 10572.58}}}{space 1}
{space 0}{space 0}{ralign 12:market_WN}{space 1}{c |}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf:   138435}}}{space 1}{space 1}{ralign 9:{res:{sf: .6204076}}}{space 1}{space 1}{ralign 9:{res:{sf: .2344541}}}{space 1}{space 1}{ralign 9:{res:{sf: .4842046}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 85886.13}}}{space 1}

{com}. 
. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_ASVX_city", clear
{txt}
{com}. eststo data3: estpost summarize fare passenger revenue lcc_ratio_pre  coupon_num roundtrip transfer restricted business first carrier_total carrier_total_lcc market_AS market_VX market_WN 

{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:e(count)}{space 1}{space 1}{ralign 9:e(sum_w)}{space 1}{space 1}{ralign 9:e(mean)}{space 1}{space 1}{ralign 9:e(Var)}{space 1}{space 1}{ralign 9:e(sd)}{space 1}{space 1}{ralign 9:e(min)}{space 1}{space 1}{ralign 9:e(max)}{space 1}{space 1}{ralign 9:e(sum)}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:fare}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:  322.504}}}{space 1}{space 1}{ralign 9:{res:{sf: 13058.31}}}{space 1}{space 1}{ralign 9:{res:{sf:  114.273}}}{space 1}{space 1}{ralign 9:{res:{sf: 46.42857}}}{space 1}{space 1}{ralign 9:{res:{sf: 1030.938}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.29e+07}}}{space 1}
{space 0}{space 0}{ralign 12:passenger}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: 2386.439}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.73e+07}}}{space 1}{space 1}{ralign 9:{res:{sf: 4157.482}}}{space 1}{space 1}{ralign 9:{res:{sf:       90}}}{space 1}{space 1}{ralign 9:{res:{sf:    97770}}}{space 1}{space 1}{ralign 9:{res:{sf: 9.52e+07}}}{space 1}
{space 0}{space 0}{ralign 12:revenue}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: 657769.5}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.26e+12}}}{space 1}{space 1}{ralign 9:{res:{sf:  1124106}}}{space 1}{space 1}{ralign 9:{res:{sf:     5182}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.99e+07}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.63e+10}}}{space 1}
{space 0}{space 0}{ralign 12:lcc_ratio_~e}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    25314}}}{space 1}{space 1}{ralign 9:{res:{sf:    25314}}}{space 1}{space 1}{ralign 9:{res:{sf: .3181223}}}{space 1}{space 1}{ralign 9:{res:{sf: .0566632}}}{space 1}{space 1}{ralign 9:{res:{sf: .2380404}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 8052.949}}}{space 1}
{space 0}{space 0}{ralign 12:coupon_num}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.969854}}}{space 1}{space 1}{ralign 9:{res:{sf: .2710606}}}{space 1}{space 1}{ralign 9:{res:{sf: .5206349}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.934426}}}{space 1}{space 1}{ralign 9:{res:{sf: 78622.78}}}{space 1}
{space 0}{space 0}{ralign 12:roundtrip}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .4352087}}}{space 1}{space 1}{ralign 9:{res:{sf: .0422039}}}{space 1}{space 1}{ralign 9:{res:{sf: .2054359}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .9672131}}}{space 1}{space 1}{ralign 9:{res:{sf: 17370.48}}}{space 1}
{space 0}{space 0}{ralign 12:transfer}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:  .417132}}}{space 1}{space 1}{ralign 9:{res:{sf: .1556252}}}{space 1}{space 1}{ralign 9:{res:{sf: .3944936}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 16648.99}}}{space 1}
{space 0}{space 0}{ralign 12:restricted}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .1847534}}}{space 1}{space 1}{ralign 9:{res:{sf: .0199131}}}{space 1}{space 1}{ralign 9:{res:{sf: .1411136}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 7374.061}}}{space 1}
{space 0}{space 0}{ralign 12:business}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .0126012}}}{space 1}{space 1}{ralign 9:{res:{sf: .0003659}}}{space 1}{space 1}{ralign 9:{res:{sf: .0191292}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .5732632}}}{space 1}{space 1}{ralign 9:{res:{sf: 502.9526}}}{space 1}
{space 0}{space 0}{ralign 12:first}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .0367983}}}{space 1}{space 1}{ralign 9:{res:{sf: .0066122}}}{space 1}{space 1}{ralign 9:{res:{sf: .0813154}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 1468.732}}}{space 1}
{space 0}{space 0}{ralign 12:carrier_to~l}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:   14.229}}}{space 1}{space 1}{ralign 9:{res:{sf: 22.80242}}}{space 1}{space 1}{ralign 9:{res:{sf: 4.775188}}}{space 1}{space 1}{ralign 9:{res:{sf:        2}}}{space 1}{space 1}{ralign 9:{res:{sf: 40.99807}}}{space 1}{space 1}{ralign 9:{res:{sf: 567921.9}}}{space 1}
{space 0}{space 0}{ralign 12:carrier_to~c}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.906832}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.829401}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.682082}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        7}}}{space 1}{space 1}{ralign 9:{res:{sf: 116020.4}}}{space 1}
{space 0}{space 0}{ralign 12:market_AS}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:  .998005}}}{space 1}{space 1}{ralign 9:{res:{sf: .0017363}}}{space 1}{space 1}{ralign 9:{res:{sf: .0416683}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 39833.37}}}{space 1}
{space 0}{space 0}{ralign 12:market_VX}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .2572929}}}{space 1}{space 1}{ralign 9:{res:{sf:  .156829}}}{space 1}{space 1}{ralign 9:{res:{sf: .3960164}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 10269.33}}}{space 1}
{space 0}{space 0}{ralign 12:market_WN}{space 1}{c |}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf:    39913}}}{space 1}{space 1}{ralign 9:{res:{sf: .8325676}}}{space 1}{space 1}{ralign 9:{res:{sf: .1375603}}}{space 1}{space 1}{ralign 9:{res:{sf: .3708912}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 33230.27}}}{space 1}

{com}. 
. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", clear
{txt}
{com}. eststo data4: estpost summarize fare passenger revenue coupon_num roundtrip transfer restricted business first 

{txt}{space 0}{space 0}{ralign 12:}{space 1}{c |}{space 1}{ralign 9:e(count)}{space 1}{space 1}{ralign 9:e(sum_w)}{space 1}{space 1}{ralign 9:e(mean)}{space 1}{space 1}{ralign 9:e(Var)}{space 1}{space 1}{ralign 9:e(sd)}{space 1}{space 1}{ralign 9:e(min)}{space 1}{space 1}{ralign 9:e(max)}{space 1}{space 1}{ralign 9:e(sum)}{space 1}
{space 0}{hline 13}{c   +}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}{hline 11}
{space 0}{space 0}{ralign 12:fare}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: 330.4841}}}{space 1}{space 1}{ralign 9:{res:{sf: 10092.25}}}{space 1}{space 1}{ralign 9:{res:{sf: 100.4602}}}{space 1}{space 1}{ralign 9:{res:{sf:  87.6108}}}{space 1}{space 1}{ralign 9:{res:{sf: 811.4359}}}{space 1}{space 1}{ralign 9:{res:{sf:  2581742}}}{space 1}
{space 0}{space 0}{ralign 12:passenger}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: 897.8486}}}{space 1}{space 1}{ralign 9:{res:{sf:  1867230}}}{space 1}{space 1}{ralign 9:{res:{sf: 1366.466}}}{space 1}{space 1}{ralign 9:{res:{sf:       30}}}{space 1}{space 1}{ralign 9:{res:{sf:    14530}}}{space 1}{space 1}{ralign 9:{res:{sf:  7013993}}}{space 1}
{space 0}{space 0}{ralign 12:revenue}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: 257394.4}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.29e+11}}}{space 1}{space 1}{ralign 9:{res:{sf: 358836.5}}}{space 1}{space 1}{ralign 9:{res:{sf:     4386}}}{space 1}{space 1}{ralign 9:{res:{sf:  3628766}}}{space 1}{space 1}{ralign 9:{res:{sf: 2.01e+09}}}{space 1}
{space 0}{space 0}{ralign 12:coupon_num}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: 1.901436}}}{space 1}{space 1}{ralign 9:{res:{sf: .3888458}}}{space 1}{space 1}{ralign 9:{res:{sf:  .623575}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 3.828571}}}{space 1}{space 1}{ralign 9:{res:{sf: 14854.02}}}{space 1}
{space 0}{space 0}{ralign 12:roundtrip}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: .4315534}}}{space 1}{space 1}{ralign 9:{res:{sf: .0459646}}}{space 1}{space 1}{ralign 9:{res:{sf: .2143936}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .9148728}}}{space 1}{space 1}{ralign 9:{res:{sf: 3371.295}}}{space 1}
{space 0}{space 0}{ralign 12:transfer}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: .3518103}}}{space 1}{space 1}{ralign 9:{res:{sf: .2094826}}}{space 1}{space 1}{ralign 9:{res:{sf: .4576927}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf:        1}}}{space 1}{space 1}{ralign 9:{res:{sf: 2748.342}}}{space 1}
{space 0}{space 0}{ralign 12:restricted}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: .0538301}}}{space 1}{space 1}{ralign 9:{res:{sf: .0060009}}}{space 1}{space 1}{ralign 9:{res:{sf: .0774652}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .8463836}}}{space 1}{space 1}{ralign 9:{res:{sf: 420.5206}}}{space 1}
{space 0}{space 0}{ralign 12:business}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: .0195391}}}{space 1}{space 1}{ralign 9:{res:{sf: .0007209}}}{space 1}{space 1}{ralign 9:{res:{sf: .0268499}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .3076923}}}{space 1}{space 1}{ralign 9:{res:{sf: 152.6395}}}{space 1}
{space 0}{space 0}{ralign 12:first}{space 1}{c |}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf:     7812}}}{space 1}{space 1}{ralign 9:{res:{sf: .0349548}}}{space 1}{space 1}{ralign 9:{res:{sf: .0006907}}}{space 1}{space 1}{ralign 9:{res:{sf: .0262813}}}{space 1}{space 1}{ralign 9:{res:{sf:        0}}}{space 1}{space 1}{ralign 9:{res:{sf: .3310366}}}{space 1}{space 1}{ralign 9:{res:{sf: 273.0668}}}{space 1}

{com}. 
. esttab data* using "output/tables/sumstats.tex", replace tex ///
>                 main(mean %6.2f) aux(sd) ///
>                 coeflabels(fare "\Centerstack{c -(}Market airfaree \\ (mean){c )-}" passenger "Total passengers" revenue "Total revenue" lcc_ratio_pre "Ratio of LCC seats" coupon_num "\Centerstack{c -(}Number of coupons \\ (mean){c )-}"roundtrip "\Centerstack{c -(}Roundtrip \\ (mean of dummy){c )-}" transfer  "\Centerstack{c -(}Transfer \\ (mean of dummy){c )-}" restricted "Ratio of restricted tickets" business "Ratio of business-class" first "Ratio of first-class" carrier_total "Total carriers" carrier_total_lcc "Total LCC carriers" market_AS "\Centerstack{c -(}Alaska Route \\ (mean of dummy){c )-}" market_VX "\Centerstack{c -(}Virgin Route \\ (mean of dummy){c )-}" market_WN "\Centerstack{c -(}Southwest Route \\ (mean of dummy){c )-}") ///
>                 title("Summary Statistics" \label{c -(}sumstats{c )-}) ///
>                 mtitle("\shortstack{c -(}Airport-Pair \\ All \\ All Airlines{c )-}" "\shortstack{c -(}City-Pair \\ All \\ All Airlines{c )-}" "\shortstack{c -(}City-Pair \\ Alaska+Virigin Routes \\ All Airlines{c )-}"  "\shortstack{c -(}City-Pair \\ Alaska+Virigin Routes \\ Alaska+Virgin{c )-}")
{res}{txt}(output written to {browse  `"output/tables/sumstats.tex"'})

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_ASVXonly_city", clear
{txt}
{com}. 
. local dep passenger
{txt}
{com}. local post post4
{txt}
{com}. 
. bysort market_id: egen pre_`dep' = mean(`dep') if `post' == 0
{txt}(2,861 missing values generated)

{com}. qui bysort market_id: egen post_`dep' = mean(`dep') if `post' == 1
{txt}
{com}. qui bysort market_id (pre_`dep'): replace pre_`dep'=pre_`dep'[1]
{txt}
{com}. gen pre_l`dep' = log(pre_`dep')
{txt}(164 missing values generated)

{com}. gen post_l`dep' = log(post_`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_l`dep' = post_l`dep' - pre_l`dep'
{txt}(5,115 missing values generated)

{com}. drop post_l`dep' pre_l`dep' post_`dep' pre_`dep'
{txt}
{com}. 
. gen q = substr(string(quarter, "%tq"), -1, .), after(quarter)
{txt}
{com}. egen id_quarter = group(market_id q)
{txt}
{com}. qui bysort id_quarter: egen pre_q`dep' = mean(`dep') if `post' == 0 
{txt}
{com}. qui bysort id_quarter: egen post_q`dep' = mean(`dep') if `post' == 1 
{txt}
{com}. qui bysort id_quarter (pre_q`dep'): replace pre_q`dep'=pre_q`dep'[1]
{txt}
{com}. gen pre_lq`dep' = log(pre_q`dep')
{txt}(317 missing values generated)

{com}. gen post_lq`dep' = log(post_q`dep')
{txt}(4,951 missing values generated)

{com}. gen diff_lq`dep' = post_lq`dep' - pre_lq`dep'
{txt}(5,268 missing values generated)

{com}. drop post_lq`dep' pre_lq`dep' post_q`dep' pre_q`dep'
{txt}
{com}. label var diff_lq`dep' "Diff_lfare"
{txt}
{com}. 
. encode q, gen(q2)
{txt}
{com}. drop q
{txt}
{com}. rename q2 q
{res}{txt}
{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. local vars `seat_contr' `itineary_contr'
{txt}
{com}. foreach m of local vars{c -(}
{txt}  2{com}.         qui bysort market_id: egen pre_`m' = mean(`m') if `post' == 0
{txt}  3{com}.         qui bysort market_id (pre_`m'): replace pre_`m'=pre_`m'[1]
{txt}  4{com}.         gen post_`m' = `m' if `post' == 1
{txt}  5{com}.         gen `m'_diff = post_`m' - pre_`m'
{txt}  6{com}.         drop pre_`m' post_`m'
{txt}  7{com}. {c )-}
{txt}(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)
(4,951 missing values generated)
(5,115 missing values generated)

{com}. local seat_contr restricted_diff business_diff first_diff
{txt}
{com}. local itineary_contr coupon_num_diff roundtrip_diff transfer_diff
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post'
{txt}
{com}. 
. gegen int tag_unique = tag(market_id q) if post4 == 1
{res}{txt}{res}{txt}
{com}. order tag_unique, after(diff_lqfare)
{err}variable {bf}diff_lqfare{sf} not found
(error in option {bf:after()})
{txt}{search r(111), local:r(111);}

end of do-file

{search r(111), local:r(111);}

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
. local dep passenger
{txt}
{com}. local post post4
{txt}
{com}. gen lpassenger=log(passenger)
{txt}
{com}. gen market_ASVX = (market_AS > 0 | market_VX > 0)
{txt}
{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. gen mk_`post' = market_ASVX * `post'
{txt}
{com}. gen lcc_`post' = lcc_ratio_pre * `post'
{txt}(5,283 missing values generated)

{com}. gen mk_`post'_lcc = mk_`post'*lcc_ratio_pre
{txt}(5,283 missing values generated)

{com}. 
. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. gen apt_num_origin_`post' = apt_num_origin * `post' 
{txt}
{com}. gen apt_num_destination_city_`post' = apt_num_destination_city * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc, cluster(market_id)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}   133,152
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     9,145

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0556                                         {txt}min = {res}         1
{txt}     Between = {res}0.0699                                         {txt}avg = {res}      14.6
{txt}     Overall = {res}0.0248                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}3{txt})      =  {res}  3183.76
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}  lpassenger{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2} .2025794{col 26}{space 2} .0055873{col 37}{space 1}   36.26{col 46}{space 3}0.000{col 54}{space 4} .1916285{col 67}{space 3} .2135303
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2}  .206412{col 26}{space 2} .0092059{col 37}{space 1}   22.42{col 46}{space 3}0.000{col 54}{space 4} .1883689{col 67}{space 3} .2244552
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}-.2885477{col 26}{space 2} .0191447{col 37}{space 1}  -15.07{col 46}{space 3}0.000{col 54}{space 4}-.3260706{col 67}{space 3}-.2510247
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 5.619076{col 26}{space 2} .0121241{col 37}{space 1}  463.46{col 46}{space 3}0.000{col 54}{space 4} 5.595313{col 67}{space 3} 5.642838
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} 1.0093404
     {txt}sigma_e {c |} {res} .26289977
         {txt}rho {c |} {res} .93646725{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}.         eststo any_ols_1
{txt}
{com}.         estadd local mfe "No" : any_ols_1
{txt}
{com}.         estadd local qfe "No" : any_ols_1
{txt}
{com}.         estadd local itinearycontrol "No" : any_ols_1
{txt}
{com}.         estadd local control "No" : any_ols_1
{txt}
{com}.         
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr', cluster(market_id)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}   133,152
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     9,145

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2583                                         {txt}min = {res}         1
{txt}     Between = {res}0.4052                                         {txt}avg = {res}      14.6
{txt}     Overall = {res}0.3904                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}6{txt})      =  {res} 10171.74
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}  lpassenger{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2} .1394736{col 26}{space 2} .0048498{col 37}{space 1}   28.76{col 46}{space 3}0.000{col 54}{space 4} .1299682{col 67}{space 3} .1489791
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2} .1442495{col 26}{space 2} .0073087{col 37}{space 1}   19.74{col 46}{space 3}0.000{col 54}{space 4} .1299246{col 67}{space 3} .1585743
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}-.1965381{col 26}{space 2} .0155665{col 37}{space 1}  -12.63{col 46}{space 3}0.000{col 54}{space 4}-.2270479{col 67}{space 3}-.1660283
{txt}{space 2}coupon_num {c |}{col 14}{res}{space 2}-.2161544{col 26}{space 2} .0444033{col 37}{space 1}   -4.87{col 46}{space 3}0.000{col 54}{space 4}-.3031833{col 67}{space 3}-.1291255
{txt}{space 3}roundtrip {c |}{col 14}{res}{space 2} .4974254{col 26}{space 2}  .078854{col 37}{space 1}    6.31{col 46}{space 3}0.000{col 54}{space 4} .3428744{col 67}{space 3} .6519764
{txt}{space 4}transfer {c |}{col 14}{res}{space 2}-.9360649{col 26}{space 2} .0694772{col 37}{space 1}  -13.47{col 46}{space 3}0.000{col 54}{space 4}-1.072238{col 67}{space 3}-.7998921
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 6.470213{col 26}{space 2} .0322934{col 37}{space 1}  200.36{col 46}{space 3}0.000{col 54}{space 4}  6.40692{col 67}{space 3} 6.533507
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .79590392
     {txt}sigma_e {c |} {res} .23296432
         {txt}rho {c |} {res} .92108539{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}.         eststo any_ols_2
{txt}
{com}.         estadd local mfe "No" : any_ols_2
{txt}
{com}.         estadd local qfe "No" : any_ols_2
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_2
{txt}
{com}.         estadd local control "No" : any_ols_2
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr' `seat_contr' `interactions', cluster(market_id)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}   133,148
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     9,145

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.2694                                         {txt}min = {res}         1
{txt}     Between = {res}0.4101                                         {txt}avg = {res}      14.6
{txt}     Overall = {res}0.3946                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}14{txt})     =  {res} 14866.16
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 96:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 31}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 32}{c |}{col 44}    Robust
{col 1}                    lpassenger{col 32}{c |} Coefficient{col 44}  std. err.{col 56}      z{col 64}   P>|z|{col 72}     [95% con{col 85}f. interval]
{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 22}mk_post4 {c |}{col 32}{res}{space 2} .0688595{col 44}{space 2} .0058592{col 55}{space 1}   11.75{col 64}{space 3}0.000{col 72}{space 4} .0573757{col 85}{space 3} .0803434
{txt}{space 21}lcc_post4 {c |}{col 32}{res}{space 2} .0182101{col 44}{space 2} .0098277{col 55}{space 1}    1.85{col 64}{space 3}0.064{col 72}{space 4}-.0010518{col 85}{space 3} .0374721
{txt}{space 18}mk_post4_lcc {c |}{col 32}{res}{space 2}-.1408114{col 44}{space 2} .0163982{col 55}{space 1}   -8.59{col 64}{space 3}0.000{col 72}{space 4}-.1729513{col 85}{space 3}-.1086715
{txt}{space 20}coupon_num {c |}{col 32}{res}{space 2}-.2350938{col 44}{space 2} .0438728{col 55}{space 1}   -5.36{col 64}{space 3}0.000{col 72}{space 4}-.3210829{col 85}{space 3}-.1491047
{txt}{space 21}roundtrip {c |}{col 32}{res}{space 2} .5344863{col 44}{space 2} .0782626{col 55}{space 1}    6.83{col 64}{space 3}0.000{col 72}{space 4} .3810944{col 85}{space 3} .6878783
{txt}{space 22}transfer {c |}{col 32}{res}{space 2}-.8974097{col 44}{space 2} .0689272{col 55}{space 1}  -13.02{col 64}{space 3}0.000{col 72}{space 4}-1.032504{col 85}{space 3}-.7623149
{txt}{space 20}restricted {c |}{col 32}{res}{space 2}-.0856977{col 44}{space 2} .0143305{col 55}{space 1}   -5.98{col 64}{space 3}0.000{col 72}{space 4}-.1137849{col 85}{space 3}-.0576105
{txt}{space 22}business {c |}{col 32}{res}{space 2}-.7420268{col 44}{space 2} .0754645{col 55}{space 1}   -9.83{col 64}{space 3}0.000{col 72}{space 4}-.8899345{col 85}{space 3}-.5941191
{txt}{space 25}first {c |}{col 32}{res}{space 2}-.0234075{col 44}{space 2} .0177441{col 55}{space 1}   -1.32{col 64}{space 3}0.187{col 72}{space 4}-.0581852{col 85}{space 3} .0113703
{txt}{space 11}carrier_total_post4 {c |}{col 32}{res}{space 2} .0039158{col 44}{space 2}  .000516{col 55}{space 1}    7.59{col 64}{space 3}0.000{col 72}{space 4} .0029044{col 85}{space 3} .0049271
{txt}{space 7}carrier_total_lcc_post4 {c |}{col 32}{res}{space 2} .0147218{col 44}{space 2} .0017772{col 55}{space 1}    8.28{col 64}{space 3}0.000{col 72}{space 4} .0112387{col 85}{space 3}  .018205
{txt}{space 15}market_WN_post4 {c |}{col 32}{res}{space 2} .0102187{col 44}{space 2} .0060799{col 55}{space 1}    1.68{col 64}{space 3}0.093{col 72}{space 4}-.0016976{col 85}{space 3} .0221351
{txt}{space 10}apt_num_origin_post4 {c |}{col 32}{res}{space 2} -.001696{col 44}{space 2} .0033019{col 55}{space 1}   -0.51{col 64}{space 3}0.607{col 72}{space 4}-.0081677{col 85}{space 3} .0047756
{txt}apt_num_destination_city_post4 {c |}{col 32}{res}{space 2} .0036047{col 44}{space 2} .0032485{col 55}{space 1}    1.11{col 64}{space 3}0.267{col 72}{space 4}-.0027623{col 85}{space 3} .0099717
{txt}{space 25}_cons {c |}{col 32}{res}{space 2} 6.490314{col 44}{space 2} .0324606{col 55}{space 1}  199.94{col 64}{space 3}0.000{col 72}{space 4} 6.426692{col 85}{space 3} 6.553935
{txt}{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                       sigma_u {c |} {res} .61049627
                       {txt}sigma_e {c |} {res} .23110196
                           {txt}rho {c |} {res} .87466233{txt}   (fraction of variance due to u_i)
{hline 31}{c BT}{hline 64}

{com}.         eststo any_ols_3
{txt}
{com}.         estadd local mfe "No" : any_ols_3
{txt}
{com}.         estadd local qfe "No" : any_ols_3
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_3
{txt}
{com}.         estadd local control "Yes" : any_ols_3
{txt}
{com}.         
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter, fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}   133,152
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     9,145

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.2526{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.1655{col 63}{txt}avg{col 67}={col 69}{res}      14.6
{txt}     Overall = {res}0.0001{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}22{txt},{res}9144{txt}){col 67}={col 70}{res}  2259.81
{txt}corr(u_i, Xb) = {res}-0.1046{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 79:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}   lpassenger{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}mk_post4 {c |}{col 15}{res}{space 2} .0338881{col 27}{space 2} .0070765{col 38}{space 1}    4.79{col 47}{space 3}0.000{col 55}{space 4} .0200166{col 68}{space 3} .0477596
{txt}{space 4}lcc_post4 {c |}{col 15}{res}{space 2}-.1115803{col 27}{space 2} .0115238{col 38}{space 1}   -9.68{col 47}{space 3}0.000{col 55}{space 4}-.1341696{col 68}{space 3} -.088991
{txt}{space 1}mk_post4_lcc {c |}{col 15}{res}{space 2}-.0096245{col 27}{space 2} .0202901{col 38}{space 1}   -0.47{col 47}{space 3}0.635{col 55}{space 4}-.0493975{col 68}{space 3} .0301486
{txt}_Iquarter_221 {c |}{col 15}{res}{space 2} -.457001{col 27}{space 2} .0039524{col 38}{space 1} -115.63{col 47}{space 3}0.000{col 55}{space 4}-.4647486{col 68}{space 3}-.4492534
{txt}_Iquarter_222 {c |}{col 15}{res}{space 2}-.4364856{col 27}{space 2} .0052856{col 38}{space 1}  -82.58{col 47}{space 3}0.000{col 55}{space 4}-.4468466{col 68}{space 3}-.4261246
{txt}_Iquarter_223 {c |}{col 15}{res}{space 2}-.4585756{col 27}{space 2} .0037122{col 38}{space 1} -123.53{col 47}{space 3}0.000{col 55}{space 4}-.4658524{col 68}{space 3}-.4512989
{txt}_Iquarter_224 {c |}{col 15}{res}{space 2}-.5431728{col 27}{space 2} .0031585{col 38}{space 1} -171.97{col 47}{space 3}0.000{col 55}{space 4}-.5493642{col 68}{space 3}-.5369813
{txt}_Iquarter_225 {c |}{col 15}{res}{space 2}-.3731283{col 27}{space 2}  .004439{col 38}{space 1}  -84.06{col 47}{space 3}0.000{col 55}{space 4}-.3818296{col 68}{space 3}-.3644269
{txt}_Iquarter_226 {c |}{col 15}{res}{space 2}-.3616014{col 27}{space 2} .0056179{col 38}{space 1}  -64.37{col 47}{space 3}0.000{col 55}{space 4}-.3726137{col 68}{space 3} -.350589
{txt}_Iquarter_227 {c |}{col 15}{res}{space 2}-.3883174{col 27}{space 2} .0042419{col 38}{space 1}  -91.54{col 47}{space 3}0.000{col 55}{space 4}-.3966325{col 68}{space 3}-.3800024
{txt}_Iquarter_228 {c |}{col 15}{res}{space 2}-.4653037{col 27}{space 2} .0035169{col 38}{space 1} -132.30{col 47}{space 3}0.000{col 55}{space 4}-.4721976{col 68}{space 3}-.4584097
{txt}_Iquarter_229 {c |}{col 15}{res}{space 2}-.3024014{col 27}{space 2} .0047185{col 38}{space 1}  -64.09{col 47}{space 3}0.000{col 55}{space 4}-.3116506{col 68}{space 3}-.2931521
{txt}_Iquarter_230 {c |}{col 15}{res}{space 2}-.2984173{col 27}{space 2} .0059382{col 38}{space 1}  -50.25{col 47}{space 3}0.000{col 55}{space 4}-.3100576{col 68}{space 3} -.286777
{txt}_Iquarter_231 {c |}{col 15}{res}{space 2} -.310291{col 27}{space 2} .0046208{col 38}{space 1}  -67.15{col 47}{space 3}0.000{col 55}{space 4}-.3193488{col 68}{space 3}-.3012332
{txt}_Iquarter_232 {c |}{col 15}{res}{space 2}-.3953501{col 27}{space 2} .0039522{col 38}{space 1} -100.03{col 47}{space 3}0.000{col 55}{space 4}-.4030973{col 68}{space 3}-.3876028
{txt}_Iquarter_233 {c |}{col 15}{res}{space 2} -.191053{col 27}{space 2} .0060426{col 38}{space 1}  -31.62{col 47}{space 3}0.000{col 55}{space 4}-.2028979{col 68}{space 3}-.1792081
{txt}_Iquarter_234 {c |}{col 15}{res}{space 2}-.1863584{col 27}{space 2} .0068162{col 38}{space 1}  -27.34{col 47}{space 3}0.000{col 55}{space 4}-.1997196{col 68}{space 3}-.1729972
{txt}_Iquarter_235 {c |}{col 15}{res}{space 2}-.2071723{col 27}{space 2} .0057679{col 38}{space 1}  -35.92{col 47}{space 3}0.000{col 55}{space 4}-.2184787{col 68}{space 3}-.1958659
{txt}_Iquarter_236 {c |}{col 15}{res}{space 2}-.2991251{col 27}{space 2} .0052994{col 38}{space 1}  -56.44{col 47}{space 3}0.000{col 55}{space 4}-.3095132{col 68}{space 3}-.2887371
{txt}_Iquarter_237 {c |}{col 15}{res}{space 2}-.1320856{col 27}{space 2} .0060802{col 38}{space 1}  -21.72{col 47}{space 3}0.000{col 55}{space 4}-.1440041{col 68}{space 3} -.120167
{txt}_Iquarter_238 {c |}{col 15}{res}{space 2}-.1242832{col 27}{space 2} .0069888{col 38}{space 1}  -17.78{col 47}{space 3}0.000{col 55}{space 4}-.1379829{col 68}{space 3}-.1105836
{txt}_Iquarter_239 {c |}{col 15}{res}{space 2}-.1597577{col 27}{space 2} .0058607{col 38}{space 1}  -27.26{col 47}{space 3}0.000{col 55}{space 4}-.1712461{col 68}{space 3}-.1482694
{txt}{space 8}_cons {c |}{col 15}{res}{space 2} 6.274428{col 27}{space 2} .0036619{col 38}{space 1} 1713.43{col 47}{space 3}0.000{col 55}{space 4}  6.26725{col 68}{space 3} 6.281606
{txt}{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
      sigma_u {c |} {res} 1.2044338
      {txt}sigma_e {c |} {res} .23391115
          {txt}rho {c |} {res} .96365396{txt}   (fraction of variance due to u_i)
{hline 14}{c BT}{hline 64}

{com}.         eststo any_ols_4
{txt}
{com}.         estadd local mfe "Yes" : any_ols_4
{txt}
{com}.         estadd local qfe "Yes" : any_ols_4
{txt}
{com}.         estadd local itinearycontrol "No" : any_ols_4
{txt}
{com}.         estadd local control "No" : any_ols_4
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter `itineary_contr', fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}   133,152
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     9,145

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.4389{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.3386{col 63}{txt}avg{col 67}={col 69}{res}      14.6
{txt}     Overall = {res}0.3725{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}25{txt},{res}9144{txt}){col 67}={col 70}{res}  2494.98
{txt}corr(u_i, Xb) = {res}0.2368{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 79:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}   lpassenger{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}mk_post4 {c |}{col 15}{res}{space 2} .0463745{col 27}{space 2} .0058712{col 38}{space 1}    7.90{col 47}{space 3}0.000{col 55}{space 4} .0348656{col 68}{space 3} .0578833
{txt}{space 4}lcc_post4 {c |}{col 15}{res}{space 2}-.0393887{col 27}{space 2} .0098115{col 38}{space 1}   -4.01{col 47}{space 3}0.000{col 55}{space 4}-.0586215{col 68}{space 3}-.0201559
{txt}{space 1}mk_post4_lcc {c |}{col 15}{res}{space 2}  -.05139{col 27}{space 2} .0167333{col 38}{space 1}   -3.07{col 47}{space 3}0.002{col 55}{space 4}-.0841911{col 68}{space 3}-.0185889
{txt}_Iquarter_221 {c |}{col 15}{res}{space 2}-.4659581{col 27}{space 2} .0036481{col 38}{space 1} -127.73{col 47}{space 3}0.000{col 55}{space 4}-.4731092{col 68}{space 3} -.458807
{txt}_Iquarter_222 {c |}{col 15}{res}{space 2}-.4404152{col 27}{space 2} .0046614{col 38}{space 1}  -94.48{col 47}{space 3}0.000{col 55}{space 4}-.4495525{col 68}{space 3}-.4312778
{txt}_Iquarter_223 {c |}{col 15}{res}{space 2}-.4641739{col 27}{space 2} .0035002{col 38}{space 1} -132.61{col 47}{space 3}0.000{col 55}{space 4}-.4710351{col 68}{space 3}-.4573127
{txt}_Iquarter_224 {c |}{col 15}{res}{space 2}-.5549665{col 27}{space 2} .0030323{col 38}{space 1} -183.02{col 47}{space 3}0.000{col 55}{space 4}-.5609105{col 68}{space 3}-.5490225
{txt}_Iquarter_225 {c |}{col 15}{res}{space 2}-.3960107{col 27}{space 2} .0040876{col 38}{space 1}  -96.88{col 47}{space 3}0.000{col 55}{space 4}-.4040234{col 68}{space 3} -.387998
{txt}_Iquarter_226 {c |}{col 15}{res}{space 2}-.3898329{col 27}{space 2} .0050398{col 38}{space 1}  -77.35{col 47}{space 3}0.000{col 55}{space 4} -.399712{col 68}{space 3}-.3799537
{txt}_Iquarter_227 {c |}{col 15}{res}{space 2} -.426269{col 27}{space 2} .0039624{col 38}{space 1} -107.58{col 47}{space 3}0.000{col 55}{space 4}-.4340363{col 68}{space 3}-.4185017
{txt}_Iquarter_228 {c |}{col 15}{res}{space 2}-.4987773{col 27}{space 2} .0034505{col 38}{space 1} -144.55{col 47}{space 3}0.000{col 55}{space 4} -.505541{col 68}{space 3}-.4920136
{txt}_Iquarter_229 {c |}{col 15}{res}{space 2}-.3499245{col 27}{space 2} .0043496{col 38}{space 1}  -80.45{col 47}{space 3}0.000{col 55}{space 4}-.3584506{col 68}{space 3}-.3413983
{txt}_Iquarter_230 {c |}{col 15}{res}{space 2}-.3435684{col 27}{space 2} .0053225{col 38}{space 1}  -64.55{col 47}{space 3}0.000{col 55}{space 4}-.3540017{col 68}{space 3}-.3331351
{txt}_Iquarter_231 {c |}{col 15}{res}{space 2}-.3629768{col 27}{space 2} .0042166{col 38}{space 1}  -86.08{col 47}{space 3}0.000{col 55}{space 4}-.3712422{col 68}{space 3}-.3547113
{txt}_Iquarter_232 {c |}{col 15}{res}{space 2}-.4387297{col 27}{space 2} .0037194{col 38}{space 1} -117.96{col 47}{space 3}0.000{col 55}{space 4}-.4460206{col 68}{space 3}-.4314387
{txt}_Iquarter_233 {c |}{col 15}{res}{space 2}-.2784665{col 27}{space 2} .0053173{col 38}{space 1}  -52.37{col 47}{space 3}0.000{col 55}{space 4}-.2888896{col 68}{space 3}-.2680434
{txt}_Iquarter_234 {c |}{col 15}{res}{space 2} -.278877{col 27}{space 2}   .00602{col 38}{space 1}  -46.32{col 47}{space 3}0.000{col 55}{space 4}-.2906776{col 68}{space 3}-.2670764
{txt}_Iquarter_235 {c |}{col 15}{res}{space 2}-.3089192{col 27}{space 2} .0052007{col 38}{space 1}  -59.40{col 47}{space 3}0.000{col 55}{space 4}-.3191137{col 68}{space 3}-.2987246
{txt}_Iquarter_236 {c |}{col 15}{res}{space 2} -.387357{col 27}{space 2} .0048595{col 38}{space 1}  -79.71{col 47}{space 3}0.000{col 55}{space 4}-.3968827{col 68}{space 3}-.3778313
{txt}_Iquarter_237 {c |}{col 15}{res}{space 2}-.2367565{col 27}{space 2} .0053668{col 38}{space 1}  -44.12{col 47}{space 3}0.000{col 55}{space 4}-.2472766{col 68}{space 3}-.2262365
{txt}_Iquarter_238 {c |}{col 15}{res}{space 2}-.2272558{col 27}{space 2} .0061286{col 38}{space 1}  -37.08{col 47}{space 3}0.000{col 55}{space 4}-.2392692{col 68}{space 3}-.2152424
{txt}_Iquarter_239 {c |}{col 15}{res}{space 2}-.2687909{col 27}{space 2} .0052474{col 38}{space 1}  -51.22{col 47}{space 3}0.000{col 55}{space 4}-.2790771{col 68}{space 3}-.2585048
{txt}{space 3}coupon_num {c |}{col 15}{res}{space 2} -.267911{col 27}{space 2}  .045361{col 38}{space 1}   -5.91{col 47}{space 3}0.000{col 55}{space 4}-.3568288{col 68}{space 3}-.1789932
{txt}{space 4}roundtrip {c |}{col 15}{res}{space 2} .6174619{col 27}{space 2}  .080415{col 38}{space 1}    7.68{col 47}{space 3}0.000{col 55}{space 4} .4598306{col 68}{space 3} .7750932
{txt}{space 5}transfer {c |}{col 15}{res}{space 2}-.7722135{col 27}{space 2} .0703893{col 38}{space 1}  -10.97{col 47}{space 3}0.000{col 55}{space 4}-.9101923{col 68}{space 3}-.6342347
{txt}{space 8}_cons {c |}{col 15}{res}{space 2} 7.034813{col 27}{space 2} .0326147{col 38}{space 1}  215.69{col 47}{space 3}0.000{col 55}{space 4}  6.97088{col 68}{space 3} 7.098745
{txt}{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
      sigma_u {c |} {res} .96870724
      {txt}sigma_e {c |} {res} .20267036
          {txt}rho {c |} {res} .95806373{txt}   (fraction of variance due to u_i)
{hline 14}{c BT}{hline 64}

{com}.         eststo any_ols_5
{txt}
{com}.         estadd local mfe "Yes" : any_ols_5
{txt}
{com}.         estadd local qfe "Yes" : any_ols_5
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_5
{txt}
{com}.         estadd local control "No" : any_ols_5
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter `itineary_contr' `seat_contr' `interactions', fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}   133,148
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     9,145

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.4412{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.3413{col 63}{txt}avg{col 67}={col 69}{res}      14.6
{txt}     Overall = {res}0.3745{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}33{txt},{res}9144{txt}){col 67}={col 70}{res}  1925.37
{txt}corr(u_i, Xb) = {res}0.2413{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 96:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 31}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 32}{c |}{col 44}    Robust
{col 1}                    lpassenger{col 32}{c |} Coefficient{col 44}  std. err.{col 56}      t{col 64}   P>|t|{col 72}     [95% con{col 85}f. interval]
{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 22}mk_post4 {c |}{col 32}{res}{space 2} .0412511{col 44}{space 2}  .006195{col 55}{space 1}    6.66{col 64}{space 3}0.000{col 72}{space 4} .0291076{col 85}{space 3} .0533946
{txt}{space 21}lcc_post4 {c |}{col 32}{res}{space 2}-.0537531{col 44}{space 2} .0107445{col 55}{space 1}   -5.00{col 64}{space 3}0.000{col 72}{space 4}-.0748148{col 85}{space 3}-.0326914
{txt}{space 18}mk_post4_lcc {c |}{col 32}{res}{space 2}-.0853951{col 44}{space 2} .0172593{col 55}{space 1}   -4.95{col 64}{space 3}0.000{col 72}{space 4}-.1192271{col 85}{space 3}-.0515631
{txt}{space 17}_Iquarter_221 {c |}{col 32}{res}{space 2}-.4651537{col 44}{space 2} .0036463{col 55}{space 1} -127.57{col 64}{space 3}0.000{col 72}{space 4}-.4723013{col 85}{space 3} -.458006
{txt}{space 17}_Iquarter_222 {c |}{col 32}{res}{space 2}-.4400345{col 44}{space 2} .0046698{col 55}{space 1}  -94.23{col 64}{space 3}0.000{col 72}{space 4}-.4491884{col 85}{space 3}-.4308806
{txt}{space 17}_Iquarter_223 {c |}{col 32}{res}{space 2}-.4626136{col 44}{space 2}    .0035{col 55}{space 1} -132.18{col 64}{space 3}0.000{col 72}{space 4}-.4694743{col 85}{space 3}-.4557528
{txt}{space 17}_Iquarter_224 {c |}{col 32}{res}{space 2}-.5529373{col 44}{space 2}  .003039{col 55}{space 1} -181.94{col 64}{space 3}0.000{col 72}{space 4}-.5588945{col 85}{space 3}-.5469801
{txt}{space 17}_Iquarter_225 {c |}{col 32}{res}{space 2}-.3948667{col 44}{space 2} .0040855{col 55}{space 1}  -96.65{col 64}{space 3}0.000{col 72}{space 4}-.4028752{col 85}{space 3}-.3868581
{txt}{space 17}_Iquarter_226 {c |}{col 32}{res}{space 2} -.388909{col 44}{space 2} .0050475{col 55}{space 1}  -77.05{col 64}{space 3}0.000{col 72}{space 4}-.3988031{col 85}{space 3}-.3790148
{txt}{space 17}_Iquarter_227 {c |}{col 32}{res}{space 2}-.4244115{col 44}{space 2} .0039568{col 55}{space 1} -107.26{col 64}{space 3}0.000{col 72}{space 4}-.4321677{col 85}{space 3}-.4166553
{txt}{space 17}_Iquarter_228 {c |}{col 32}{res}{space 2} -.491747{col 44}{space 2} .0035346{col 55}{space 1} -139.12{col 64}{space 3}0.000{col 72}{space 4}-.4986756{col 85}{space 3}-.4848184
{txt}{space 17}_Iquarter_229 {c |}{col 32}{res}{space 2}-.3435774{col 44}{space 2} .0044694{col 55}{space 1}  -76.87{col 64}{space 3}0.000{col 72}{space 4}-.3523383{col 85}{space 3}-.3348165
{txt}{space 17}_Iquarter_230 {c |}{col 32}{res}{space 2} -.337841{col 44}{space 2} .0054035{col 55}{space 1}  -62.52{col 64}{space 3}0.000{col 72}{space 4} -.348433{col 85}{space 3} -.327249
{txt}{space 17}_Iquarter_231 {c |}{col 32}{res}{space 2}-.3548505{col 44}{space 2} .0043683{col 55}{space 1}  -81.23{col 64}{space 3}0.000{col 72}{space 4}-.3634132{col 85}{space 3}-.3462877
{txt}{space 17}_Iquarter_232 {c |}{col 32}{res}{space 2}-.4304961{col 44}{space 2} .0038405{col 55}{space 1} -112.09{col 64}{space 3}0.000{col 72}{space 4}-.4380243{col 85}{space 3}-.4229679
{txt}{space 17}_Iquarter_233 {c |}{col 32}{res}{space 2}-.2616534{col 44}{space 2} .0093735{col 55}{space 1}  -27.91{col 64}{space 3}0.000{col 72}{space 4}-.2800275{col 85}{space 3}-.2432793
{txt}{space 17}_Iquarter_234 {c |}{col 32}{res}{space 2}-.2617163{col 44}{space 2} .0097914{col 55}{space 1}  -26.73{col 64}{space 3}0.000{col 72}{space 4}-.2809096{col 85}{space 3} -.242523
{txt}{space 17}_Iquarter_235 {c |}{col 32}{res}{space 2}-.2906259{col 44}{space 2} .0093992{col 55}{space 1}  -30.92{col 64}{space 3}0.000{col 72}{space 4}-.3090505{col 85}{space 3}-.2722013
{txt}{space 17}_Iquarter_236 {c |}{col 32}{res}{space 2}-.3679254{col 44}{space 2}  .009202{col 55}{space 1}  -39.98{col 64}{space 3}0.000{col 72}{space 4}-.3859634{col 85}{space 3}-.3498873
{txt}{space 17}_Iquarter_237 {c |}{col 32}{res}{space 2}-.2158726{col 44}{space 2} .0095372{col 55}{space 1}  -22.63{col 64}{space 3}0.000{col 72}{space 4}-.2345677{col 85}{space 3}-.1971776
{txt}{space 17}_Iquarter_238 {c |}{col 32}{res}{space 2}-.2139167{col 44}{space 2}  .009872{col 55}{space 1}  -21.67{col 64}{space 3}0.000{col 72}{space 4} -.233268{col 85}{space 3}-.1945654
{txt}{space 17}_Iquarter_239 {c |}{col 32}{res}{space 2}-.2552433{col 44}{space 2} .0093786{col 55}{space 1}  -27.22{col 64}{space 3}0.000{col 72}{space 4}-.2736275{col 85}{space 3}-.2368591
{txt}{space 20}coupon_num {c |}{col 32}{res}{space 2}-.2992596{col 44}{space 2} .0453379{col 55}{space 1}   -6.60{col 64}{space 3}0.000{col 72}{space 4} -.388132{col 85}{space 3}-.2103873
{txt}{space 21}roundtrip {c |}{col 32}{res}{space 2} .6705717{col 44}{space 2} .0805187{col 55}{space 1}    8.33{col 64}{space 3}0.000{col 72}{space 4}  .512737{col 85}{space 3} .8284064
{txt}{space 22}transfer {c |}{col 32}{res}{space 2}-.7132447{col 44}{space 2} .0706718{col 55}{space 1}  -10.09{col 64}{space 3}0.000{col 72}{space 4}-.8517772{col 85}{space 3}-.5747122
{txt}{space 20}restricted {c |}{col 32}{res}{space 2}-.0467723{col 44}{space 2} .0169743{col 55}{space 1}   -2.76{col 64}{space 3}0.006{col 72}{space 4}-.0800457{col 85}{space 3}-.0134989
{txt}{space 22}business {c |}{col 32}{res}{space 2}-.5563227{col 44}{space 2} .0791326{col 55}{space 1}   -7.03{col 64}{space 3}0.000{col 72}{space 4}-.7114403{col 85}{space 3} -.401205
{txt}{space 25}first {c |}{col 32}{res}{space 2}-.0425124{col 44}{space 2} .0187171{col 55}{space 1}   -2.27{col 64}{space 3}0.023{col 72}{space 4}-.0792021{col 85}{space 3}-.0058226
{txt}{space 11}carrier_total_post4 {c |}{col 32}{res}{space 2} .0017134{col 44}{space 2} .0005646{col 55}{space 1}    3.03{col 64}{space 3}0.002{col 72}{space 4} .0006067{col 85}{space 3} .0028201
{txt}{space 7}carrier_total_lcc_post4 {c |}{col 32}{res}{space 2} .0122144{col 44}{space 2} .0018289{col 55}{space 1}    6.68{col 64}{space 3}0.000{col 72}{space 4} .0086293{col 85}{space 3} .0157995
{txt}{space 15}market_WN_post4 {c |}{col 32}{res}{space 2}-.0013942{col 44}{space 2}  .006103{col 55}{space 1}   -0.23{col 64}{space 3}0.819{col 72}{space 4}-.0133574{col 85}{space 3} .0105689
{txt}{space 10}apt_num_origin_post4 {c |}{col 32}{res}{space 2}-.0205838{col 44}{space 2} .0036875{col 55}{space 1}   -5.58{col 64}{space 3}0.000{col 72}{space 4}-.0278121{col 85}{space 3}-.0133556
{txt}apt_num_destination_city_post4 {c |}{col 32}{res}{space 2}-.0150412{col 44}{space 2} .0037289{col 55}{space 1}   -4.03{col 64}{space 3}0.000{col 72}{space 4}-.0223506{col 85}{space 3}-.0077318
{txt}{space 25}_cons {c |}{col 32}{res}{space 2} 7.057788{col 44}{space 2} .0326533{col 55}{space 1}  216.14{col 64}{space 3}0.000{col 72}{space 4} 6.993781{col 85}{space 3} 7.121796
{txt}{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                       sigma_u {c |} {res} .96784196
                       {txt}sigma_e {c |} {res} .20226031
                           {txt}rho {c |} {res} .95815457{txt}   (fraction of variance due to u_i)
{hline 31}{c BT}{hline 64}

{com}.         eststo any_ols_6
{txt}
{com}.         estadd local mfe "Yes" : any_ols_6
{txt}
{com}.         estadd local qfe "Yes" : any_ols_6
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_6
{txt}
{com}.         estadd local control "Yes" : any_ols_6
{txt}
{com}. 
. * Combine all OLS estimates to one table
. /*
> local dep fare
> local post post4
> local seat_contr restricted business first
> local itineary_contr coupon_num roundtrip transfer
> local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
> */
. 
. esttab any_ols* using "output/tables/`post'`dep'.tex", replace booktabs ///
>         keep(mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr' `seat_contr' `interactions') label b(5) se(5) star(* 0.10 ** 0.05 *** 0.01) noabbrev ///
>         coeflabels(mk_`post' "ASVX market $\times$ Post" lcc_`post' "LCC ratio $\times$ Post" mk_`post'_lcc "ASVX market $\times$ LCC ratio $\times$ Post" coupon_num "Number of coupons" roundtrip "\shortstack{c -(}Roundtrip \\ (dummy){c )-}" transfer "\shortstack{c -(}Transfer \\ (dummy){c )-}" restricted "Restricted seat ratio" business "Business class ratio" first "First class ratio" carrier_total_`post' "Total # of carriers $\times$ Post" carrier_total_lcc_`post' "Total # of LCC carriers $\times$ Post" market_WN_`post' "Southwest dummy $\times$ Post" apt_num_origin_`post' "Number of aiports in origin $\times$ Post" apt_num_destination_city_`post' "Number of aiports in destination $\times$ Post") ///
>         stats(mfe qfe itinearycontrol control N r2, fmt(0 0 0 0 0 a3) ///
>                 labels("Market FE" "Time FE" "Itineary Controls" "Other Controls" "N" "R^2")) ///
>         title("Fixed Effects Regression: `post' `dep'" \label{c -(}`post'`dep'{c )-}) ///
>         mgroups("OLS" "Fixed Effects", pattern(1 0 0 1 0 0) prefix(\multicolumn{c -(}@span{c )-}{c -(}c{c )-}{c -(}) suffix({c )-}) span erepeat(\cmidrule(lr){c -(}@span{c )-})) 
{res}{txt}(output written to {browse  `"output/tables/post4passenger.tex"'})

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. use  "input/dta_clean/${c -(}dataset{c )-}_agg3_city", clear
{txt}
{com}. 
. local dep revenue
{txt}
{com}. local post post4
{txt}
{com}. gen lpassenger=log(passenger)
{txt}
{com}. gen market_ASVX = (market_AS > 0 | market_VX > 0)
{txt}
{com}. qui bysort market_id (lcc_ratio_pre): replace lcc_ratio_pre=lcc_ratio_pre[1] if post4 == 1
{txt}
{com}. gen mk_`post' = market_ASVX * `post'
{txt}
{com}. gen lcc_`post' = lcc_ratio_pre * `post'
{txt}(5,283 missing values generated)

{com}. gen mk_`post'_lcc = mk_`post'*lcc_ratio_pre
{txt}(5,283 missing values generated)

{com}. 
. 
. local seat_contr restricted business first
{txt}
{com}. local itineary_contr coupon_num roundtrip transfer
{txt}
{com}. 
. gen carrier_total_`post' =  carrier_total * `post'
{txt}
{com}. gen carrier_total_lcc_`post' = carrier_total_lcc * `post' 
{txt}
{com}. gen market_WN_`post' = market_WN  * `post'
{txt}
{com}. gen apt_num_origin_`post' = apt_num_origin * `post' 
{txt}
{com}. gen apt_num_destination_city_`post' = apt_num_destination_city * `post'
{txt}
{com}. local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc, cluster(market_id)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}   133,152
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     9,145

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.0307                                         {txt}min = {res}         1
{txt}     Between = {res}0.0517                                         {txt}avg = {res}      14.6
{txt}     Overall = {res}0.0197                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}3{txt})      =  {res}  2696.03
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}    lrevenue{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2} .1597008{col 26}{space 2} .0044466{col 37}{space 1}   35.92{col 46}{space 3}0.000{col 54}{space 4} .1509857{col 67}{space 3} .1684159
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2} .0954341{col 26}{space 2} .0079569{col 37}{space 1}   11.99{col 46}{space 3}0.000{col 54}{space 4} .0798388{col 67}{space 3} .1110294
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}-.1826068{col 26}{space 2} .0151499{col 37}{space 1}  -12.05{col 46}{space 3}0.000{col 54}{space 4}-.2123001{col 67}{space 3}-.1529136
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 11.41704{col 26}{space 2}  .011496{col 37}{space 1}  993.13{col 46}{space 3}0.000{col 54}{space 4} 11.39451{col 67}{space 3} 11.43957
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res} .99125252
     {txt}sigma_e {c |} {res} .25128812
         {txt}rho {c |} {res}  .9396155{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}.         eststo any_ols_1
{txt}
{com}.         estadd local mfe "No" : any_ols_1
{txt}
{com}.         estadd local qfe "No" : any_ols_1
{txt}
{com}.         estadd local itinearycontrol "No" : any_ols_1
{txt}
{com}.         estadd local control "No" : any_ols_1
{txt}
{com}.         
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr', cluster(market_id)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}   133,152
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     9,145

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1689                                         {txt}min = {res}         1
{txt}     Between = {res}0.2154                                         {txt}avg = {res}      14.6
{txt}     Overall = {res}0.2296                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}6{txt})      =  {res}  8858.17
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 78:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}    lrevenue{col 14}{c |} Coefficient{col 26}  std. err.{col 38}      z{col 46}   P>|z|{col 54}     [95% con{col 67}f. interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 4}mk_post4 {c |}{col 14}{res}{space 2} .1525553{col 26}{space 2} .0037998{col 37}{space 1}   40.15{col 46}{space 3}0.000{col 54}{space 4} .1451078{col 67}{space 3} .1600027
{txt}{space 3}lcc_post4 {c |}{col 14}{res}{space 2} .0753194{col 26}{space 2}  .007345{col 37}{space 1}   10.25{col 46}{space 3}0.000{col 54}{space 4} .0609234{col 67}{space 3} .0897154
{txt}mk_post4_lcc {c |}{col 14}{res}{space 2}-.1769804{col 26}{space 2}  .012951{col 37}{space 1}  -13.67{col 46}{space 3}0.000{col 54}{space 4}-.2023639{col 67}{space 3}-.1515969
{txt}{space 2}coupon_num {c |}{col 14}{res}{space 2}-.2503427{col 26}{space 2} .0428721{col 37}{space 1}   -5.84{col 46}{space 3}0.000{col 54}{space 4}-.3343704{col 67}{space 3} -.166315
{txt}{space 3}roundtrip {c |}{col 14}{res}{space 2} 1.242776{col 26}{space 2} .0787872{col 37}{space 1}   15.77{col 46}{space 3}0.000{col 54}{space 4} 1.088356{col 67}{space 3} 1.397197
{txt}{space 4}transfer {c |}{col 14}{res}{space 2}-.3543702{col 26}{space 2} .0670163{col 37}{space 1}   -5.29{col 46}{space 3}0.000{col 54}{space 4}-.4857198{col 67}{space 3}-.2230207
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 11.59143{col 26}{space 2} .0300678{col 37}{space 1}  385.51{col 46}{space 3}0.000{col 54}{space 4}  11.5325{col 67}{space 3} 11.65036
{txt}{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
     sigma_u {c |} {res}  .8548812
     {txt}sigma_e {c |} {res} .23264649
         {txt}rho {c |} {res} .93104701{txt}   (fraction of variance due to u_i)
{hline 13}{c BT}{hline 64}

{com}.         eststo any_ols_2
{txt}
{com}.         estadd local mfe "No" : any_ols_2
{txt}
{com}.         estadd local qfe "No" : any_ols_2
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_2
{txt}
{com}.         estadd local control "No" : any_ols_2
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr' `seat_contr' `interactions', cluster(market_id)
{res}
{txt}Random-effects GLS regression                   Number of obs     = {res}   133,148
{txt}Group variable: {res}market_id                       {txt}Number of groups  = {res}     9,145

{txt}R-squared:                                      Obs per group:
     Within  = {res}0.1781                                         {txt}min = {res}         1
{txt}     Between = {res}0.2243                                         {txt}avg = {res}      14.6
{txt}     Overall = {res}0.2387                                         {txt}max = {res}        20

                                                {txt}Wald chi2({res}14{txt})     =  {res} 13079.90
{txt}corr(u_i, X) = {res}0{txt} (assumed)                      Prob > chi2       =     {res}0.0000

{txt}{ralign 96:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 31}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 32}{c |}{col 44}    Robust
{col 1}                      lrevenue{col 32}{c |} Coefficient{col 44}  std. err.{col 56}      z{col 64}   P>|z|{col 72}     [95% con{col 85}f. interval]
{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 22}mk_post4 {c |}{col 32}{res}{space 2} .0826169{col 44}{space 2} .0046676{col 55}{space 1}   17.70{col 64}{space 3}0.000{col 72}{space 4} .0734687{col 85}{space 3} .0917652
{txt}{space 21}lcc_post4 {c |}{col 32}{res}{space 2}-.0621051{col 44}{space 2}    .0094{col 55}{space 1}   -6.61{col 64}{space 3}0.000{col 72}{space 4}-.0805289{col 85}{space 3}-.0436814
{txt}{space 18}mk_post4_lcc {c |}{col 32}{res}{space 2}-.0994349{col 44}{space 2} .0136283{col 55}{space 1}   -7.30{col 64}{space 3}0.000{col 72}{space 4}-.1261459{col 85}{space 3}-.0727239
{txt}{space 20}coupon_num {c |}{col 32}{res}{space 2}-.2555426{col 44}{space 2} .0429089{col 55}{space 1}   -5.96{col 64}{space 3}0.000{col 72}{space 4}-.3396425{col 85}{space 3}-.1714427
{txt}{space 21}roundtrip {c |}{col 32}{res}{space 2} 1.281509{col 44}{space 2} .0788078{col 55}{space 1}   16.26{col 64}{space 3}0.000{col 72}{space 4} 1.127048{col 85}{space 3} 1.435969
{txt}{space 22}transfer {c |}{col 32}{res}{space 2}-.3370673{col 44}{space 2} .0672852{col 55}{space 1}   -5.01{col 64}{space 3}0.000{col 72}{space 4}-.4689438{col 85}{space 3}-.2051907
{txt}{space 20}restricted {c |}{col 32}{res}{space 2} .0708054{col 44}{space 2} .0120237{col 55}{space 1}    5.89{col 64}{space 3}0.000{col 72}{space 4} .0472394{col 85}{space 3} .0943714
{txt}{space 22}business {c |}{col 32}{res}{space 2} .1047518{col 44}{space 2}  .066597{col 55}{space 1}    1.57{col 64}{space 3}0.116{col 72}{space 4}-.0257759{col 85}{space 3} .2352796
{txt}{space 25}first {c |}{col 32}{res}{space 2}-.0848802{col 44}{space 2} .0168159{col 55}{space 1}   -5.05{col 64}{space 3}0.000{col 72}{space 4}-.1178387{col 85}{space 3}-.0519217
{txt}{space 11}carrier_total_post4 {c |}{col 32}{res}{space 2} .0018709{col 44}{space 2} .0004203{col 55}{space 1}    4.45{col 64}{space 3}0.000{col 72}{space 4} .0010471{col 85}{space 3} .0026946
{txt}{space 7}carrier_total_lcc_post4 {c |}{col 32}{res}{space 2} .0097654{col 44}{space 2} .0013935{col 55}{space 1}    7.01{col 64}{space 3}0.000{col 72}{space 4} .0070342{col 85}{space 3} .0124967
{txt}{space 15}market_WN_post4 {c |}{col 32}{res}{space 2} .0128685{col 44}{space 2} .0049429{col 55}{space 1}    2.60{col 64}{space 3}0.009{col 72}{space 4} .0031806{col 85}{space 3} .0225564
{txt}{space 10}apt_num_origin_post4 {c |}{col 32}{res}{space 2} .0079827{col 44}{space 2} .0027109{col 55}{space 1}    2.94{col 64}{space 3}0.003{col 72}{space 4} .0026694{col 85}{space 3}  .013296
{txt}apt_num_destination_city_post4 {c |}{col 32}{res}{space 2} .0127512{col 44}{space 2} .0026957{col 55}{space 1}    4.73{col 64}{space 3}0.000{col 72}{space 4} .0074678{col 85}{space 3} .0180346
{txt}{space 25}_cons {c |}{col 32}{res}{space 2} 11.55995{col 44}{space 2}  .031166{col 55}{space 1}  370.92{col 64}{space 3}0.000{col 72}{space 4} 11.49886{col 85}{space 3} 11.62103
{txt}{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                       sigma_u {c |} {res} .63277328
                       {txt}sigma_e {c |} {res}  .2311796
                           {txt}rho {c |} {res} .88224199{txt}   (fraction of variance due to u_i)
{hline 31}{c BT}{hline 64}

{com}.         eststo any_ols_3
{txt}
{com}.         estadd local mfe "No" : any_ols_3
{txt}
{com}.         estadd local qfe "No" : any_ols_3
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_3
{txt}
{com}.         estadd local control "Yes" : any_ols_3
{txt}
{com}.         
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter, fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}   133,152
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     9,145

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.2726{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.0776{col 63}{txt}avg{col 67}={col 69}{res}      14.6
{txt}     Overall = {res}0.0023{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}22{txt},{res}9144{txt}){col 67}={col 70}{res}  2934.68
{txt}corr(u_i, Xb) = {res}-0.0692{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 79:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}     lrevenue{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}mk_post4 {c |}{col 15}{res}{space 2} .0450597{col 27}{space 2} .0054389{col 38}{space 1}    8.28{col 47}{space 3}0.000{col 55}{space 4} .0343982{col 68}{space 3} .0557212
{txt}{space 4}lcc_post4 {c |}{col 15}{res}{space 2}-.1196466{col 27}{space 2} .0103319{col 38}{space 1}  -11.58{col 47}{space 3}0.000{col 55}{space 4}-.1398994{col 68}{space 3}-.0993938
{txt}{space 1}mk_post4_lcc {c |}{col 15}{res}{space 2} .0011848{col 27}{space 2}  .016426{col 38}{space 1}    0.07{col 47}{space 3}0.943{col 55}{space 4}-.0310138{col 68}{space 3} .0333833
{txt}_Iquarter_221 {c |}{col 15}{res}{space 2}-.4790391{col 27}{space 2}  .004066{col 38}{space 1} -117.82{col 47}{space 3}0.000{col 55}{space 4}-.4870093{col 68}{space 3}-.4710689
{txt}_Iquarter_222 {c |}{col 15}{res}{space 2} -.489051{col 27}{space 2} .0054683{col 38}{space 1}  -89.43{col 47}{space 3}0.000{col 55}{space 4}-.4997701{col 68}{space 3}-.4783318
{txt}_Iquarter_223 {c |}{col 15}{res}{space 2}-.5183257{col 27}{space 2} .0035922{col 38}{space 1} -144.29{col 47}{space 3}0.000{col 55}{space 4}-.5253672{col 68}{space 3}-.5112843
{txt}_Iquarter_224 {c |}{col 15}{res}{space 2}-.5938756{col 27}{space 2} .0028366{col 38}{space 1} -209.36{col 47}{space 3}0.000{col 55}{space 4} -.599436{col 68}{space 3}-.5883152
{txt}_Iquarter_225 {c |}{col 15}{res}{space 2}-.4580946{col 27}{space 2} .0043931{col 38}{space 1} -104.28{col 47}{space 3}0.000{col 55}{space 4}-.4667061{col 68}{space 3}-.4494831
{txt}_Iquarter_226 {c |}{col 15}{res}{space 2}-.4719485{col 27}{space 2} .0055915{col 38}{space 1}  -84.40{col 47}{space 3}0.000{col 55}{space 4}-.4829092{col 68}{space 3}-.4609879
{txt}_Iquarter_227 {c |}{col 15}{res}{space 2} -.484336{col 27}{space 2}  .003996{col 38}{space 1} -121.20{col 47}{space 3}0.000{col 55}{space 4}-.4921691{col 68}{space 3}-.4765029
{txt}_Iquarter_228 {c |}{col 15}{res}{space 2}-.5441047{col 27}{space 2} .0031169{col 38}{space 1} -174.57{col 47}{space 3}0.000{col 55}{space 4}-.5502146{col 68}{space 3}-.5379949
{txt}_Iquarter_229 {c |}{col 15}{res}{space 2} -.377559{col 27}{space 2}  .004529{col 38}{space 1}  -83.36{col 47}{space 3}0.000{col 55}{space 4}-.3864369{col 68}{space 3} -.368681
{txt}_Iquarter_230 {c |}{col 15}{res}{space 2}-.4332798{col 27}{space 2} .0058731{col 38}{space 1}  -73.77{col 47}{space 3}0.000{col 55}{space 4}-.4447925{col 68}{space 3}-.4217671
{txt}_Iquarter_231 {c |}{col 15}{res}{space 2}-.4212963{col 27}{space 2}  .004354{col 38}{space 1}  -96.76{col 47}{space 3}0.000{col 55}{space 4}-.4298312{col 68}{space 3}-.4127614
{txt}_Iquarter_232 {c |}{col 15}{res}{space 2}-.4987209{col 27}{space 2} .0034856{col 38}{space 1} -143.08{col 47}{space 3}0.000{col 55}{space 4}-.5055535{col 68}{space 3}-.4918882
{txt}_Iquarter_233 {c |}{col 15}{res}{space 2}-.3089396{col 27}{space 2} .0051594{col 38}{space 1}  -59.88{col 47}{space 3}0.000{col 55}{space 4}-.3190531{col 68}{space 3} -.298826
{txt}_Iquarter_234 {c |}{col 15}{res}{space 2}-.3410391{col 27}{space 2} .0060786{col 38}{space 1}  -56.10{col 47}{space 3}0.000{col 55}{space 4}-.3529545{col 68}{space 3}-.3291236
{txt}_Iquarter_235 {c |}{col 15}{res}{space 2}-.3251315{col 27}{space 2} .0047839{col 38}{space 1}  -67.96{col 47}{space 3}0.000{col 55}{space 4}-.3345091{col 68}{space 3} -.315754
{txt}_Iquarter_236 {c |}{col 15}{res}{space 2}-.4302785{col 27}{space 2} .0042145{col 38}{space 1} -102.09{col 47}{space 3}0.000{col 55}{space 4}-.4385399{col 68}{space 3}-.4220171
{txt}_Iquarter_237 {c |}{col 15}{res}{space 2}-.2500626{col 27}{space 2} .0051536{col 38}{space 1}  -48.52{col 47}{space 3}0.000{col 55}{space 4}-.2601649{col 68}{space 3}-.2399603
{txt}_Iquarter_238 {c |}{col 15}{res}{space 2}  -.27923{col 27}{space 2} .0061916{col 38}{space 1}  -45.10{col 47}{space 3}0.000{col 55}{space 4}-.2913669{col 68}{space 3}-.2670931
{txt}_Iquarter_239 {c |}{col 15}{res}{space 2}-.2897502{col 27}{space 2} .0048418{col 38}{space 1}  -59.84{col 47}{space 3}0.000{col 55}{space 4}-.2992412{col 68}{space 3}-.2802591
{txt}{space 8}_cons {c |}{col 15}{res}{space 2} 12.12253{col 27}{space 2} .0035434{col 38}{space 1} 3421.14{col 47}{space 3}0.000{col 55}{space 4} 12.11558{col 68}{space 3} 12.12947
{txt}{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
      sigma_u {c |} {res} 1.1400497
      {txt}sigma_e {c |} {res} .21769674
          {txt}rho {c |} {res} .96481947{txt}   (fraction of variance due to u_i)
{hline 14}{c BT}{hline 64}

{com}.         eststo any_ols_4
{txt}
{com}.         estadd local mfe "Yes" : any_ols_4
{txt}
{com}.         estadd local qfe "Yes" : any_ols_4
{txt}
{com}.         estadd local itinearycontrol "No" : any_ols_4
{txt}
{com}.         estadd local control "No" : any_ols_4
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter `itineary_contr', fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}   133,152
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     9,145

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.4045{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.1329{col 63}{txt}avg{col 67}={col 69}{res}      14.6
{txt}     Overall = {res}0.2118{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}25{txt},{res}9144{txt}){col 67}={col 70}{res}  2993.68
{txt}corr(u_i, Xb) = {res}0.1524{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 79:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 14}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 15}{c |}{col 27}    Robust
{col 1}     lrevenue{col 15}{c |} Coefficient{col 27}  std. err.{col 39}      t{col 47}   P>|t|{col 55}     [95% con{col 68}f. interval]
{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 5}mk_post4 {c |}{col 15}{res}{space 2} .0611323{col 27}{space 2}  .004592{col 38}{space 1}   13.31{col 47}{space 3}0.000{col 55}{space 4} .0521309{col 68}{space 3} .0701337
{txt}{space 4}lcc_post4 {c |}{col 15}{res}{space 2}-.0963204{col 27}{space 2} .0095389{col 38}{space 1}  -10.10{col 47}{space 3}0.000{col 55}{space 4}-.1150187{col 68}{space 3} -.077622
{txt}{space 1}mk_post4_lcc {c |}{col 15}{res}{space 2}-.0347143{col 27}{space 2} .0141339{col 38}{space 1}   -2.46{col 47}{space 3}0.014{col 55}{space 4}-.0624199{col 68}{space 3}-.0070087
{txt}_Iquarter_221 {c |}{col 15}{res}{space 2}-.4837118{col 27}{space 2} .0037274{col 38}{space 1} -129.77{col 47}{space 3}0.000{col 55}{space 4}-.4910182{col 68}{space 3}-.4764053
{txt}_Iquarter_222 {c |}{col 15}{res}{space 2}-.4835627{col 27}{space 2} .0048664{col 38}{space 1}  -99.37{col 47}{space 3}0.000{col 55}{space 4} -.493102{col 68}{space 3}-.4740235
{txt}_Iquarter_223 {c |}{col 15}{res}{space 2}-.5252286{col 27}{space 2} .0033446{col 38}{space 1} -157.04{col 47}{space 3}0.000{col 55}{space 4}-.5317848{col 68}{space 3}-.5186725
{txt}_Iquarter_224 {c |}{col 15}{res}{space 2}-.5895538{col 27}{space 2}  .002789{col 38}{space 1} -211.39{col 47}{space 3}0.000{col 55}{space 4}-.5950208{col 68}{space 3}-.5840868
{txt}_Iquarter_225 {c |}{col 15}{res}{space 2}-.4543465{col 27}{space 2} .0040944{col 38}{space 1} -110.97{col 47}{space 3}0.000{col 55}{space 4}-.4623724{col 68}{space 3}-.4463207
{txt}_Iquarter_226 {c |}{col 15}{res}{space 2}-.4633258{col 27}{space 2} .0050895{col 38}{space 1}  -91.04{col 47}{space 3}0.000{col 55}{space 4}-.4733024{col 68}{space 3}-.4533493
{txt}_Iquarter_227 {c |}{col 15}{res}{space 2}-.4968231{col 27}{space 2} .0037733{col 38}{space 1} -131.67{col 47}{space 3}0.000{col 55}{space 4}-.5042196{col 68}{space 3}-.4894266
{txt}_Iquarter_228 {c |}{col 15}{res}{space 2}-.5397029{col 27}{space 2} .0031722{col 38}{space 1} -170.14{col 47}{space 3}0.000{col 55}{space 4}-.5459211{col 68}{space 3}-.5334847
{txt}_Iquarter_229 {c |}{col 15}{res}{space 2}-.3746797{col 27}{space 2} .0042892{col 38}{space 1}  -87.35{col 47}{space 3}0.000{col 55}{space 4}-.3830875{col 68}{space 3}-.3662719
{txt}_Iquarter_230 {c |}{col 15}{res}{space 2}-.4226661{col 27}{space 2} .0053737{col 38}{space 1}  -78.66{col 47}{space 3}0.000{col 55}{space 4}-.4331997{col 68}{space 3}-.4121326
{txt}_Iquarter_231 {c |}{col 15}{res}{space 2}-.4349633{col 27}{space 2} .0040941{col 38}{space 1} -106.24{col 47}{space 3}0.000{col 55}{space 4}-.4429886{col 68}{space 3}-.4269379
{txt}_Iquarter_232 {c |}{col 15}{res}{space 2} -.491011{col 27}{space 2} .0035111{col 38}{space 1} -139.85{col 47}{space 3}0.000{col 55}{space 4}-.4978934{col 68}{space 3}-.4841285
{txt}_Iquarter_233 {c |}{col 15}{res}{space 2} -.322629{col 27}{space 2} .0048853{col 38}{space 1}  -66.04{col 47}{space 3}0.000{col 55}{space 4}-.3322052{col 68}{space 3}-.3130527
{txt}_Iquarter_234 {c |}{col 15}{res}{space 2}-.3534601{col 27}{space 2} .0056986{col 38}{space 1}  -62.03{col 47}{space 3}0.000{col 55}{space 4}-.3646306{col 68}{space 3}-.3422896
{txt}_Iquarter_235 {c |}{col 15}{res}{space 2}-.3628088{col 27}{space 2} .0046677{col 38}{space 1}  -77.73{col 47}{space 3}0.000{col 55}{space 4}-.3719586{col 68}{space 3} -.353659
{txt}_Iquarter_236 {c |}{col 15}{res}{space 2}-.4419774{col 27}{space 2} .0042385{col 38}{space 1} -104.28{col 47}{space 3}0.000{col 55}{space 4}-.4502857{col 68}{space 3} -.433669
{txt}_Iquarter_237 {c |}{col 15}{res}{space 2}-.2675107{col 27}{space 2} .0049876{col 38}{space 1}  -53.64{col 47}{space 3}0.000{col 55}{space 4}-.2772875{col 68}{space 3}-.2577339
{txt}_Iquarter_238 {c |}{col 15}{res}{space 2}-.2950219{col 27}{space 2} .0057945{col 38}{space 1}  -50.91{col 47}{space 3}0.000{col 55}{space 4}-.3063805{col 68}{space 3}-.2836633
{txt}_Iquarter_239 {c |}{col 15}{res}{space 2}-.3297202{col 27}{space 2} .0047141{col 38}{space 1}  -69.94{col 47}{space 3}0.000{col 55}{space 4}-.3389608{col 68}{space 3}-.3204796
{txt}{space 3}coupon_num {c |}{col 15}{res}{space 2}-.3147596{col 27}{space 2} .0430151{col 38}{space 1}   -7.32{col 47}{space 3}0.000{col 55}{space 4}-.3990789{col 68}{space 3}-.2304403
{txt}{space 4}roundtrip {c |}{col 15}{res}{space 2} 1.342292{col 27}{space 2} .0790102{col 38}{space 1}   16.99{col 47}{space 3}0.000{col 55}{space 4} 1.187415{col 68}{space 3}  1.49717
{txt}{space 5}transfer {c |}{col 15}{res}{space 2}-.2010031{col 27}{space 2} .0668955{col 38}{space 1}   -3.00{col 47}{space 3}0.003{col 55}{space 4}-.3321332{col 68}{space 3} -.069873
{txt}{space 8}_cons {c |}{col 15}{res}{space 2} 12.26485{col 27}{space 2} .0296253{col 38}{space 1}  414.00{col 47}{space 3}0.000{col 55}{space 4} 12.20678{col 68}{space 3} 12.32292
{txt}{hline 14}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
      sigma_u {c |} {res} 1.0297545
      {txt}sigma_e {c |} {res} .19698701
          {txt}rho {c |} {res} .96469801{txt}   (fraction of variance due to u_i)
{hline 14}{c BT}{hline 64}

{com}.         eststo any_ols_5
{txt}
{com}.         estadd local mfe "Yes" : any_ols_5
{txt}
{com}.         estadd local qfe "Yes" : any_ols_5
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_5
{txt}
{com}.         estadd local control "No" : any_ols_5
{txt}
{com}. 
. xi: xtreg l`dep' mk_`post' lcc_`post' mk_`post'_lcc i.quarter `itineary_contr' `seat_contr' `interactions', fe cluster(market_id)
{txt}i.quarter{col 19}_Iquarter_220-239{col 39}(naturally coded; _Iquarter_220 omitted)
{res}
{txt}Fixed-effects (within) regression{col 49}Number of obs{col 67}={col 69}{res}   133,148
{txt}Group variable: {res}market_id{txt}{col 49}Number of groups{col 67}={col 69}{res}     9,145

{txt}R-squared:{col 49}Obs per group:
     Within  = {res}0.4073{col 63}{txt}min{col 67}={col 69}{res}         1
{txt}     Between = {res}0.1403{col 63}{txt}avg{col 67}={col 69}{res}      14.6
{txt}     Overall = {res}0.2217{col 63}{txt}max{col 67}={col 69}{res}        20

{txt}{col 49}F({res}33{txt},{res}9144{txt}){col 67}={col 70}{res}  2311.79
{txt}corr(u_i, Xb) = {res}0.1669{txt}{col 49}Prob > F{col 67}={col 73}{res}0.0000

{txt}{ralign 96:(Std. err. adjusted for {res:9,145} clusters in {res:market_id})}
{hline 31}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 32}{c |}{col 44}    Robust
{col 1}                      lrevenue{col 32}{c |} Coefficient{col 44}  std. err.{col 56}      t{col 64}   P>|t|{col 72}     [95% con{col 85}f. interval]
{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 22}mk_post4 {c |}{col 32}{res}{space 2} .0667978{col 44}{space 2} .0048629{col 55}{space 1}   13.74{col 64}{space 3}0.000{col 72}{space 4} .0572653{col 85}{space 3} .0763302
{txt}{space 21}lcc_post4 {c |}{col 32}{res}{space 2}-.0937252{col 44}{space 2}  .009769{col 55}{space 1}   -9.59{col 64}{space 3}0.000{col 72}{space 4}-.1128747{col 85}{space 3}-.0745757
{txt}{space 18}mk_post4_lcc {c |}{col 32}{res}{space 2}-.0729727{col 44}{space 2}  .014112{col 55}{space 1}   -5.17{col 64}{space 3}0.000{col 72}{space 4}-.1006354{col 85}{space 3}  -.04531
{txt}{space 17}_Iquarter_221 {c |}{col 32}{res}{space 2}-.4822469{col 44}{space 2} .0037224{col 55}{space 1} -129.55{col 64}{space 3}0.000{col 72}{space 4}-.4895436{col 85}{space 3}-.4749502
{txt}{space 17}_Iquarter_222 {c |}{col 32}{res}{space 2}-.4805432{col 44}{space 2} .0048657{col 55}{space 1}  -98.76{col 64}{space 3}0.000{col 72}{space 4} -.490081{col 85}{space 3}-.4710053
{txt}{space 17}_Iquarter_223 {c |}{col 32}{res}{space 2}-.5236074{col 44}{space 2} .0033472{col 55}{space 1} -156.43{col 64}{space 3}0.000{col 72}{space 4}-.5301687{col 85}{space 3}-.5170461
{txt}{space 17}_Iquarter_224 {c |}{col 32}{res}{space 2}-.5870635{col 44}{space 2} .0027975{col 55}{space 1} -209.85{col 64}{space 3}0.000{col 72}{space 4}-.5925472{col 85}{space 3}-.5815798
{txt}{space 17}_Iquarter_225 {c |}{col 32}{res}{space 2}-.4528158{col 44}{space 2} .0040809{col 55}{space 1} -110.96{col 64}{space 3}0.000{col 72}{space 4}-.4608153{col 85}{space 3}-.4448162
{txt}{space 17}_Iquarter_226 {c |}{col 32}{res}{space 2}-.4611298{col 44}{space 2} .0050788{col 55}{space 1}  -90.80{col 64}{space 3}0.000{col 72}{space 4}-.4710853{col 85}{space 3}-.4511742
{txt}{space 17}_Iquarter_227 {c |}{col 32}{res}{space 2}-.4976025{col 44}{space 2} .0037578{col 55}{space 1} -132.42{col 64}{space 3}0.000{col 72}{space 4}-.5049686{col 85}{space 3}-.4902364
{txt}{space 17}_Iquarter_228 {c |}{col 32}{res}{space 2}-.5502239{col 44}{space 2} .0033189{col 55}{space 1} -165.79{col 64}{space 3}0.000{col 72}{space 4}-.5567296{col 85}{space 3}-.5437181
{txt}{space 17}_Iquarter_229 {c |}{col 32}{res}{space 2}-.3840911{col 44}{space 2} .0043941{col 55}{space 1}  -87.41{col 64}{space 3}0.000{col 72}{space 4}-.3927046{col 85}{space 3}-.3754776
{txt}{space 17}_Iquarter_230 {c |}{col 32}{res}{space 2}-.4313839{col 44}{space 2} .0054572{col 55}{space 1}  -79.05{col 64}{space 3}0.000{col 72}{space 4}-.4420812{col 85}{space 3}-.4206866
{txt}{space 17}_Iquarter_231 {c |}{col 32}{res}{space 2}-.4487348{col 44}{space 2} .0042507{col 55}{space 1} -105.57{col 64}{space 3}0.000{col 72}{space 4}-.4570671{col 85}{space 3}-.4404026
{txt}{space 17}_Iquarter_232 {c |}{col 32}{res}{space 2}-.5034697{col 44}{space 2} .0036923{col 55}{space 1} -136.36{col 64}{space 3}0.000{col 72}{space 4}-.5107075{col 85}{space 3}-.4962319
{txt}{space 17}_Iquarter_233 {c |}{col 32}{res}{space 2}-.3595167{col 44}{space 2}  .008119{col 55}{space 1}  -44.28{col 64}{space 3}0.000{col 72}{space 4}-.3754318{col 85}{space 3}-.3436016
{txt}{space 17}_Iquarter_234 {c |}{col 32}{res}{space 2}-.3914189{col 44}{space 2} .0086192{col 55}{space 1}  -45.41{col 64}{space 3}0.000{col 72}{space 4}-.4083145{col 85}{space 3}-.3745232
{txt}{space 17}_Iquarter_235 {c |}{col 32}{res}{space 2}-.4077198{col 44}{space 2} .0080783{col 55}{space 1}  -50.47{col 64}{space 3}0.000{col 72}{space 4}-.4235551{col 85}{space 3}-.3918845
{txt}{space 17}_Iquarter_236 {c |}{col 32}{res}{space 2}-.4873293{col 44}{space 2} .0078317{col 55}{space 1}  -62.23{col 64}{space 3}0.000{col 72}{space 4}-.5026812{col 85}{space 3}-.4719774
{txt}{space 17}_Iquarter_237 {c |}{col 32}{res}{space 2}-.3144829{col 44}{space 2} .0083043{col 55}{space 1}  -37.87{col 64}{space 3}0.000{col 72}{space 4}-.3307613{col 85}{space 3}-.2982046
{txt}{space 17}_Iquarter_238 {c |}{col 32}{res}{space 2}-.3257002{col 44}{space 2} .0087338{col 55}{space 1}  -37.29{col 64}{space 3}0.000{col 72}{space 4}-.3428204{col 85}{space 3}-.3085799
{txt}{space 17}_Iquarter_239 {c |}{col 32}{res}{space 2}-.3613778{col 44}{space 2} .0080513{col 55}{space 1}  -44.88{col 64}{space 3}0.000{col 72}{space 4}-.3771601{col 85}{space 3}-.3455955
{txt}{space 20}coupon_num {c |}{col 32}{res}{space 2}-.3206599{col 44}{space 2} .0435274{col 55}{space 1}   -7.37{col 64}{space 3}0.000{col 72}{space 4}-.4059833{col 85}{space 3}-.2353366
{txt}{space 21}roundtrip {c |}{col 32}{res}{space 2} 1.359553{col 44}{space 2} .0799514{col 55}{space 1}   17.00{col 64}{space 3}0.000{col 72}{space 4} 1.202831{col 85}{space 3} 1.516276
{txt}{space 22}transfer {c |}{col 32}{res}{space 2}-.1908548{col 44}{space 2} .0679429{col 55}{space 1}   -2.81{col 64}{space 3}0.005{col 72}{space 4} -.324038{col 85}{space 3}-.0576715
{txt}{space 20}restricted {c |}{col 32}{res}{space 2} .1252503{col 44}{space 2} .0143243{col 55}{space 1}    8.74{col 64}{space 3}0.000{col 72}{space 4} .0971715{col 85}{space 3}  .153329
{txt}{space 22}business {c |}{col 32}{res}{space 2} .5458786{col 44}{space 2} .0723982{col 55}{space 1}    7.54{col 64}{space 3}0.000{col 72}{space 4} .4039619{col 85}{space 3} .6877953
{txt}{space 25}first {c |}{col 32}{res}{space 2}-.1193208{col 44}{space 2} .0175971{col 55}{space 1}   -6.78{col 64}{space 3}0.000{col 72}{space 4} -.153815{col 85}{space 3}-.0848267
{txt}{space 11}carrier_total_post4 {c |}{col 32}{res}{space 2} .0009246{col 44}{space 2} .0004605{col 55}{space 1}    2.01{col 64}{space 3}0.045{col 72}{space 4} .0000218{col 85}{space 3} .0018273
{txt}{space 7}carrier_total_lcc_post4 {c |}{col 32}{res}{space 2} .0038384{col 44}{space 2} .0014647{col 55}{space 1}    2.62{col 64}{space 3}0.009{col 72}{space 4} .0009672{col 85}{space 3} .0067095
{txt}{space 15}market_WN_post4 {c |}{col 32}{res}{space 2} .0023562{col 44}{space 2} .0049233{col 55}{space 1}    0.48{col 64}{space 3}0.632{col 72}{space 4}-.0072947{col 85}{space 3}  .012007
{txt}{space 10}apt_num_origin_post4 {c |}{col 32}{res}{space 2}-.0012433{col 44}{space 2} .0029818{col 55}{space 1}   -0.42{col 64}{space 3}0.677{col 72}{space 4}-.0070884{col 85}{space 3} .0046017
{txt}apt_num_destination_city_post4 {c |}{col 32}{res}{space 2} .0046898{col 44}{space 2} .0030386{col 55}{space 1}    1.54{col 64}{space 3}0.123{col 72}{space 4}-.0012665{col 85}{space 3} .0106462
{txt}{space 25}_cons {c |}{col 32}{res}{space 2} 12.24892{col 44}{space 2} .0300277{col 55}{space 1}  407.92{col 64}{space 3}0.000{col 72}{space 4} 12.19006{col 85}{space 3} 12.30779
{txt}{hline 31}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
                       sigma_u {c |} {res} 1.0262588
                       {txt}sigma_e {c |} {res} .19651811
                           {txt}rho {c |} {res} .96462866{txt}   (fraction of variance due to u_i)
{hline 31}{c BT}{hline 64}

{com}.         eststo any_ols_6
{txt}
{com}.         estadd local mfe "Yes" : any_ols_6
{txt}
{com}.         estadd local qfe "Yes" : any_ols_6
{txt}
{com}.         estadd local itinearycontrol "Yes" : any_ols_6
{txt}
{com}.         estadd local control "Yes" : any_ols_6
{txt}
{com}. 
. * Combine all OLS estimates to one table
. /*
> local dep fare
> local post post4
> local seat_contr restricted business first
> local itineary_contr coupon_num roundtrip transfer
> local interactions carrier_total_`post' carrier_total_lcc_`post' market_WN_`post' apt_num_origin_`post' apt_num_destination_city_`post'
> */
. 
. esttab any_ols* using "output/tables/`post'`dep'.tex", replace booktabs ///
>         keep(mk_`post' lcc_`post' mk_`post'_lcc `itineary_contr' `seat_contr' `interactions') label b(5) se(5) star(* 0.10 ** 0.05 *** 0.01) noabbrev ///
>         coeflabels(mk_`post' "ASVX market $\times$ Post" lcc_`post' "LCC ratio $\times$ Post" mk_`post'_lcc "ASVX market $\times$ LCC ratio $\times$ Post" coupon_num "Number of coupons" roundtrip "\shortstack{c -(}Roundtrip \\ (dummy){c )-}" transfer "\shortstack{c -(}Transfer \\ (dummy){c )-}" restricted "Restricted seat ratio" business "Business class ratio" first "First class ratio" carrier_total_`post' "Total # of carriers $\times$ Post" carrier_total_lcc_`post' "Total # of LCC carriers $\times$ Post" market_WN_`post' "Southwest dummy $\times$ Post" apt_num_origin_`post' "Number of aiports in origin $\times$ Post" apt_num_destination_city_`post' "Number of aiports in destination $\times$ Post") ///
>         stats(mfe qfe itinearycontrol control N r2, fmt(0 0 0 0 0 a3) ///
>                 labels("Market FE" "Time FE" "Itineary Controls" "Other Controls" "N" "R^2")) ///
>         title("Fixed Effects Regression: `post' `dep'" \label{c -(}`post'`dep'{c )-}) ///
>         mgroups("OLS" "Fixed Effects", pattern(1 0 0 1 0 0) prefix(\multicolumn{c -(}@span{c )-}{c -(}c{c )-}{c -(}) suffix({c )-}) span erepeat(\cmidrule(lr){c -(}@span{c )-})) 
{res}{txt}(output written to {browse  `"output/tables/post4revenue.tex"'})

{com}. 
{txt}end of do-file

{com}. do "/var/folders/x8/j5kfrbxj3sd8zff26jdb_07h0000gn/T//SD00530.000000"
{txt}
{com}. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/Users/tsukik/Downloads/airline_tatsuki/master.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res} 4 Apr 2022, 18:48:00
{txt}{.-}
{smcl}
{txt}{sf}{ul off}