{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/tsukik/Downloads/airline_tatsuki/code/data_clean.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}20 Feb 2022, 17:10:17
{txt}
{com}. cd "${c -(}rep_folder{c )-}/input"
{res}/Users/tsukik/Downloads/airline_tatsuki/input
{txt}
{com}. 
. *** 0. Data merger
. /*
> use "dta_raw/public201503", clear
> 
> local quarter 201503 201506 201509 201512 201603 201606 201609 201612 201703 201706 201709 201712 201803 201806 201809 201812 201903 201906 201909 201912 
> 
> disp `"`quarter'"'
> *201503 201506 201509 201512 201603 201606 201609 201612 201703 201706 201709 201712 201803 201806 201809 201812 201903 201906 201909 201912
> 
> foreach q of local quarter {c -(}
>         append using "dta_raw/public`q'"
> {c )-}
> save "dta_clean/merged", replace
> */
. 
. use "dta_clean/${c -(}dataset{c )-}", clear
{txt}
{com}. 
. 
. *** 1.Drop unnecessary variables
. drop airport_id trip report_carrier airport_id2* ticketed* trip*
{txt}
{com}. 
. 
. *** 2. Rename columns in a convenient manner
. order dollar_id airport_city_code city_market_id state_id opeartin_carrier coupon fare_type distance airport_city city_market_id2 state_id2, after(num_passenger)
{txt}
{com}. 
. rename (index-state_id2_3) (index fare quarter coupon_num passenger dollar_id airport0 city0 state0 carrier1 coupon1 fare_type1 distance1 airport1 city1 state1 carrier2 coupon2 fare_type2 distance2 airport2 city2 state2 carrier3 coupon3 fare_type3 distance3 airport3 city3 state3 carrier4 coupon4 fare_type4 distance4 airport4 city4 state4)
{res}{txt}
{com}. 
. label variable airport0 "Origin Airport Code (3 characters)"
{txt}
{com}. label variable city0 "Origin City Market ID (5 digits)"
{txt}
{com}. label variable state0 "State Code (2 digits)"
{txt}
{com}. 
. 
. *** 3. Convert variables to a usable form
. *Convert to numerics (Destring/Dummy)
. *destring fare quarter coupon_num passenger city0 state0, replace
. local vars fare quarter coupon_num passenger city0 state0
{txt}
{com}. foreach m of local vars {c -(}
{txt}  2{com}.         gen long `m'Temp = real(`m')
{txt}  3{com}.         order `m'Temp, after(`m')
{txt}  4{com}.         drop `m'
{txt}  5{com}.         rename `m'Temp `m'
{txt}  6{com}. {c )-}
{res}{txt}
{com}. 
. forvalues n=1/4 {c -(}
{txt}  2{com}.         **Set our default is restriced coach class (X): restriced
.         gen restricted`n'=1 if inlist(fare_type`n', "F", "C", "Y")
{txt}  3{com}.         replace restricted`n'=0 if inlist(fare_type`n', "G", "D", "X")
{txt}  4{com}.         *tab fare_type`n' restricted`n', m
.         gen business`n'=1 if inlist(fare_type`n', "C", "D")
{txt}  5{com}.         replace business`n'=0 if inlist(fare_type`n', "F", "G", "X", "Y")
{txt}  6{com}.         *tab fare_type`n' business`n', m
.         gen first`n'=1 if inlist(fare_type`n', "F", "G")
{txt}  7{com}.         replace first`n'=0 if inlist(fare_type`n', "C", "D", "X", "Y")
{txt}  8{com}.         *tab fare_type`n' first`n', m
.         
.         **destring variables: distance, city state
.         *destring distance`n' city`n' state`n', replace
.         local vars distance`n' city`n' state`n'
{txt}  9{com}.         foreach m of local vars {c -(}
{txt} 10{com}.                 gen long `m'Temp = real(`m')
{txt} 11{com}.                 order `m'Temp, after(`m')
{txt} 12{com}.                 drop `m'
{txt} 13{com}.                 rename `m'Temp `m'
{txt} 14{com}.         {c )-}
{txt} 15{com}. {c )-}
{txt}(67,576,110 missing values generated)
(67,544,586 real changes made)
(84,164,450 missing values generated)
(84,132,926 real changes made)
(81,146,659 missing values generated)
(81,115,135 real changes made)
{res}{txt}(71,148,691 missing values generated)
(57,447,581 real changes made)
(84,539,732 missing values generated)
(70,838,622 real changes made)
(82,391,992 missing values generated)
(68,690,882 real changes made)
(12,060,216 missing values generated)
{res}{txt}(12,060,216 missing values generated)
{res}{txt}(12,060,216 missing values generated)
{res}{txt}(80,030,862 missing values generated)
(25,462,183 real changes made)
(85,317,839 missing values generated)
(30,749,160 real changes made)
(84,758,813 missing values generated)
(30,190,134 real changes made)
(53,429,924 missing values generated)
{res}{txt}(53,429,924 missing values generated)
{res}{txt}(53,429,924 missing values generated)
{res}{txt}(81,121,590 missing values generated)
(20,682,968 real changes made)
(85,388,747 missing values generated)
(24,950,125 real changes made)
(84,996,089 missing values generated)
(24,557,467 real changes made)
(60,298,046 missing values generated)
{res}{txt}(60,298,046 missing values generated)
{res}{txt}(60,298,046 missing values generated)
{res}{txt}
{com}. 
. 
. 
. *** 4. Select samples
. drop if dollar_id == "*" //questionable fare value
{txt}(438,416 observations deleted)

{com}. drop if coupon_num>4 //more than 4 coupons are excluded
{txt}(2,782,910 observations deleted)

{com}. 
. 
. drop opeartin_carrier_4-state_id2_15 dollar_id coupon1 coupon2 coupon3 coupon4
{txt}
{com}. 
. 
. /*
> egen IQRfare=iqr(fare), by(fare_type1 fare_type2 fare_type3 fare_type4)
> egen P25fare=pctile(fare), p(25) by(fare_type1 fare_type2 fare_type3 fare_type4)
> egen P75fare=pctile(fare), p(75) by(fare_type1 fare_type2 fare_type3 fare_type4)
> gen Ifare=(fare>P75empGR+3*IQRempGR | fare<P25fare-3*IQRfare) if fare<. & IQRfare <. & P25fare<. & P75fare<. 
> gen fareI= fare if Ifare!=1
> drop IQRfare P25fare P75fare
> // Extreme outliers are excluded: defined as values that are (a) greater than the 75th percentile plus 3 times the IQR or (b) less than the 25th percentile minus 3 times the IQR
> 
> *==============================================================================
> 
> prog def out3IQR
>     dis "3*IQR outliers for `1' by `2' `3' `4' `5' `6'"
>         qui egen IQR`1'=iqr(`1'), by(`2' `3' `4' `5' `6')
>         qui egen P25`1'=pctile(`1'), p(25) by(`2' `3' `4' `5' `6')
>         qui egen P75`1'=pctile(`1'), p(75) by(`2' `3' `4' `5' `6')
>         qui gen I`1'=(`1'>P75`1'+3*IQR`1' | `1'<P25`1'-3*IQR`1') if ///
>                 `1'<. & IQR`1'<. & P25`1'<. & P75`1'<.
>         qui gen `1'I=`1' if I`1'!=1
>         drop IQR`1' P25`1' P75`1'
> end
> out3IQR fare_type1 fare_type2 fare_type3 fare_type4
> 
> ****drop if num_passenger<90  fewer than 90 passengers during a quarter.
> ****drop if coupon=="D" OR coupon=="E"
> */
. 
. drop if fare <= 11 
{txt}(4,240,892 observations deleted)

{com}. replace index = _n
{txt}(78,299,743 real changes made)

{com}. 
. save "dta_clean/${c -(}dataset{c )-}_clean", replace
{txt}{p 0 4 2}
file {bf}
dta_clean/merged_clean.dta{rm}
saved
{p_end}

{com}. 
. cd "${c -(}rep_folder{c )-}"
{res}/Users/tsukik/Downloads/airline_tatsuki
{txt}
{com}. log close 
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/Users/tsukik/Downloads/airline_tatsuki/code/data_clean.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}20 Feb 2022, 18:03:44
{txt}{.-}
{smcl}
{txt}{sf}{ul off}